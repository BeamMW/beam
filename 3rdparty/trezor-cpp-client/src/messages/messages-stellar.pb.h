// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages-stellar.proto

#ifndef PROTOBUF_INCLUDED_messages_2dstellar_2eproto
#define PROTOBUF_INCLUDED_messages_2dstellar_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_messages_2dstellar_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_messages_2dstellar_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[17]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_messages_2dstellar_2eproto();
namespace hw {
namespace trezor {
namespace messages {
namespace stellar {
class StellarAccountMergeOp;
class StellarAccountMergeOpDefaultTypeInternal;
extern StellarAccountMergeOpDefaultTypeInternal _StellarAccountMergeOp_default_instance_;
class StellarAddress;
class StellarAddressDefaultTypeInternal;
extern StellarAddressDefaultTypeInternal _StellarAddress_default_instance_;
class StellarAllowTrustOp;
class StellarAllowTrustOpDefaultTypeInternal;
extern StellarAllowTrustOpDefaultTypeInternal _StellarAllowTrustOp_default_instance_;
class StellarAssetType;
class StellarAssetTypeDefaultTypeInternal;
extern StellarAssetTypeDefaultTypeInternal _StellarAssetType_default_instance_;
class StellarBumpSequenceOp;
class StellarBumpSequenceOpDefaultTypeInternal;
extern StellarBumpSequenceOpDefaultTypeInternal _StellarBumpSequenceOp_default_instance_;
class StellarChangeTrustOp;
class StellarChangeTrustOpDefaultTypeInternal;
extern StellarChangeTrustOpDefaultTypeInternal _StellarChangeTrustOp_default_instance_;
class StellarCreateAccountOp;
class StellarCreateAccountOpDefaultTypeInternal;
extern StellarCreateAccountOpDefaultTypeInternal _StellarCreateAccountOp_default_instance_;
class StellarCreatePassiveOfferOp;
class StellarCreatePassiveOfferOpDefaultTypeInternal;
extern StellarCreatePassiveOfferOpDefaultTypeInternal _StellarCreatePassiveOfferOp_default_instance_;
class StellarGetAddress;
class StellarGetAddressDefaultTypeInternal;
extern StellarGetAddressDefaultTypeInternal _StellarGetAddress_default_instance_;
class StellarManageDataOp;
class StellarManageDataOpDefaultTypeInternal;
extern StellarManageDataOpDefaultTypeInternal _StellarManageDataOp_default_instance_;
class StellarManageOfferOp;
class StellarManageOfferOpDefaultTypeInternal;
extern StellarManageOfferOpDefaultTypeInternal _StellarManageOfferOp_default_instance_;
class StellarPathPaymentOp;
class StellarPathPaymentOpDefaultTypeInternal;
extern StellarPathPaymentOpDefaultTypeInternal _StellarPathPaymentOp_default_instance_;
class StellarPaymentOp;
class StellarPaymentOpDefaultTypeInternal;
extern StellarPaymentOpDefaultTypeInternal _StellarPaymentOp_default_instance_;
class StellarSetOptionsOp;
class StellarSetOptionsOpDefaultTypeInternal;
extern StellarSetOptionsOpDefaultTypeInternal _StellarSetOptionsOp_default_instance_;
class StellarSignTx;
class StellarSignTxDefaultTypeInternal;
extern StellarSignTxDefaultTypeInternal _StellarSignTx_default_instance_;
class StellarSignedTx;
class StellarSignedTxDefaultTypeInternal;
extern StellarSignedTxDefaultTypeInternal _StellarSignedTx_default_instance_;
class StellarTxOpRequest;
class StellarTxOpRequestDefaultTypeInternal;
extern StellarTxOpRequestDefaultTypeInternal _StellarTxOpRequest_default_instance_;
}  // namespace stellar
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace google {
namespace protobuf {
template<> ::hw::trezor::messages::stellar::StellarAccountMergeOp* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAccountMergeOp>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarAddress* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAddress>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarAllowTrustOp* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAllowTrustOp>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarAssetType* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAssetType>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarBumpSequenceOp* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarBumpSequenceOp>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarChangeTrustOp* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarChangeTrustOp>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarCreateAccountOp* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarCreateAccountOp>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarGetAddress* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarGetAddress>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarManageDataOp* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarManageDataOp>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarManageOfferOp* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarManageOfferOp>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarPathPaymentOp* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarPathPaymentOp>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarPaymentOp* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarPaymentOp>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarSetOptionsOp* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarSetOptionsOp>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarSignTx* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarSignTx>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarSignedTx* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarSignedTx>(Arena*);
template<> ::hw::trezor::messages::stellar::StellarTxOpRequest* Arena::CreateMaybeMessage<::hw::trezor::messages::stellar::StellarTxOpRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace hw {
namespace trezor {
namespace messages {
namespace stellar {

// ===================================================================

class StellarAssetType final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarAssetType) */ {
 public:
  StellarAssetType();
  virtual ~StellarAssetType();

  StellarAssetType(const StellarAssetType& from);

  inline StellarAssetType& operator=(const StellarAssetType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarAssetType(StellarAssetType&& from) noexcept
    : StellarAssetType() {
    *this = ::std::move(from);
  }

  inline StellarAssetType& operator=(StellarAssetType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarAssetType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarAssetType* internal_default_instance() {
    return reinterpret_cast<const StellarAssetType*>(
               &_StellarAssetType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StellarAssetType* other);
  friend void swap(StellarAssetType& a, StellarAssetType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarAssetType* New() const final {
    return CreateMaybeMessage<StellarAssetType>(nullptr);
  }

  StellarAssetType* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarAssetType>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarAssetType& from);
  void MergeFrom(const StellarAssetType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarAssetType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // optional string issuer = 3;
  bool has_issuer() const;
  void clear_issuer();
  static const int kIssuerFieldNumber = 3;
  const ::std::string& issuer() const;
  void set_issuer(const ::std::string& value);
  #if LANG_CXX11
  void set_issuer(::std::string&& value);
  #endif
  void set_issuer(const char* value);
  void set_issuer(const char* value, size_t size);
  ::std::string* mutable_issuer();
  ::std::string* release_issuer();
  void set_allocated_issuer(::std::string* issuer);

  // optional uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarAssetType)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr issuer_;
  ::google::protobuf::uint32 type_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarGetAddress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarGetAddress) */ {
 public:
  StellarGetAddress();
  virtual ~StellarGetAddress();

  StellarGetAddress(const StellarGetAddress& from);

  inline StellarGetAddress& operator=(const StellarGetAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarGetAddress(StellarGetAddress&& from) noexcept
    : StellarGetAddress() {
    *this = ::std::move(from);
  }

  inline StellarGetAddress& operator=(StellarGetAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarGetAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarGetAddress* internal_default_instance() {
    return reinterpret_cast<const StellarGetAddress*>(
               &_StellarGetAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(StellarGetAddress* other);
  friend void swap(StellarGetAddress& a, StellarGetAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarGetAddress* New() const final {
    return CreateMaybeMessage<StellarGetAddress>(nullptr);
  }

  StellarGetAddress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarGetAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarGetAddress& from);
  void MergeFrom(const StellarGetAddress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarGetAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 address_n = 1;
  int address_n_size() const;
  void clear_address_n();
  static const int kAddressNFieldNumber = 1;
  ::google::protobuf::uint32 address_n(int index) const;
  void set_address_n(int index, ::google::protobuf::uint32 value);
  void add_address_n(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      address_n() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_address_n();

  // optional bool show_display = 2;
  bool has_show_display() const;
  void clear_show_display();
  static const int kShowDisplayFieldNumber = 2;
  bool show_display() const;
  void set_show_display(bool value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarGetAddress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;
  bool show_display_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarAddress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarAddress) */ {
 public:
  StellarAddress();
  virtual ~StellarAddress();

  StellarAddress(const StellarAddress& from);

  inline StellarAddress& operator=(const StellarAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarAddress(StellarAddress&& from) noexcept
    : StellarAddress() {
    *this = ::std::move(from);
  }

  inline StellarAddress& operator=(StellarAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarAddress* internal_default_instance() {
    return reinterpret_cast<const StellarAddress*>(
               &_StellarAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(StellarAddress* other);
  friend void swap(StellarAddress& a, StellarAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarAddress* New() const final {
    return CreateMaybeMessage<StellarAddress>(nullptr);
  }

  StellarAddress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarAddress& from);
  void MergeFrom(const StellarAddress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarAddress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarSignTx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarSignTx) */ {
 public:
  StellarSignTx();
  virtual ~StellarSignTx();

  StellarSignTx(const StellarSignTx& from);

  inline StellarSignTx& operator=(const StellarSignTx& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarSignTx(StellarSignTx&& from) noexcept
    : StellarSignTx() {
    *this = ::std::move(from);
  }

  inline StellarSignTx& operator=(StellarSignTx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarSignTx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarSignTx* internal_default_instance() {
    return reinterpret_cast<const StellarSignTx*>(
               &_StellarSignTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(StellarSignTx* other);
  friend void swap(StellarSignTx& a, StellarSignTx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarSignTx* New() const final {
    return CreateMaybeMessage<StellarSignTx>(nullptr);
  }

  StellarSignTx* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarSignTx>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarSignTx& from);
  void MergeFrom(const StellarSignTx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarSignTx* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 address_n = 2;
  int address_n_size() const;
  void clear_address_n();
  static const int kAddressNFieldNumber = 2;
  ::google::protobuf::uint32 address_n(int index) const;
  void set_address_n(int index, ::google::protobuf::uint32 value);
  void add_address_n(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      address_n() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_address_n();

  // optional string network_passphrase = 3;
  bool has_network_passphrase() const;
  void clear_network_passphrase();
  static const int kNetworkPassphraseFieldNumber = 3;
  const ::std::string& network_passphrase() const;
  void set_network_passphrase(const ::std::string& value);
  #if LANG_CXX11
  void set_network_passphrase(::std::string&& value);
  #endif
  void set_network_passphrase(const char* value);
  void set_network_passphrase(const char* value, size_t size);
  ::std::string* mutable_network_passphrase();
  ::std::string* release_network_passphrase();
  void set_allocated_network_passphrase(::std::string* network_passphrase);

  // optional string source_account = 4;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 4;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional string memo_text = 11;
  bool has_memo_text() const;
  void clear_memo_text();
  static const int kMemoTextFieldNumber = 11;
  const ::std::string& memo_text() const;
  void set_memo_text(const ::std::string& value);
  #if LANG_CXX11
  void set_memo_text(::std::string&& value);
  #endif
  void set_memo_text(const char* value);
  void set_memo_text(const char* value, size_t size);
  ::std::string* mutable_memo_text();
  ::std::string* release_memo_text();
  void set_allocated_memo_text(::std::string* memo_text);

  // optional bytes memo_hash = 13;
  bool has_memo_hash() const;
  void clear_memo_hash();
  static const int kMemoHashFieldNumber = 13;
  const ::std::string& memo_hash() const;
  void set_memo_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_memo_hash(::std::string&& value);
  #endif
  void set_memo_hash(const char* value);
  void set_memo_hash(const void* value, size_t size);
  ::std::string* mutable_memo_hash();
  ::std::string* release_memo_hash();
  void set_allocated_memo_hash(::std::string* memo_hash);

  // optional uint64 sequence_number = 6;
  bool has_sequence_number() const;
  void clear_sequence_number();
  static const int kSequenceNumberFieldNumber = 6;
  ::google::protobuf::uint64 sequence_number() const;
  void set_sequence_number(::google::protobuf::uint64 value);

  // optional uint32 fee = 5;
  bool has_fee() const;
  void clear_fee();
  static const int kFeeFieldNumber = 5;
  ::google::protobuf::uint32 fee() const;
  void set_fee(::google::protobuf::uint32 value);

  // optional uint32 timebounds_start = 8;
  bool has_timebounds_start() const;
  void clear_timebounds_start();
  static const int kTimeboundsStartFieldNumber = 8;
  ::google::protobuf::uint32 timebounds_start() const;
  void set_timebounds_start(::google::protobuf::uint32 value);

  // optional uint32 timebounds_end = 9;
  bool has_timebounds_end() const;
  void clear_timebounds_end();
  static const int kTimeboundsEndFieldNumber = 9;
  ::google::protobuf::uint32 timebounds_end() const;
  void set_timebounds_end(::google::protobuf::uint32 value);

  // optional uint32 memo_type = 10;
  bool has_memo_type() const;
  void clear_memo_type();
  static const int kMemoTypeFieldNumber = 10;
  ::google::protobuf::uint32 memo_type() const;
  void set_memo_type(::google::protobuf::uint32 value);

  // optional uint64 memo_id = 12;
  bool has_memo_id() const;
  void clear_memo_id();
  static const int kMemoIdFieldNumber = 12;
  ::google::protobuf::uint64 memo_id() const;
  void set_memo_id(::google::protobuf::uint64 value);

  // optional uint32 num_operations = 14;
  bool has_num_operations() const;
  void clear_num_operations();
  static const int kNumOperationsFieldNumber = 14;
  ::google::protobuf::uint32 num_operations() const;
  void set_num_operations(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarSignTx)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;
  ::google::protobuf::internal::ArenaStringPtr network_passphrase_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::google::protobuf::internal::ArenaStringPtr memo_text_;
  ::google::protobuf::internal::ArenaStringPtr memo_hash_;
  ::google::protobuf::uint64 sequence_number_;
  ::google::protobuf::uint32 fee_;
  ::google::protobuf::uint32 timebounds_start_;
  ::google::protobuf::uint32 timebounds_end_;
  ::google::protobuf::uint32 memo_type_;
  ::google::protobuf::uint64 memo_id_;
  ::google::protobuf::uint32 num_operations_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarTxOpRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarTxOpRequest) */ {
 public:
  StellarTxOpRequest();
  virtual ~StellarTxOpRequest();

  StellarTxOpRequest(const StellarTxOpRequest& from);

  inline StellarTxOpRequest& operator=(const StellarTxOpRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarTxOpRequest(StellarTxOpRequest&& from) noexcept
    : StellarTxOpRequest() {
    *this = ::std::move(from);
  }

  inline StellarTxOpRequest& operator=(StellarTxOpRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarTxOpRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarTxOpRequest* internal_default_instance() {
    return reinterpret_cast<const StellarTxOpRequest*>(
               &_StellarTxOpRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(StellarTxOpRequest* other);
  friend void swap(StellarTxOpRequest& a, StellarTxOpRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarTxOpRequest* New() const final {
    return CreateMaybeMessage<StellarTxOpRequest>(nullptr);
  }

  StellarTxOpRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarTxOpRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarTxOpRequest& from);
  void MergeFrom(const StellarTxOpRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarTxOpRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarTxOpRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarPaymentOp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarPaymentOp) */ {
 public:
  StellarPaymentOp();
  virtual ~StellarPaymentOp();

  StellarPaymentOp(const StellarPaymentOp& from);

  inline StellarPaymentOp& operator=(const StellarPaymentOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarPaymentOp(StellarPaymentOp&& from) noexcept
    : StellarPaymentOp() {
    *this = ::std::move(from);
  }

  inline StellarPaymentOp& operator=(StellarPaymentOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarPaymentOp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarPaymentOp* internal_default_instance() {
    return reinterpret_cast<const StellarPaymentOp*>(
               &_StellarPaymentOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(StellarPaymentOp* other);
  friend void swap(StellarPaymentOp& a, StellarPaymentOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarPaymentOp* New() const final {
    return CreateMaybeMessage<StellarPaymentOp>(nullptr);
  }

  StellarPaymentOp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarPaymentOp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarPaymentOp& from);
  void MergeFrom(const StellarPaymentOp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarPaymentOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_account = 1;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 1;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional string destination_account = 2;
  bool has_destination_account() const;
  void clear_destination_account();
  static const int kDestinationAccountFieldNumber = 2;
  const ::std::string& destination_account() const;
  void set_destination_account(const ::std::string& value);
  #if LANG_CXX11
  void set_destination_account(::std::string&& value);
  #endif
  void set_destination_account(const char* value);
  void set_destination_account(const char* value, size_t size);
  ::std::string* mutable_destination_account();
  ::std::string* release_destination_account();
  void set_allocated_destination_account(::std::string* destination_account);

  // optional .hw.trezor.messages.stellar.StellarAssetType asset = 3;
  bool has_asset() const;
  void clear_asset();
  static const int kAssetFieldNumber = 3;
  const ::hw::trezor::messages::stellar::StellarAssetType& asset() const;
  ::hw::trezor::messages::stellar::StellarAssetType* release_asset();
  ::hw::trezor::messages::stellar::StellarAssetType* mutable_asset();
  void set_allocated_asset(::hw::trezor::messages::stellar::StellarAssetType* asset);

  // optional sint64 amount = 4;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 4;
  ::google::protobuf::int64 amount() const;
  void set_amount(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarPaymentOp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::google::protobuf::internal::ArenaStringPtr destination_account_;
  ::hw::trezor::messages::stellar::StellarAssetType* asset_;
  ::google::protobuf::int64 amount_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarCreateAccountOp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarCreateAccountOp) */ {
 public:
  StellarCreateAccountOp();
  virtual ~StellarCreateAccountOp();

  StellarCreateAccountOp(const StellarCreateAccountOp& from);

  inline StellarCreateAccountOp& operator=(const StellarCreateAccountOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarCreateAccountOp(StellarCreateAccountOp&& from) noexcept
    : StellarCreateAccountOp() {
    *this = ::std::move(from);
  }

  inline StellarCreateAccountOp& operator=(StellarCreateAccountOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarCreateAccountOp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarCreateAccountOp* internal_default_instance() {
    return reinterpret_cast<const StellarCreateAccountOp*>(
               &_StellarCreateAccountOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(StellarCreateAccountOp* other);
  friend void swap(StellarCreateAccountOp& a, StellarCreateAccountOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarCreateAccountOp* New() const final {
    return CreateMaybeMessage<StellarCreateAccountOp>(nullptr);
  }

  StellarCreateAccountOp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarCreateAccountOp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarCreateAccountOp& from);
  void MergeFrom(const StellarCreateAccountOp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarCreateAccountOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_account = 1;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 1;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional string new_account = 2;
  bool has_new_account() const;
  void clear_new_account();
  static const int kNewAccountFieldNumber = 2;
  const ::std::string& new_account() const;
  void set_new_account(const ::std::string& value);
  #if LANG_CXX11
  void set_new_account(::std::string&& value);
  #endif
  void set_new_account(const char* value);
  void set_new_account(const char* value, size_t size);
  ::std::string* mutable_new_account();
  ::std::string* release_new_account();
  void set_allocated_new_account(::std::string* new_account);

  // optional sint64 starting_balance = 3;
  bool has_starting_balance() const;
  void clear_starting_balance();
  static const int kStartingBalanceFieldNumber = 3;
  ::google::protobuf::int64 starting_balance() const;
  void set_starting_balance(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarCreateAccountOp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::google::protobuf::internal::ArenaStringPtr new_account_;
  ::google::protobuf::int64 starting_balance_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarPathPaymentOp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarPathPaymentOp) */ {
 public:
  StellarPathPaymentOp();
  virtual ~StellarPathPaymentOp();

  StellarPathPaymentOp(const StellarPathPaymentOp& from);

  inline StellarPathPaymentOp& operator=(const StellarPathPaymentOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarPathPaymentOp(StellarPathPaymentOp&& from) noexcept
    : StellarPathPaymentOp() {
    *this = ::std::move(from);
  }

  inline StellarPathPaymentOp& operator=(StellarPathPaymentOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarPathPaymentOp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarPathPaymentOp* internal_default_instance() {
    return reinterpret_cast<const StellarPathPaymentOp*>(
               &_StellarPathPaymentOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(StellarPathPaymentOp* other);
  friend void swap(StellarPathPaymentOp& a, StellarPathPaymentOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarPathPaymentOp* New() const final {
    return CreateMaybeMessage<StellarPathPaymentOp>(nullptr);
  }

  StellarPathPaymentOp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarPathPaymentOp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarPathPaymentOp& from);
  void MergeFrom(const StellarPathPaymentOp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarPathPaymentOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hw.trezor.messages.stellar.StellarAssetType paths = 7;
  int paths_size() const;
  void clear_paths();
  static const int kPathsFieldNumber = 7;
  ::hw::trezor::messages::stellar::StellarAssetType* mutable_paths(int index);
  ::google::protobuf::RepeatedPtrField< ::hw::trezor::messages::stellar::StellarAssetType >*
      mutable_paths();
  const ::hw::trezor::messages::stellar::StellarAssetType& paths(int index) const;
  ::hw::trezor::messages::stellar::StellarAssetType* add_paths();
  const ::google::protobuf::RepeatedPtrField< ::hw::trezor::messages::stellar::StellarAssetType >&
      paths() const;

  // optional string source_account = 1;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 1;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional string destination_account = 4;
  bool has_destination_account() const;
  void clear_destination_account();
  static const int kDestinationAccountFieldNumber = 4;
  const ::std::string& destination_account() const;
  void set_destination_account(const ::std::string& value);
  #if LANG_CXX11
  void set_destination_account(::std::string&& value);
  #endif
  void set_destination_account(const char* value);
  void set_destination_account(const char* value, size_t size);
  ::std::string* mutable_destination_account();
  ::std::string* release_destination_account();
  void set_allocated_destination_account(::std::string* destination_account);

  // optional .hw.trezor.messages.stellar.StellarAssetType send_asset = 2;
  bool has_send_asset() const;
  void clear_send_asset();
  static const int kSendAssetFieldNumber = 2;
  const ::hw::trezor::messages::stellar::StellarAssetType& send_asset() const;
  ::hw::trezor::messages::stellar::StellarAssetType* release_send_asset();
  ::hw::trezor::messages::stellar::StellarAssetType* mutable_send_asset();
  void set_allocated_send_asset(::hw::trezor::messages::stellar::StellarAssetType* send_asset);

  // optional .hw.trezor.messages.stellar.StellarAssetType destination_asset = 5;
  bool has_destination_asset() const;
  void clear_destination_asset();
  static const int kDestinationAssetFieldNumber = 5;
  const ::hw::trezor::messages::stellar::StellarAssetType& destination_asset() const;
  ::hw::trezor::messages::stellar::StellarAssetType* release_destination_asset();
  ::hw::trezor::messages::stellar::StellarAssetType* mutable_destination_asset();
  void set_allocated_destination_asset(::hw::trezor::messages::stellar::StellarAssetType* destination_asset);

  // optional sint64 send_max = 3;
  bool has_send_max() const;
  void clear_send_max();
  static const int kSendMaxFieldNumber = 3;
  ::google::protobuf::int64 send_max() const;
  void set_send_max(::google::protobuf::int64 value);

  // optional sint64 destination_amount = 6;
  bool has_destination_amount() const;
  void clear_destination_amount();
  static const int kDestinationAmountFieldNumber = 6;
  ::google::protobuf::int64 destination_amount() const;
  void set_destination_amount(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarPathPaymentOp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::hw::trezor::messages::stellar::StellarAssetType > paths_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::google::protobuf::internal::ArenaStringPtr destination_account_;
  ::hw::trezor::messages::stellar::StellarAssetType* send_asset_;
  ::hw::trezor::messages::stellar::StellarAssetType* destination_asset_;
  ::google::protobuf::int64 send_max_;
  ::google::protobuf::int64 destination_amount_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarManageOfferOp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarManageOfferOp) */ {
 public:
  StellarManageOfferOp();
  virtual ~StellarManageOfferOp();

  StellarManageOfferOp(const StellarManageOfferOp& from);

  inline StellarManageOfferOp& operator=(const StellarManageOfferOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarManageOfferOp(StellarManageOfferOp&& from) noexcept
    : StellarManageOfferOp() {
    *this = ::std::move(from);
  }

  inline StellarManageOfferOp& operator=(StellarManageOfferOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarManageOfferOp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarManageOfferOp* internal_default_instance() {
    return reinterpret_cast<const StellarManageOfferOp*>(
               &_StellarManageOfferOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(StellarManageOfferOp* other);
  friend void swap(StellarManageOfferOp& a, StellarManageOfferOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarManageOfferOp* New() const final {
    return CreateMaybeMessage<StellarManageOfferOp>(nullptr);
  }

  StellarManageOfferOp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarManageOfferOp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarManageOfferOp& from);
  void MergeFrom(const StellarManageOfferOp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarManageOfferOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_account = 1;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 1;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
  bool has_selling_asset() const;
  void clear_selling_asset();
  static const int kSellingAssetFieldNumber = 2;
  const ::hw::trezor::messages::stellar::StellarAssetType& selling_asset() const;
  ::hw::trezor::messages::stellar::StellarAssetType* release_selling_asset();
  ::hw::trezor::messages::stellar::StellarAssetType* mutable_selling_asset();
  void set_allocated_selling_asset(::hw::trezor::messages::stellar::StellarAssetType* selling_asset);

  // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
  bool has_buying_asset() const;
  void clear_buying_asset();
  static const int kBuyingAssetFieldNumber = 3;
  const ::hw::trezor::messages::stellar::StellarAssetType& buying_asset() const;
  ::hw::trezor::messages::stellar::StellarAssetType* release_buying_asset();
  ::hw::trezor::messages::stellar::StellarAssetType* mutable_buying_asset();
  void set_allocated_buying_asset(::hw::trezor::messages::stellar::StellarAssetType* buying_asset);

  // optional sint64 amount = 4;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 4;
  ::google::protobuf::int64 amount() const;
  void set_amount(::google::protobuf::int64 value);

  // optional uint32 price_n = 5;
  bool has_price_n() const;
  void clear_price_n();
  static const int kPriceNFieldNumber = 5;
  ::google::protobuf::uint32 price_n() const;
  void set_price_n(::google::protobuf::uint32 value);

  // optional uint32 price_d = 6;
  bool has_price_d() const;
  void clear_price_d();
  static const int kPriceDFieldNumber = 6;
  ::google::protobuf::uint32 price_d() const;
  void set_price_d(::google::protobuf::uint32 value);

  // optional uint64 offer_id = 7;
  bool has_offer_id() const;
  void clear_offer_id();
  static const int kOfferIdFieldNumber = 7;
  ::google::protobuf::uint64 offer_id() const;
  void set_offer_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarManageOfferOp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::hw::trezor::messages::stellar::StellarAssetType* selling_asset_;
  ::hw::trezor::messages::stellar::StellarAssetType* buying_asset_;
  ::google::protobuf::int64 amount_;
  ::google::protobuf::uint32 price_n_;
  ::google::protobuf::uint32 price_d_;
  ::google::protobuf::uint64 offer_id_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarCreatePassiveOfferOp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp) */ {
 public:
  StellarCreatePassiveOfferOp();
  virtual ~StellarCreatePassiveOfferOp();

  StellarCreatePassiveOfferOp(const StellarCreatePassiveOfferOp& from);

  inline StellarCreatePassiveOfferOp& operator=(const StellarCreatePassiveOfferOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarCreatePassiveOfferOp(StellarCreatePassiveOfferOp&& from) noexcept
    : StellarCreatePassiveOfferOp() {
    *this = ::std::move(from);
  }

  inline StellarCreatePassiveOfferOp& operator=(StellarCreatePassiveOfferOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarCreatePassiveOfferOp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarCreatePassiveOfferOp* internal_default_instance() {
    return reinterpret_cast<const StellarCreatePassiveOfferOp*>(
               &_StellarCreatePassiveOfferOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(StellarCreatePassiveOfferOp* other);
  friend void swap(StellarCreatePassiveOfferOp& a, StellarCreatePassiveOfferOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarCreatePassiveOfferOp* New() const final {
    return CreateMaybeMessage<StellarCreatePassiveOfferOp>(nullptr);
  }

  StellarCreatePassiveOfferOp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarCreatePassiveOfferOp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarCreatePassiveOfferOp& from);
  void MergeFrom(const StellarCreatePassiveOfferOp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarCreatePassiveOfferOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_account = 1;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 1;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
  bool has_selling_asset() const;
  void clear_selling_asset();
  static const int kSellingAssetFieldNumber = 2;
  const ::hw::trezor::messages::stellar::StellarAssetType& selling_asset() const;
  ::hw::trezor::messages::stellar::StellarAssetType* release_selling_asset();
  ::hw::trezor::messages::stellar::StellarAssetType* mutable_selling_asset();
  void set_allocated_selling_asset(::hw::trezor::messages::stellar::StellarAssetType* selling_asset);

  // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
  bool has_buying_asset() const;
  void clear_buying_asset();
  static const int kBuyingAssetFieldNumber = 3;
  const ::hw::trezor::messages::stellar::StellarAssetType& buying_asset() const;
  ::hw::trezor::messages::stellar::StellarAssetType* release_buying_asset();
  ::hw::trezor::messages::stellar::StellarAssetType* mutable_buying_asset();
  void set_allocated_buying_asset(::hw::trezor::messages::stellar::StellarAssetType* buying_asset);

  // optional sint64 amount = 4;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 4;
  ::google::protobuf::int64 amount() const;
  void set_amount(::google::protobuf::int64 value);

  // optional uint32 price_n = 5;
  bool has_price_n() const;
  void clear_price_n();
  static const int kPriceNFieldNumber = 5;
  ::google::protobuf::uint32 price_n() const;
  void set_price_n(::google::protobuf::uint32 value);

  // optional uint32 price_d = 6;
  bool has_price_d() const;
  void clear_price_d();
  static const int kPriceDFieldNumber = 6;
  ::google::protobuf::uint32 price_d() const;
  void set_price_d(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::hw::trezor::messages::stellar::StellarAssetType* selling_asset_;
  ::hw::trezor::messages::stellar::StellarAssetType* buying_asset_;
  ::google::protobuf::int64 amount_;
  ::google::protobuf::uint32 price_n_;
  ::google::protobuf::uint32 price_d_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarSetOptionsOp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarSetOptionsOp) */ {
 public:
  StellarSetOptionsOp();
  virtual ~StellarSetOptionsOp();

  StellarSetOptionsOp(const StellarSetOptionsOp& from);

  inline StellarSetOptionsOp& operator=(const StellarSetOptionsOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarSetOptionsOp(StellarSetOptionsOp&& from) noexcept
    : StellarSetOptionsOp() {
    *this = ::std::move(from);
  }

  inline StellarSetOptionsOp& operator=(StellarSetOptionsOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarSetOptionsOp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarSetOptionsOp* internal_default_instance() {
    return reinterpret_cast<const StellarSetOptionsOp*>(
               &_StellarSetOptionsOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(StellarSetOptionsOp* other);
  friend void swap(StellarSetOptionsOp& a, StellarSetOptionsOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarSetOptionsOp* New() const final {
    return CreateMaybeMessage<StellarSetOptionsOp>(nullptr);
  }

  StellarSetOptionsOp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarSetOptionsOp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarSetOptionsOp& from);
  void MergeFrom(const StellarSetOptionsOp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarSetOptionsOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_account = 1;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 1;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional string inflation_destination_account = 2;
  bool has_inflation_destination_account() const;
  void clear_inflation_destination_account();
  static const int kInflationDestinationAccountFieldNumber = 2;
  const ::std::string& inflation_destination_account() const;
  void set_inflation_destination_account(const ::std::string& value);
  #if LANG_CXX11
  void set_inflation_destination_account(::std::string&& value);
  #endif
  void set_inflation_destination_account(const char* value);
  void set_inflation_destination_account(const char* value, size_t size);
  ::std::string* mutable_inflation_destination_account();
  ::std::string* release_inflation_destination_account();
  void set_allocated_inflation_destination_account(::std::string* inflation_destination_account);

  // optional string home_domain = 9;
  bool has_home_domain() const;
  void clear_home_domain();
  static const int kHomeDomainFieldNumber = 9;
  const ::std::string& home_domain() const;
  void set_home_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_home_domain(::std::string&& value);
  #endif
  void set_home_domain(const char* value);
  void set_home_domain(const char* value, size_t size);
  ::std::string* mutable_home_domain();
  ::std::string* release_home_domain();
  void set_allocated_home_domain(::std::string* home_domain);

  // optional bytes signer_key = 11;
  bool has_signer_key() const;
  void clear_signer_key();
  static const int kSignerKeyFieldNumber = 11;
  const ::std::string& signer_key() const;
  void set_signer_key(const ::std::string& value);
  #if LANG_CXX11
  void set_signer_key(::std::string&& value);
  #endif
  void set_signer_key(const char* value);
  void set_signer_key(const void* value, size_t size);
  ::std::string* mutable_signer_key();
  ::std::string* release_signer_key();
  void set_allocated_signer_key(::std::string* signer_key);

  // optional uint32 clear_flags = 3;
  bool has_clear_flags() const;
  void clear_clear_flags();
  static const int kClearFlagsFieldNumber = 3;
  ::google::protobuf::uint32 clear_flags() const;
  void set_clear_flags(::google::protobuf::uint32 value);

  // optional uint32 set_flags = 4;
  bool has_set_flags() const;
  void clear_set_flags();
  static const int kSetFlagsFieldNumber = 4;
  ::google::protobuf::uint32 set_flags() const;
  void set_set_flags(::google::protobuf::uint32 value);

  // optional uint32 master_weight = 5;
  bool has_master_weight() const;
  void clear_master_weight();
  static const int kMasterWeightFieldNumber = 5;
  ::google::protobuf::uint32 master_weight() const;
  void set_master_weight(::google::protobuf::uint32 value);

  // optional uint32 low_threshold = 6;
  bool has_low_threshold() const;
  void clear_low_threshold();
  static const int kLowThresholdFieldNumber = 6;
  ::google::protobuf::uint32 low_threshold() const;
  void set_low_threshold(::google::protobuf::uint32 value);

  // optional uint32 medium_threshold = 7;
  bool has_medium_threshold() const;
  void clear_medium_threshold();
  static const int kMediumThresholdFieldNumber = 7;
  ::google::protobuf::uint32 medium_threshold() const;
  void set_medium_threshold(::google::protobuf::uint32 value);

  // optional uint32 high_threshold = 8;
  bool has_high_threshold() const;
  void clear_high_threshold();
  static const int kHighThresholdFieldNumber = 8;
  ::google::protobuf::uint32 high_threshold() const;
  void set_high_threshold(::google::protobuf::uint32 value);

  // optional uint32 signer_type = 10;
  bool has_signer_type() const;
  void clear_signer_type();
  static const int kSignerTypeFieldNumber = 10;
  ::google::protobuf::uint32 signer_type() const;
  void set_signer_type(::google::protobuf::uint32 value);

  // optional uint32 signer_weight = 12;
  bool has_signer_weight() const;
  void clear_signer_weight();
  static const int kSignerWeightFieldNumber = 12;
  ::google::protobuf::uint32 signer_weight() const;
  void set_signer_weight(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarSetOptionsOp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::google::protobuf::internal::ArenaStringPtr inflation_destination_account_;
  ::google::protobuf::internal::ArenaStringPtr home_domain_;
  ::google::protobuf::internal::ArenaStringPtr signer_key_;
  ::google::protobuf::uint32 clear_flags_;
  ::google::protobuf::uint32 set_flags_;
  ::google::protobuf::uint32 master_weight_;
  ::google::protobuf::uint32 low_threshold_;
  ::google::protobuf::uint32 medium_threshold_;
  ::google::protobuf::uint32 high_threshold_;
  ::google::protobuf::uint32 signer_type_;
  ::google::protobuf::uint32 signer_weight_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarChangeTrustOp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarChangeTrustOp) */ {
 public:
  StellarChangeTrustOp();
  virtual ~StellarChangeTrustOp();

  StellarChangeTrustOp(const StellarChangeTrustOp& from);

  inline StellarChangeTrustOp& operator=(const StellarChangeTrustOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarChangeTrustOp(StellarChangeTrustOp&& from) noexcept
    : StellarChangeTrustOp() {
    *this = ::std::move(from);
  }

  inline StellarChangeTrustOp& operator=(StellarChangeTrustOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarChangeTrustOp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarChangeTrustOp* internal_default_instance() {
    return reinterpret_cast<const StellarChangeTrustOp*>(
               &_StellarChangeTrustOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(StellarChangeTrustOp* other);
  friend void swap(StellarChangeTrustOp& a, StellarChangeTrustOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarChangeTrustOp* New() const final {
    return CreateMaybeMessage<StellarChangeTrustOp>(nullptr);
  }

  StellarChangeTrustOp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarChangeTrustOp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarChangeTrustOp& from);
  void MergeFrom(const StellarChangeTrustOp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarChangeTrustOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_account = 1;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 1;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional .hw.trezor.messages.stellar.StellarAssetType asset = 2;
  bool has_asset() const;
  void clear_asset();
  static const int kAssetFieldNumber = 2;
  const ::hw::trezor::messages::stellar::StellarAssetType& asset() const;
  ::hw::trezor::messages::stellar::StellarAssetType* release_asset();
  ::hw::trezor::messages::stellar::StellarAssetType* mutable_asset();
  void set_allocated_asset(::hw::trezor::messages::stellar::StellarAssetType* asset);

  // optional uint64 limit = 3;
  bool has_limit() const;
  void clear_limit();
  static const int kLimitFieldNumber = 3;
  ::google::protobuf::uint64 limit() const;
  void set_limit(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarChangeTrustOp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::hw::trezor::messages::stellar::StellarAssetType* asset_;
  ::google::protobuf::uint64 limit_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarAllowTrustOp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarAllowTrustOp) */ {
 public:
  StellarAllowTrustOp();
  virtual ~StellarAllowTrustOp();

  StellarAllowTrustOp(const StellarAllowTrustOp& from);

  inline StellarAllowTrustOp& operator=(const StellarAllowTrustOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarAllowTrustOp(StellarAllowTrustOp&& from) noexcept
    : StellarAllowTrustOp() {
    *this = ::std::move(from);
  }

  inline StellarAllowTrustOp& operator=(StellarAllowTrustOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarAllowTrustOp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarAllowTrustOp* internal_default_instance() {
    return reinterpret_cast<const StellarAllowTrustOp*>(
               &_StellarAllowTrustOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(StellarAllowTrustOp* other);
  friend void swap(StellarAllowTrustOp& a, StellarAllowTrustOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarAllowTrustOp* New() const final {
    return CreateMaybeMessage<StellarAllowTrustOp>(nullptr);
  }

  StellarAllowTrustOp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarAllowTrustOp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarAllowTrustOp& from);
  void MergeFrom(const StellarAllowTrustOp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarAllowTrustOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_account = 1;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 1;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional string trusted_account = 2;
  bool has_trusted_account() const;
  void clear_trusted_account();
  static const int kTrustedAccountFieldNumber = 2;
  const ::std::string& trusted_account() const;
  void set_trusted_account(const ::std::string& value);
  #if LANG_CXX11
  void set_trusted_account(::std::string&& value);
  #endif
  void set_trusted_account(const char* value);
  void set_trusted_account(const char* value, size_t size);
  ::std::string* mutable_trusted_account();
  ::std::string* release_trusted_account();
  void set_allocated_trusted_account(::std::string* trusted_account);

  // optional string asset_code = 4;
  bool has_asset_code() const;
  void clear_asset_code();
  static const int kAssetCodeFieldNumber = 4;
  const ::std::string& asset_code() const;
  void set_asset_code(const ::std::string& value);
  #if LANG_CXX11
  void set_asset_code(::std::string&& value);
  #endif
  void set_asset_code(const char* value);
  void set_asset_code(const char* value, size_t size);
  ::std::string* mutable_asset_code();
  ::std::string* release_asset_code();
  void set_allocated_asset_code(::std::string* asset_code);

  // optional uint32 asset_type = 3;
  bool has_asset_type() const;
  void clear_asset_type();
  static const int kAssetTypeFieldNumber = 3;
  ::google::protobuf::uint32 asset_type() const;
  void set_asset_type(::google::protobuf::uint32 value);

  // optional uint32 is_authorized = 5;
  bool has_is_authorized() const;
  void clear_is_authorized();
  static const int kIsAuthorizedFieldNumber = 5;
  ::google::protobuf::uint32 is_authorized() const;
  void set_is_authorized(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarAllowTrustOp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::google::protobuf::internal::ArenaStringPtr trusted_account_;
  ::google::protobuf::internal::ArenaStringPtr asset_code_;
  ::google::protobuf::uint32 asset_type_;
  ::google::protobuf::uint32 is_authorized_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarAccountMergeOp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarAccountMergeOp) */ {
 public:
  StellarAccountMergeOp();
  virtual ~StellarAccountMergeOp();

  StellarAccountMergeOp(const StellarAccountMergeOp& from);

  inline StellarAccountMergeOp& operator=(const StellarAccountMergeOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarAccountMergeOp(StellarAccountMergeOp&& from) noexcept
    : StellarAccountMergeOp() {
    *this = ::std::move(from);
  }

  inline StellarAccountMergeOp& operator=(StellarAccountMergeOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarAccountMergeOp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarAccountMergeOp* internal_default_instance() {
    return reinterpret_cast<const StellarAccountMergeOp*>(
               &_StellarAccountMergeOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(StellarAccountMergeOp* other);
  friend void swap(StellarAccountMergeOp& a, StellarAccountMergeOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarAccountMergeOp* New() const final {
    return CreateMaybeMessage<StellarAccountMergeOp>(nullptr);
  }

  StellarAccountMergeOp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarAccountMergeOp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarAccountMergeOp& from);
  void MergeFrom(const StellarAccountMergeOp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarAccountMergeOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_account = 1;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 1;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional string destination_account = 2;
  bool has_destination_account() const;
  void clear_destination_account();
  static const int kDestinationAccountFieldNumber = 2;
  const ::std::string& destination_account() const;
  void set_destination_account(const ::std::string& value);
  #if LANG_CXX11
  void set_destination_account(::std::string&& value);
  #endif
  void set_destination_account(const char* value);
  void set_destination_account(const char* value, size_t size);
  ::std::string* mutable_destination_account();
  ::std::string* release_destination_account();
  void set_allocated_destination_account(::std::string* destination_account);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarAccountMergeOp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::google::protobuf::internal::ArenaStringPtr destination_account_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarManageDataOp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarManageDataOp) */ {
 public:
  StellarManageDataOp();
  virtual ~StellarManageDataOp();

  StellarManageDataOp(const StellarManageDataOp& from);

  inline StellarManageDataOp& operator=(const StellarManageDataOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarManageDataOp(StellarManageDataOp&& from) noexcept
    : StellarManageDataOp() {
    *this = ::std::move(from);
  }

  inline StellarManageDataOp& operator=(StellarManageDataOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarManageDataOp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarManageDataOp* internal_default_instance() {
    return reinterpret_cast<const StellarManageDataOp*>(
               &_StellarManageDataOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(StellarManageDataOp* other);
  friend void swap(StellarManageDataOp& a, StellarManageDataOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarManageDataOp* New() const final {
    return CreateMaybeMessage<StellarManageDataOp>(nullptr);
  }

  StellarManageDataOp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarManageDataOp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarManageDataOp& from);
  void MergeFrom(const StellarManageDataOp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarManageDataOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_account = 1;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 1;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional string key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarManageDataOp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarBumpSequenceOp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarBumpSequenceOp) */ {
 public:
  StellarBumpSequenceOp();
  virtual ~StellarBumpSequenceOp();

  StellarBumpSequenceOp(const StellarBumpSequenceOp& from);

  inline StellarBumpSequenceOp& operator=(const StellarBumpSequenceOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarBumpSequenceOp(StellarBumpSequenceOp&& from) noexcept
    : StellarBumpSequenceOp() {
    *this = ::std::move(from);
  }

  inline StellarBumpSequenceOp& operator=(StellarBumpSequenceOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarBumpSequenceOp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarBumpSequenceOp* internal_default_instance() {
    return reinterpret_cast<const StellarBumpSequenceOp*>(
               &_StellarBumpSequenceOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(StellarBumpSequenceOp* other);
  friend void swap(StellarBumpSequenceOp& a, StellarBumpSequenceOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarBumpSequenceOp* New() const final {
    return CreateMaybeMessage<StellarBumpSequenceOp>(nullptr);
  }

  StellarBumpSequenceOp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarBumpSequenceOp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarBumpSequenceOp& from);
  void MergeFrom(const StellarBumpSequenceOp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarBumpSequenceOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source_account = 1;
  bool has_source_account() const;
  void clear_source_account();
  static const int kSourceAccountFieldNumber = 1;
  const ::std::string& source_account() const;
  void set_source_account(const ::std::string& value);
  #if LANG_CXX11
  void set_source_account(::std::string&& value);
  #endif
  void set_source_account(const char* value);
  void set_source_account(const char* value, size_t size);
  ::std::string* mutable_source_account();
  ::std::string* release_source_account();
  void set_allocated_source_account(::std::string* source_account);

  // optional uint64 bump_to = 2;
  bool has_bump_to() const;
  void clear_bump_to();
  static const int kBumpToFieldNumber = 2;
  ::google::protobuf::uint64 bump_to() const;
  void set_bump_to(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarBumpSequenceOp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_account_;
  ::google::protobuf::uint64 bump_to_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// -------------------------------------------------------------------

class StellarSignedTx final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hw.trezor.messages.stellar.StellarSignedTx) */ {
 public:
  StellarSignedTx();
  virtual ~StellarSignedTx();

  StellarSignedTx(const StellarSignedTx& from);

  inline StellarSignedTx& operator=(const StellarSignedTx& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StellarSignedTx(StellarSignedTx&& from) noexcept
    : StellarSignedTx() {
    *this = ::std::move(from);
  }

  inline StellarSignedTx& operator=(StellarSignedTx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StellarSignedTx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StellarSignedTx* internal_default_instance() {
    return reinterpret_cast<const StellarSignedTx*>(
               &_StellarSignedTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(StellarSignedTx* other);
  friend void swap(StellarSignedTx& a, StellarSignedTx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StellarSignedTx* New() const final {
    return CreateMaybeMessage<StellarSignedTx>(nullptr);
  }

  StellarSignedTx* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StellarSignedTx>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StellarSignedTx& from);
  void MergeFrom(const StellarSignedTx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StellarSignedTx* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes public_key = 1;
  bool has_public_key() const;
  void clear_public_key();
  static const int kPublicKeyFieldNumber = 1;
  const ::std::string& public_key() const;
  void set_public_key(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key(::std::string&& value);
  #endif
  void set_public_key(const char* value);
  void set_public_key(const void* value, size_t size);
  ::std::string* mutable_public_key();
  ::std::string* release_public_key();
  void set_allocated_public_key(::std::string* public_key);

  // optional bytes signature = 2;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 2;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:hw.trezor.messages.stellar.StellarSignedTx)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr public_key_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  friend struct ::TableStruct_messages_2dstellar_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StellarAssetType

// optional uint32 type = 1;
inline bool StellarAssetType::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StellarAssetType::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 StellarAssetType::type() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarAssetType.type)
  return type_;
}
inline void StellarAssetType::set_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarAssetType.type)
}

// optional string code = 2;
inline bool StellarAssetType::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarAssetType::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarAssetType::code() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarAssetType.code)
  return code_.GetNoArena();
}
inline void StellarAssetType::set_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarAssetType.code)
}
#if LANG_CXX11
inline void StellarAssetType::set_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarAssetType.code)
}
#endif
inline void StellarAssetType::set_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarAssetType.code)
}
inline void StellarAssetType::set_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarAssetType.code)
}
inline ::std::string* StellarAssetType::mutable_code() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarAssetType.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarAssetType::release_code() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarAssetType.code)
  if (!has_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarAssetType::set_allocated_code(::std::string* code) {
  if (code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarAssetType.code)
}

// optional string issuer = 3;
inline bool StellarAssetType::has_issuer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarAssetType::clear_issuer() {
  issuer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StellarAssetType::issuer() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarAssetType.issuer)
  return issuer_.GetNoArena();
}
inline void StellarAssetType::set_issuer(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarAssetType.issuer)
}
#if LANG_CXX11
inline void StellarAssetType::set_issuer(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  issuer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarAssetType.issuer)
}
#endif
inline void StellarAssetType::set_issuer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarAssetType.issuer)
}
inline void StellarAssetType::set_issuer(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  issuer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarAssetType.issuer)
}
inline ::std::string* StellarAssetType::mutable_issuer() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarAssetType.issuer)
  return issuer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarAssetType::release_issuer() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarAssetType.issuer)
  if (!has_issuer()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return issuer_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarAssetType::set_allocated_issuer(::std::string* issuer) {
  if (issuer != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  issuer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), issuer);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarAssetType.issuer)
}

// -------------------------------------------------------------------

// StellarGetAddress

// repeated uint32 address_n = 1;
inline int StellarGetAddress::address_n_size() const {
  return address_n_.size();
}
inline void StellarGetAddress::clear_address_n() {
  address_n_.Clear();
}
inline ::google::protobuf::uint32 StellarGetAddress::address_n(int index) const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarGetAddress.address_n)
  return address_n_.Get(index);
}
inline void StellarGetAddress::set_address_n(int index, ::google::protobuf::uint32 value) {
  address_n_.Set(index, value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarGetAddress.address_n)
}
inline void StellarGetAddress::add_address_n(::google::protobuf::uint32 value) {
  address_n_.Add(value);
  // @@protoc_insertion_point(field_add:hw.trezor.messages.stellar.StellarGetAddress.address_n)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StellarGetAddress::address_n() const {
  // @@protoc_insertion_point(field_list:hw.trezor.messages.stellar.StellarGetAddress.address_n)
  return address_n_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StellarGetAddress::mutable_address_n() {
  // @@protoc_insertion_point(field_mutable_list:hw.trezor.messages.stellar.StellarGetAddress.address_n)
  return &address_n_;
}

// optional bool show_display = 2;
inline bool StellarGetAddress::has_show_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarGetAddress::clear_show_display() {
  show_display_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool StellarGetAddress::show_display() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarGetAddress.show_display)
  return show_display_;
}
inline void StellarGetAddress::set_show_display(bool value) {
  _has_bits_[0] |= 0x00000001u;
  show_display_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarGetAddress.show_display)
}

// -------------------------------------------------------------------

// StellarAddress

// optional string address = 1;
inline bool StellarAddress::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarAddress::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarAddress::address() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarAddress.address)
  return address_.GetNoArena();
}
inline void StellarAddress::set_address(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarAddress.address)
}
#if LANG_CXX11
inline void StellarAddress::set_address(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarAddress.address)
}
#endif
inline void StellarAddress::set_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarAddress.address)
}
inline void StellarAddress::set_address(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarAddress.address)
}
inline ::std::string* StellarAddress::mutable_address() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarAddress.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarAddress::release_address() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarAddress.address)
  if (!has_address()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return address_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarAddress::set_allocated_address(::std::string* address) {
  if (address != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarAddress.address)
}

// -------------------------------------------------------------------

// StellarSignTx

// repeated uint32 address_n = 2;
inline int StellarSignTx::address_n_size() const {
  return address_n_.size();
}
inline void StellarSignTx::clear_address_n() {
  address_n_.Clear();
}
inline ::google::protobuf::uint32 StellarSignTx::address_n(int index) const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.address_n)
  return address_n_.Get(index);
}
inline void StellarSignTx::set_address_n(int index, ::google::protobuf::uint32 value) {
  address_n_.Set(index, value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.address_n)
}
inline void StellarSignTx::add_address_n(::google::protobuf::uint32 value) {
  address_n_.Add(value);
  // @@protoc_insertion_point(field_add:hw.trezor.messages.stellar.StellarSignTx.address_n)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StellarSignTx::address_n() const {
  // @@protoc_insertion_point(field_list:hw.trezor.messages.stellar.StellarSignTx.address_n)
  return address_n_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StellarSignTx::mutable_address_n() {
  // @@protoc_insertion_point(field_mutable_list:hw.trezor.messages.stellar.StellarSignTx.address_n)
  return &address_n_;
}

// optional string network_passphrase = 3;
inline bool StellarSignTx::has_network_passphrase() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarSignTx::clear_network_passphrase() {
  network_passphrase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarSignTx::network_passphrase() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.network_passphrase)
  return network_passphrase_.GetNoArena();
}
inline void StellarSignTx::set_network_passphrase(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  network_passphrase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.network_passphrase)
}
#if LANG_CXX11
inline void StellarSignTx::set_network_passphrase(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  network_passphrase_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarSignTx.network_passphrase)
}
#endif
inline void StellarSignTx::set_network_passphrase(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  network_passphrase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarSignTx.network_passphrase)
}
inline void StellarSignTx::set_network_passphrase(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  network_passphrase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarSignTx.network_passphrase)
}
inline ::std::string* StellarSignTx::mutable_network_passphrase() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarSignTx.network_passphrase)
  return network_passphrase_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarSignTx::release_network_passphrase() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarSignTx.network_passphrase)
  if (!has_network_passphrase()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return network_passphrase_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarSignTx::set_allocated_network_passphrase(::std::string* network_passphrase) {
  if (network_passphrase != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  network_passphrase_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), network_passphrase);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarSignTx.network_passphrase)
}

// optional string source_account = 4;
inline bool StellarSignTx::has_source_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarSignTx::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StellarSignTx::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.source_account)
  return source_account_.GetNoArena();
}
inline void StellarSignTx::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.source_account)
}
#if LANG_CXX11
inline void StellarSignTx::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarSignTx.source_account)
}
#endif
inline void StellarSignTx::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarSignTx.source_account)
}
inline void StellarSignTx::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarSignTx.source_account)
}
inline ::std::string* StellarSignTx::mutable_source_account() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarSignTx.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarSignTx::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarSignTx.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarSignTx::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarSignTx.source_account)
}

// optional uint32 fee = 5;
inline bool StellarSignTx::has_fee() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StellarSignTx::clear_fee() {
  fee_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 StellarSignTx::fee() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.fee)
  return fee_;
}
inline void StellarSignTx::set_fee(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  fee_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.fee)
}

// optional uint64 sequence_number = 6;
inline bool StellarSignTx::has_sequence_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StellarSignTx::clear_sequence_number() {
  sequence_number_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 StellarSignTx::sequence_number() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.sequence_number)
  return sequence_number_;
}
inline void StellarSignTx::set_sequence_number(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.sequence_number)
}

// optional uint32 timebounds_start = 8;
inline bool StellarSignTx::has_timebounds_start() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StellarSignTx::clear_timebounds_start() {
  timebounds_start_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 StellarSignTx::timebounds_start() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.timebounds_start)
  return timebounds_start_;
}
inline void StellarSignTx::set_timebounds_start(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  timebounds_start_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.timebounds_start)
}

// optional uint32 timebounds_end = 9;
inline bool StellarSignTx::has_timebounds_end() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StellarSignTx::clear_timebounds_end() {
  timebounds_end_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 StellarSignTx::timebounds_end() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.timebounds_end)
  return timebounds_end_;
}
inline void StellarSignTx::set_timebounds_end(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  timebounds_end_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.timebounds_end)
}

// optional uint32 memo_type = 10;
inline bool StellarSignTx::has_memo_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StellarSignTx::clear_memo_type() {
  memo_type_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 StellarSignTx::memo_type() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.memo_type)
  return memo_type_;
}
inline void StellarSignTx::set_memo_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  memo_type_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.memo_type)
}

// optional string memo_text = 11;
inline bool StellarSignTx::has_memo_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StellarSignTx::clear_memo_text() {
  memo_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& StellarSignTx::memo_text() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.memo_text)
  return memo_text_.GetNoArena();
}
inline void StellarSignTx::set_memo_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  memo_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.memo_text)
}
#if LANG_CXX11
inline void StellarSignTx::set_memo_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  memo_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarSignTx.memo_text)
}
#endif
inline void StellarSignTx::set_memo_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  memo_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarSignTx.memo_text)
}
inline void StellarSignTx::set_memo_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  memo_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarSignTx.memo_text)
}
inline ::std::string* StellarSignTx::mutable_memo_text() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarSignTx.memo_text)
  return memo_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarSignTx::release_memo_text() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarSignTx.memo_text)
  if (!has_memo_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return memo_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarSignTx::set_allocated_memo_text(::std::string* memo_text) {
  if (memo_text != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  memo_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), memo_text);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarSignTx.memo_text)
}

// optional uint64 memo_id = 12;
inline bool StellarSignTx::has_memo_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void StellarSignTx::clear_memo_id() {
  memo_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint64 StellarSignTx::memo_id() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.memo_id)
  return memo_id_;
}
inline void StellarSignTx::set_memo_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000200u;
  memo_id_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.memo_id)
}

// optional bytes memo_hash = 13;
inline bool StellarSignTx::has_memo_hash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StellarSignTx::clear_memo_hash() {
  memo_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& StellarSignTx::memo_hash() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.memo_hash)
  return memo_hash_.GetNoArena();
}
inline void StellarSignTx::set_memo_hash(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  memo_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.memo_hash)
}
#if LANG_CXX11
inline void StellarSignTx::set_memo_hash(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  memo_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarSignTx.memo_hash)
}
#endif
inline void StellarSignTx::set_memo_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  memo_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarSignTx.memo_hash)
}
inline void StellarSignTx::set_memo_hash(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  memo_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarSignTx.memo_hash)
}
inline ::std::string* StellarSignTx::mutable_memo_hash() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarSignTx.memo_hash)
  return memo_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarSignTx::release_memo_hash() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarSignTx.memo_hash)
  if (!has_memo_hash()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return memo_hash_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarSignTx::set_allocated_memo_hash(::std::string* memo_hash) {
  if (memo_hash != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  memo_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), memo_hash);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarSignTx.memo_hash)
}

// optional uint32 num_operations = 14;
inline bool StellarSignTx::has_num_operations() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void StellarSignTx::clear_num_operations() {
  num_operations_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 StellarSignTx::num_operations() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignTx.num_operations)
  return num_operations_;
}
inline void StellarSignTx::set_num_operations(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  num_operations_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignTx.num_operations)
}

// -------------------------------------------------------------------

// StellarTxOpRequest

// -------------------------------------------------------------------

// StellarPaymentOp

// optional string source_account = 1;
inline bool StellarPaymentOp::has_source_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarPaymentOp::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarPaymentOp::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarPaymentOp.source_account)
  return source_account_.GetNoArena();
}
inline void StellarPaymentOp::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarPaymentOp.source_account)
}
#if LANG_CXX11
inline void StellarPaymentOp::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarPaymentOp.source_account)
}
#endif
inline void StellarPaymentOp::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarPaymentOp.source_account)
}
inline void StellarPaymentOp::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarPaymentOp.source_account)
}
inline ::std::string* StellarPaymentOp::mutable_source_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarPaymentOp.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarPaymentOp::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarPaymentOp.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarPaymentOp::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarPaymentOp.source_account)
}

// optional string destination_account = 2;
inline bool StellarPaymentOp::has_destination_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarPaymentOp::clear_destination_account() {
  destination_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StellarPaymentOp::destination_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarPaymentOp.destination_account)
  return destination_account_.GetNoArena();
}
inline void StellarPaymentOp::set_destination_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarPaymentOp.destination_account)
}
#if LANG_CXX11
inline void StellarPaymentOp::set_destination_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarPaymentOp.destination_account)
}
#endif
inline void StellarPaymentOp::set_destination_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarPaymentOp.destination_account)
}
inline void StellarPaymentOp::set_destination_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarPaymentOp.destination_account)
}
inline ::std::string* StellarPaymentOp::mutable_destination_account() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarPaymentOp.destination_account)
  return destination_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarPaymentOp::release_destination_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarPaymentOp.destination_account)
  if (!has_destination_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return destination_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarPaymentOp::set_allocated_destination_account(::std::string* destination_account) {
  if (destination_account != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  destination_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarPaymentOp.destination_account)
}

// optional .hw.trezor.messages.stellar.StellarAssetType asset = 3;
inline bool StellarPaymentOp::has_asset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StellarPaymentOp::clear_asset() {
  if (asset_ != nullptr) asset_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::hw::trezor::messages::stellar::StellarAssetType& StellarPaymentOp::asset() const {
  const ::hw::trezor::messages::stellar::StellarAssetType* p = asset_;
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarPaymentOp.asset)
  return p != nullptr ? *p : *reinterpret_cast<const ::hw::trezor::messages::stellar::StellarAssetType*>(
      &::hw::trezor::messages::stellar::_StellarAssetType_default_instance_);
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarPaymentOp::release_asset() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarPaymentOp.asset)
  _has_bits_[0] &= ~0x00000004u;
  ::hw::trezor::messages::stellar::StellarAssetType* temp = asset_;
  asset_ = nullptr;
  return temp;
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarPaymentOp::mutable_asset() {
  _has_bits_[0] |= 0x00000004u;
  if (asset_ == nullptr) {
    auto* p = CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAssetType>(GetArenaNoVirtual());
    asset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarPaymentOp.asset)
  return asset_;
}
inline void StellarPaymentOp::set_allocated_asset(::hw::trezor::messages::stellar::StellarAssetType* asset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete asset_;
  }
  if (asset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      asset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, asset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  asset_ = asset;
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarPaymentOp.asset)
}

// optional sint64 amount = 4;
inline bool StellarPaymentOp::has_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StellarPaymentOp::clear_amount() {
  amount_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 StellarPaymentOp::amount() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarPaymentOp.amount)
  return amount_;
}
inline void StellarPaymentOp::set_amount(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  amount_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarPaymentOp.amount)
}

// -------------------------------------------------------------------

// StellarCreateAccountOp

// optional string source_account = 1;
inline bool StellarCreateAccountOp::has_source_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarCreateAccountOp::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarCreateAccountOp::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarCreateAccountOp.source_account)
  return source_account_.GetNoArena();
}
inline void StellarCreateAccountOp::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarCreateAccountOp.source_account)
}
#if LANG_CXX11
inline void StellarCreateAccountOp::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarCreateAccountOp.source_account)
}
#endif
inline void StellarCreateAccountOp::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarCreateAccountOp.source_account)
}
inline void StellarCreateAccountOp::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarCreateAccountOp.source_account)
}
inline ::std::string* StellarCreateAccountOp::mutable_source_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarCreateAccountOp.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarCreateAccountOp::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarCreateAccountOp.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarCreateAccountOp::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarCreateAccountOp.source_account)
}

// optional string new_account = 2;
inline bool StellarCreateAccountOp::has_new_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarCreateAccountOp::clear_new_account() {
  new_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StellarCreateAccountOp::new_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarCreateAccountOp.new_account)
  return new_account_.GetNoArena();
}
inline void StellarCreateAccountOp::set_new_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  new_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarCreateAccountOp.new_account)
}
#if LANG_CXX11
inline void StellarCreateAccountOp::set_new_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  new_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarCreateAccountOp.new_account)
}
#endif
inline void StellarCreateAccountOp::set_new_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  new_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarCreateAccountOp.new_account)
}
inline void StellarCreateAccountOp::set_new_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  new_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarCreateAccountOp.new_account)
}
inline ::std::string* StellarCreateAccountOp::mutable_new_account() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarCreateAccountOp.new_account)
  return new_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarCreateAccountOp::release_new_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarCreateAccountOp.new_account)
  if (!has_new_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return new_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarCreateAccountOp::set_allocated_new_account(::std::string* new_account) {
  if (new_account != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  new_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarCreateAccountOp.new_account)
}

// optional sint64 starting_balance = 3;
inline bool StellarCreateAccountOp::has_starting_balance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StellarCreateAccountOp::clear_starting_balance() {
  starting_balance_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int64 StellarCreateAccountOp::starting_balance() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarCreateAccountOp.starting_balance)
  return starting_balance_;
}
inline void StellarCreateAccountOp::set_starting_balance(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  starting_balance_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarCreateAccountOp.starting_balance)
}

// -------------------------------------------------------------------

// StellarPathPaymentOp

// optional string source_account = 1;
inline bool StellarPathPaymentOp::has_source_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarPathPaymentOp::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarPathPaymentOp::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarPathPaymentOp.source_account)
  return source_account_.GetNoArena();
}
inline void StellarPathPaymentOp::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarPathPaymentOp.source_account)
}
#if LANG_CXX11
inline void StellarPathPaymentOp::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarPathPaymentOp.source_account)
}
#endif
inline void StellarPathPaymentOp::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarPathPaymentOp.source_account)
}
inline void StellarPathPaymentOp::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarPathPaymentOp.source_account)
}
inline ::std::string* StellarPathPaymentOp::mutable_source_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarPathPaymentOp.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarPathPaymentOp::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarPathPaymentOp.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarPathPaymentOp::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarPathPaymentOp.source_account)
}

// optional .hw.trezor.messages.stellar.StellarAssetType send_asset = 2;
inline bool StellarPathPaymentOp::has_send_asset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StellarPathPaymentOp::clear_send_asset() {
  if (send_asset_ != nullptr) send_asset_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::hw::trezor::messages::stellar::StellarAssetType& StellarPathPaymentOp::send_asset() const {
  const ::hw::trezor::messages::stellar::StellarAssetType* p = send_asset_;
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarPathPaymentOp.send_asset)
  return p != nullptr ? *p : *reinterpret_cast<const ::hw::trezor::messages::stellar::StellarAssetType*>(
      &::hw::trezor::messages::stellar::_StellarAssetType_default_instance_);
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarPathPaymentOp::release_send_asset() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarPathPaymentOp.send_asset)
  _has_bits_[0] &= ~0x00000004u;
  ::hw::trezor::messages::stellar::StellarAssetType* temp = send_asset_;
  send_asset_ = nullptr;
  return temp;
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarPathPaymentOp::mutable_send_asset() {
  _has_bits_[0] |= 0x00000004u;
  if (send_asset_ == nullptr) {
    auto* p = CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAssetType>(GetArenaNoVirtual());
    send_asset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarPathPaymentOp.send_asset)
  return send_asset_;
}
inline void StellarPathPaymentOp::set_allocated_send_asset(::hw::trezor::messages::stellar::StellarAssetType* send_asset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete send_asset_;
  }
  if (send_asset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      send_asset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, send_asset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  send_asset_ = send_asset;
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarPathPaymentOp.send_asset)
}

// optional sint64 send_max = 3;
inline bool StellarPathPaymentOp::has_send_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StellarPathPaymentOp::clear_send_max() {
  send_max_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int64 StellarPathPaymentOp::send_max() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarPathPaymentOp.send_max)
  return send_max_;
}
inline void StellarPathPaymentOp::set_send_max(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  send_max_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarPathPaymentOp.send_max)
}

// optional string destination_account = 4;
inline bool StellarPathPaymentOp::has_destination_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarPathPaymentOp::clear_destination_account() {
  destination_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StellarPathPaymentOp::destination_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account)
  return destination_account_.GetNoArena();
}
inline void StellarPathPaymentOp::set_destination_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account)
}
#if LANG_CXX11
inline void StellarPathPaymentOp::set_destination_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account)
}
#endif
inline void StellarPathPaymentOp::set_destination_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account)
}
inline void StellarPathPaymentOp::set_destination_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account)
}
inline ::std::string* StellarPathPaymentOp::mutable_destination_account() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account)
  return destination_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarPathPaymentOp::release_destination_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account)
  if (!has_destination_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return destination_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarPathPaymentOp::set_allocated_destination_account(::std::string* destination_account) {
  if (destination_account != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  destination_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account)
}

// optional .hw.trezor.messages.stellar.StellarAssetType destination_asset = 5;
inline bool StellarPathPaymentOp::has_destination_asset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StellarPathPaymentOp::clear_destination_asset() {
  if (destination_asset_ != nullptr) destination_asset_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::hw::trezor::messages::stellar::StellarAssetType& StellarPathPaymentOp::destination_asset() const {
  const ::hw::trezor::messages::stellar::StellarAssetType* p = destination_asset_;
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_asset)
  return p != nullptr ? *p : *reinterpret_cast<const ::hw::trezor::messages::stellar::StellarAssetType*>(
      &::hw::trezor::messages::stellar::_StellarAssetType_default_instance_);
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarPathPaymentOp::release_destination_asset() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_asset)
  _has_bits_[0] &= ~0x00000008u;
  ::hw::trezor::messages::stellar::StellarAssetType* temp = destination_asset_;
  destination_asset_ = nullptr;
  return temp;
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarPathPaymentOp::mutable_destination_asset() {
  _has_bits_[0] |= 0x00000008u;
  if (destination_asset_ == nullptr) {
    auto* p = CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAssetType>(GetArenaNoVirtual());
    destination_asset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_asset)
  return destination_asset_;
}
inline void StellarPathPaymentOp::set_allocated_destination_asset(::hw::trezor::messages::stellar::StellarAssetType* destination_asset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete destination_asset_;
  }
  if (destination_asset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      destination_asset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, destination_asset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  destination_asset_ = destination_asset;
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_asset)
}

// optional sint64 destination_amount = 6;
inline bool StellarPathPaymentOp::has_destination_amount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StellarPathPaymentOp::clear_destination_amount() {
  destination_amount_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int64 StellarPathPaymentOp::destination_amount() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_amount)
  return destination_amount_;
}
inline void StellarPathPaymentOp::set_destination_amount(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  destination_amount_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarPathPaymentOp.destination_amount)
}

// repeated .hw.trezor.messages.stellar.StellarAssetType paths = 7;
inline int StellarPathPaymentOp::paths_size() const {
  return paths_.size();
}
inline void StellarPathPaymentOp::clear_paths() {
  paths_.Clear();
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarPathPaymentOp::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarPathPaymentOp.paths)
  return paths_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::hw::trezor::messages::stellar::StellarAssetType >*
StellarPathPaymentOp::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:hw.trezor.messages.stellar.StellarPathPaymentOp.paths)
  return &paths_;
}
inline const ::hw::trezor::messages::stellar::StellarAssetType& StellarPathPaymentOp::paths(int index) const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarPathPaymentOp.paths)
  return paths_.Get(index);
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarPathPaymentOp::add_paths() {
  // @@protoc_insertion_point(field_add:hw.trezor.messages.stellar.StellarPathPaymentOp.paths)
  return paths_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hw::trezor::messages::stellar::StellarAssetType >&
StellarPathPaymentOp::paths() const {
  // @@protoc_insertion_point(field_list:hw.trezor.messages.stellar.StellarPathPaymentOp.paths)
  return paths_;
}

// -------------------------------------------------------------------

// StellarManageOfferOp

// optional string source_account = 1;
inline bool StellarManageOfferOp::has_source_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarManageOfferOp::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarManageOfferOp::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarManageOfferOp.source_account)
  return source_account_.GetNoArena();
}
inline void StellarManageOfferOp::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarManageOfferOp.source_account)
}
#if LANG_CXX11
inline void StellarManageOfferOp::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarManageOfferOp.source_account)
}
#endif
inline void StellarManageOfferOp::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarManageOfferOp.source_account)
}
inline void StellarManageOfferOp::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarManageOfferOp.source_account)
}
inline ::std::string* StellarManageOfferOp::mutable_source_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarManageOfferOp.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarManageOfferOp::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarManageOfferOp.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarManageOfferOp::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarManageOfferOp.source_account)
}

// optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
inline bool StellarManageOfferOp::has_selling_asset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarManageOfferOp::clear_selling_asset() {
  if (selling_asset_ != nullptr) selling_asset_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::hw::trezor::messages::stellar::StellarAssetType& StellarManageOfferOp::selling_asset() const {
  const ::hw::trezor::messages::stellar::StellarAssetType* p = selling_asset_;
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarManageOfferOp.selling_asset)
  return p != nullptr ? *p : *reinterpret_cast<const ::hw::trezor::messages::stellar::StellarAssetType*>(
      &::hw::trezor::messages::stellar::_StellarAssetType_default_instance_);
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarManageOfferOp::release_selling_asset() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarManageOfferOp.selling_asset)
  _has_bits_[0] &= ~0x00000002u;
  ::hw::trezor::messages::stellar::StellarAssetType* temp = selling_asset_;
  selling_asset_ = nullptr;
  return temp;
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarManageOfferOp::mutable_selling_asset() {
  _has_bits_[0] |= 0x00000002u;
  if (selling_asset_ == nullptr) {
    auto* p = CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAssetType>(GetArenaNoVirtual());
    selling_asset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarManageOfferOp.selling_asset)
  return selling_asset_;
}
inline void StellarManageOfferOp::set_allocated_selling_asset(::hw::trezor::messages::stellar::StellarAssetType* selling_asset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete selling_asset_;
  }
  if (selling_asset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      selling_asset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selling_asset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  selling_asset_ = selling_asset;
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarManageOfferOp.selling_asset)
}

// optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
inline bool StellarManageOfferOp::has_buying_asset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StellarManageOfferOp::clear_buying_asset() {
  if (buying_asset_ != nullptr) buying_asset_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::hw::trezor::messages::stellar::StellarAssetType& StellarManageOfferOp::buying_asset() const {
  const ::hw::trezor::messages::stellar::StellarAssetType* p = buying_asset_;
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarManageOfferOp.buying_asset)
  return p != nullptr ? *p : *reinterpret_cast<const ::hw::trezor::messages::stellar::StellarAssetType*>(
      &::hw::trezor::messages::stellar::_StellarAssetType_default_instance_);
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarManageOfferOp::release_buying_asset() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarManageOfferOp.buying_asset)
  _has_bits_[0] &= ~0x00000004u;
  ::hw::trezor::messages::stellar::StellarAssetType* temp = buying_asset_;
  buying_asset_ = nullptr;
  return temp;
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarManageOfferOp::mutable_buying_asset() {
  _has_bits_[0] |= 0x00000004u;
  if (buying_asset_ == nullptr) {
    auto* p = CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAssetType>(GetArenaNoVirtual());
    buying_asset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarManageOfferOp.buying_asset)
  return buying_asset_;
}
inline void StellarManageOfferOp::set_allocated_buying_asset(::hw::trezor::messages::stellar::StellarAssetType* buying_asset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete buying_asset_;
  }
  if (buying_asset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      buying_asset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, buying_asset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  buying_asset_ = buying_asset;
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarManageOfferOp.buying_asset)
}

// optional sint64 amount = 4;
inline bool StellarManageOfferOp::has_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StellarManageOfferOp::clear_amount() {
  amount_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 StellarManageOfferOp::amount() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarManageOfferOp.amount)
  return amount_;
}
inline void StellarManageOfferOp::set_amount(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  amount_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarManageOfferOp.amount)
}

// optional uint32 price_n = 5;
inline bool StellarManageOfferOp::has_price_n() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StellarManageOfferOp::clear_price_n() {
  price_n_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 StellarManageOfferOp::price_n() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarManageOfferOp.price_n)
  return price_n_;
}
inline void StellarManageOfferOp::set_price_n(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  price_n_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarManageOfferOp.price_n)
}

// optional uint32 price_d = 6;
inline bool StellarManageOfferOp::has_price_d() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StellarManageOfferOp::clear_price_d() {
  price_d_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 StellarManageOfferOp::price_d() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarManageOfferOp.price_d)
  return price_d_;
}
inline void StellarManageOfferOp::set_price_d(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  price_d_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarManageOfferOp.price_d)
}

// optional uint64 offer_id = 7;
inline bool StellarManageOfferOp::has_offer_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StellarManageOfferOp::clear_offer_id() {
  offer_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint64 StellarManageOfferOp::offer_id() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarManageOfferOp.offer_id)
  return offer_id_;
}
inline void StellarManageOfferOp::set_offer_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  offer_id_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarManageOfferOp.offer_id)
}

// -------------------------------------------------------------------

// StellarCreatePassiveOfferOp

// optional string source_account = 1;
inline bool StellarCreatePassiveOfferOp::has_source_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarCreatePassiveOfferOp::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarCreatePassiveOfferOp::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account)
  return source_account_.GetNoArena();
}
inline void StellarCreatePassiveOfferOp::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account)
}
#if LANG_CXX11
inline void StellarCreatePassiveOfferOp::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account)
}
#endif
inline void StellarCreatePassiveOfferOp::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account)
}
inline void StellarCreatePassiveOfferOp::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account)
}
inline ::std::string* StellarCreatePassiveOfferOp::mutable_source_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarCreatePassiveOfferOp::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarCreatePassiveOfferOp::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account)
}

// optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
inline bool StellarCreatePassiveOfferOp::has_selling_asset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarCreatePassiveOfferOp::clear_selling_asset() {
  if (selling_asset_ != nullptr) selling_asset_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::hw::trezor::messages::stellar::StellarAssetType& StellarCreatePassiveOfferOp::selling_asset() const {
  const ::hw::trezor::messages::stellar::StellarAssetType* p = selling_asset_;
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.selling_asset)
  return p != nullptr ? *p : *reinterpret_cast<const ::hw::trezor::messages::stellar::StellarAssetType*>(
      &::hw::trezor::messages::stellar::_StellarAssetType_default_instance_);
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarCreatePassiveOfferOp::release_selling_asset() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.selling_asset)
  _has_bits_[0] &= ~0x00000002u;
  ::hw::trezor::messages::stellar::StellarAssetType* temp = selling_asset_;
  selling_asset_ = nullptr;
  return temp;
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarCreatePassiveOfferOp::mutable_selling_asset() {
  _has_bits_[0] |= 0x00000002u;
  if (selling_asset_ == nullptr) {
    auto* p = CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAssetType>(GetArenaNoVirtual());
    selling_asset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.selling_asset)
  return selling_asset_;
}
inline void StellarCreatePassiveOfferOp::set_allocated_selling_asset(::hw::trezor::messages::stellar::StellarAssetType* selling_asset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete selling_asset_;
  }
  if (selling_asset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      selling_asset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selling_asset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  selling_asset_ = selling_asset;
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.selling_asset)
}

// optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
inline bool StellarCreatePassiveOfferOp::has_buying_asset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StellarCreatePassiveOfferOp::clear_buying_asset() {
  if (buying_asset_ != nullptr) buying_asset_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::hw::trezor::messages::stellar::StellarAssetType& StellarCreatePassiveOfferOp::buying_asset() const {
  const ::hw::trezor::messages::stellar::StellarAssetType* p = buying_asset_;
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.buying_asset)
  return p != nullptr ? *p : *reinterpret_cast<const ::hw::trezor::messages::stellar::StellarAssetType*>(
      &::hw::trezor::messages::stellar::_StellarAssetType_default_instance_);
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarCreatePassiveOfferOp::release_buying_asset() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.buying_asset)
  _has_bits_[0] &= ~0x00000004u;
  ::hw::trezor::messages::stellar::StellarAssetType* temp = buying_asset_;
  buying_asset_ = nullptr;
  return temp;
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarCreatePassiveOfferOp::mutable_buying_asset() {
  _has_bits_[0] |= 0x00000004u;
  if (buying_asset_ == nullptr) {
    auto* p = CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAssetType>(GetArenaNoVirtual());
    buying_asset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.buying_asset)
  return buying_asset_;
}
inline void StellarCreatePassiveOfferOp::set_allocated_buying_asset(::hw::trezor::messages::stellar::StellarAssetType* buying_asset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete buying_asset_;
  }
  if (buying_asset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      buying_asset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, buying_asset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  buying_asset_ = buying_asset;
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.buying_asset)
}

// optional sint64 amount = 4;
inline bool StellarCreatePassiveOfferOp::has_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StellarCreatePassiveOfferOp::clear_amount() {
  amount_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 StellarCreatePassiveOfferOp::amount() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.amount)
  return amount_;
}
inline void StellarCreatePassiveOfferOp::set_amount(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  amount_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.amount)
}

// optional uint32 price_n = 5;
inline bool StellarCreatePassiveOfferOp::has_price_n() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StellarCreatePassiveOfferOp::clear_price_n() {
  price_n_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 StellarCreatePassiveOfferOp::price_n() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.price_n)
  return price_n_;
}
inline void StellarCreatePassiveOfferOp::set_price_n(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  price_n_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.price_n)
}

// optional uint32 price_d = 6;
inline bool StellarCreatePassiveOfferOp::has_price_d() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StellarCreatePassiveOfferOp::clear_price_d() {
  price_d_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 StellarCreatePassiveOfferOp::price_d() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.price_d)
  return price_d_;
}
inline void StellarCreatePassiveOfferOp::set_price_d(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  price_d_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.price_d)
}

// -------------------------------------------------------------------

// StellarSetOptionsOp

// optional string source_account = 1;
inline bool StellarSetOptionsOp::has_source_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarSetOptionsOp::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarSetOptionsOp::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.source_account)
  return source_account_.GetNoArena();
}
inline void StellarSetOptionsOp::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.source_account)
}
#if LANG_CXX11
inline void StellarSetOptionsOp::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarSetOptionsOp.source_account)
}
#endif
inline void StellarSetOptionsOp::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarSetOptionsOp.source_account)
}
inline void StellarSetOptionsOp::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarSetOptionsOp.source_account)
}
inline ::std::string* StellarSetOptionsOp::mutable_source_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarSetOptionsOp.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarSetOptionsOp::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarSetOptionsOp.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarSetOptionsOp::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarSetOptionsOp.source_account)
}

// optional string inflation_destination_account = 2;
inline bool StellarSetOptionsOp::has_inflation_destination_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarSetOptionsOp::clear_inflation_destination_account() {
  inflation_destination_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StellarSetOptionsOp::inflation_destination_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account)
  return inflation_destination_account_.GetNoArena();
}
inline void StellarSetOptionsOp::set_inflation_destination_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  inflation_destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account)
}
#if LANG_CXX11
inline void StellarSetOptionsOp::set_inflation_destination_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  inflation_destination_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account)
}
#endif
inline void StellarSetOptionsOp::set_inflation_destination_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  inflation_destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account)
}
inline void StellarSetOptionsOp::set_inflation_destination_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  inflation_destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account)
}
inline ::std::string* StellarSetOptionsOp::mutable_inflation_destination_account() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account)
  return inflation_destination_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarSetOptionsOp::release_inflation_destination_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account)
  if (!has_inflation_destination_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return inflation_destination_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarSetOptionsOp::set_allocated_inflation_destination_account(::std::string* inflation_destination_account) {
  if (inflation_destination_account != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  inflation_destination_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inflation_destination_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account)
}

// optional uint32 clear_flags = 3;
inline bool StellarSetOptionsOp::has_clear_flags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StellarSetOptionsOp::clear_clear_flags() {
  clear_flags_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 StellarSetOptionsOp::clear_flags() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.clear_flags)
  return clear_flags_;
}
inline void StellarSetOptionsOp::set_clear_flags(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  clear_flags_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.clear_flags)
}

// optional uint32 set_flags = 4;
inline bool StellarSetOptionsOp::has_set_flags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StellarSetOptionsOp::clear_set_flags() {
  set_flags_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 StellarSetOptionsOp::set_flags() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.set_flags)
  return set_flags_;
}
inline void StellarSetOptionsOp::set_set_flags(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  set_flags_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.set_flags)
}

// optional uint32 master_weight = 5;
inline bool StellarSetOptionsOp::has_master_weight() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StellarSetOptionsOp::clear_master_weight() {
  master_weight_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 StellarSetOptionsOp::master_weight() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.master_weight)
  return master_weight_;
}
inline void StellarSetOptionsOp::set_master_weight(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  master_weight_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.master_weight)
}

// optional uint32 low_threshold = 6;
inline bool StellarSetOptionsOp::has_low_threshold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StellarSetOptionsOp::clear_low_threshold() {
  low_threshold_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 StellarSetOptionsOp::low_threshold() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.low_threshold)
  return low_threshold_;
}
inline void StellarSetOptionsOp::set_low_threshold(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  low_threshold_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.low_threshold)
}

// optional uint32 medium_threshold = 7;
inline bool StellarSetOptionsOp::has_medium_threshold() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StellarSetOptionsOp::clear_medium_threshold() {
  medium_threshold_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 StellarSetOptionsOp::medium_threshold() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.medium_threshold)
  return medium_threshold_;
}
inline void StellarSetOptionsOp::set_medium_threshold(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  medium_threshold_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.medium_threshold)
}

// optional uint32 high_threshold = 8;
inline bool StellarSetOptionsOp::has_high_threshold() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void StellarSetOptionsOp::clear_high_threshold() {
  high_threshold_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 StellarSetOptionsOp::high_threshold() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.high_threshold)
  return high_threshold_;
}
inline void StellarSetOptionsOp::set_high_threshold(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  high_threshold_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.high_threshold)
}

// optional string home_domain = 9;
inline bool StellarSetOptionsOp::has_home_domain() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StellarSetOptionsOp::clear_home_domain() {
  home_domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& StellarSetOptionsOp::home_domain() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain)
  return home_domain_.GetNoArena();
}
inline void StellarSetOptionsOp::set_home_domain(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  home_domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain)
}
#if LANG_CXX11
inline void StellarSetOptionsOp::set_home_domain(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  home_domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain)
}
#endif
inline void StellarSetOptionsOp::set_home_domain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  home_domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain)
}
inline void StellarSetOptionsOp::set_home_domain(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  home_domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain)
}
inline ::std::string* StellarSetOptionsOp::mutable_home_domain() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain)
  return home_domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarSetOptionsOp::release_home_domain() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain)
  if (!has_home_domain()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return home_domain_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarSetOptionsOp::set_allocated_home_domain(::std::string* home_domain) {
  if (home_domain != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  home_domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), home_domain);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain)
}

// optional uint32 signer_type = 10;
inline bool StellarSetOptionsOp::has_signer_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void StellarSetOptionsOp::clear_signer_type() {
  signer_type_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 StellarSetOptionsOp::signer_type() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_type)
  return signer_type_;
}
inline void StellarSetOptionsOp::set_signer_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  signer_type_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_type)
}

// optional bytes signer_key = 11;
inline bool StellarSetOptionsOp::has_signer_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StellarSetOptionsOp::clear_signer_key() {
  signer_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& StellarSetOptionsOp::signer_key() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_key)
  return signer_key_.GetNoArena();
}
inline void StellarSetOptionsOp::set_signer_key(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  signer_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_key)
}
#if LANG_CXX11
inline void StellarSetOptionsOp::set_signer_key(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  signer_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_key)
}
#endif
inline void StellarSetOptionsOp::set_signer_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  signer_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_key)
}
inline void StellarSetOptionsOp::set_signer_key(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  signer_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_key)
}
inline ::std::string* StellarSetOptionsOp::mutable_signer_key() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_key)
  return signer_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarSetOptionsOp::release_signer_key() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_key)
  if (!has_signer_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return signer_key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarSetOptionsOp::set_allocated_signer_key(::std::string* signer_key) {
  if (signer_key != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  signer_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signer_key);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_key)
}

// optional uint32 signer_weight = 12;
inline bool StellarSetOptionsOp::has_signer_weight() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void StellarSetOptionsOp::clear_signer_weight() {
  signer_weight_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 StellarSetOptionsOp::signer_weight() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_weight)
  return signer_weight_;
}
inline void StellarSetOptionsOp::set_signer_weight(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  signer_weight_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSetOptionsOp.signer_weight)
}

// -------------------------------------------------------------------

// StellarChangeTrustOp

// optional string source_account = 1;
inline bool StellarChangeTrustOp::has_source_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarChangeTrustOp::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarChangeTrustOp::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarChangeTrustOp.source_account)
  return source_account_.GetNoArena();
}
inline void StellarChangeTrustOp::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarChangeTrustOp.source_account)
}
#if LANG_CXX11
inline void StellarChangeTrustOp::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarChangeTrustOp.source_account)
}
#endif
inline void StellarChangeTrustOp::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarChangeTrustOp.source_account)
}
inline void StellarChangeTrustOp::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarChangeTrustOp.source_account)
}
inline ::std::string* StellarChangeTrustOp::mutable_source_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarChangeTrustOp.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarChangeTrustOp::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarChangeTrustOp.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarChangeTrustOp::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarChangeTrustOp.source_account)
}

// optional .hw.trezor.messages.stellar.StellarAssetType asset = 2;
inline bool StellarChangeTrustOp::has_asset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarChangeTrustOp::clear_asset() {
  if (asset_ != nullptr) asset_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::hw::trezor::messages::stellar::StellarAssetType& StellarChangeTrustOp::asset() const {
  const ::hw::trezor::messages::stellar::StellarAssetType* p = asset_;
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarChangeTrustOp.asset)
  return p != nullptr ? *p : *reinterpret_cast<const ::hw::trezor::messages::stellar::StellarAssetType*>(
      &::hw::trezor::messages::stellar::_StellarAssetType_default_instance_);
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarChangeTrustOp::release_asset() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarChangeTrustOp.asset)
  _has_bits_[0] &= ~0x00000002u;
  ::hw::trezor::messages::stellar::StellarAssetType* temp = asset_;
  asset_ = nullptr;
  return temp;
}
inline ::hw::trezor::messages::stellar::StellarAssetType* StellarChangeTrustOp::mutable_asset() {
  _has_bits_[0] |= 0x00000002u;
  if (asset_ == nullptr) {
    auto* p = CreateMaybeMessage<::hw::trezor::messages::stellar::StellarAssetType>(GetArenaNoVirtual());
    asset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarChangeTrustOp.asset)
  return asset_;
}
inline void StellarChangeTrustOp::set_allocated_asset(::hw::trezor::messages::stellar::StellarAssetType* asset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete asset_;
  }
  if (asset) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      asset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, asset, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  asset_ = asset;
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarChangeTrustOp.asset)
}

// optional uint64 limit = 3;
inline bool StellarChangeTrustOp::has_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StellarChangeTrustOp::clear_limit() {
  limit_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 StellarChangeTrustOp::limit() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarChangeTrustOp.limit)
  return limit_;
}
inline void StellarChangeTrustOp::set_limit(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  limit_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarChangeTrustOp.limit)
}

// -------------------------------------------------------------------

// StellarAllowTrustOp

// optional string source_account = 1;
inline bool StellarAllowTrustOp::has_source_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarAllowTrustOp::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarAllowTrustOp::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarAllowTrustOp.source_account)
  return source_account_.GetNoArena();
}
inline void StellarAllowTrustOp::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarAllowTrustOp.source_account)
}
#if LANG_CXX11
inline void StellarAllowTrustOp::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarAllowTrustOp.source_account)
}
#endif
inline void StellarAllowTrustOp::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarAllowTrustOp.source_account)
}
inline void StellarAllowTrustOp::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarAllowTrustOp.source_account)
}
inline ::std::string* StellarAllowTrustOp::mutable_source_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarAllowTrustOp.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarAllowTrustOp::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarAllowTrustOp.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarAllowTrustOp::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarAllowTrustOp.source_account)
}

// optional string trusted_account = 2;
inline bool StellarAllowTrustOp::has_trusted_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarAllowTrustOp::clear_trusted_account() {
  trusted_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StellarAllowTrustOp::trusted_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account)
  return trusted_account_.GetNoArena();
}
inline void StellarAllowTrustOp::set_trusted_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  trusted_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account)
}
#if LANG_CXX11
inline void StellarAllowTrustOp::set_trusted_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  trusted_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account)
}
#endif
inline void StellarAllowTrustOp::set_trusted_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  trusted_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account)
}
inline void StellarAllowTrustOp::set_trusted_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  trusted_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account)
}
inline ::std::string* StellarAllowTrustOp::mutable_trusted_account() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account)
  return trusted_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarAllowTrustOp::release_trusted_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account)
  if (!has_trusted_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return trusted_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarAllowTrustOp::set_allocated_trusted_account(::std::string* trusted_account) {
  if (trusted_account != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  trusted_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trusted_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account)
}

// optional uint32 asset_type = 3;
inline bool StellarAllowTrustOp::has_asset_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StellarAllowTrustOp::clear_asset_type() {
  asset_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 StellarAllowTrustOp::asset_type() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarAllowTrustOp.asset_type)
  return asset_type_;
}
inline void StellarAllowTrustOp::set_asset_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  asset_type_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarAllowTrustOp.asset_type)
}

// optional string asset_code = 4;
inline bool StellarAllowTrustOp::has_asset_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StellarAllowTrustOp::clear_asset_code() {
  asset_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& StellarAllowTrustOp::asset_code() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code)
  return asset_code_.GetNoArena();
}
inline void StellarAllowTrustOp::set_asset_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  asset_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code)
}
#if LANG_CXX11
inline void StellarAllowTrustOp::set_asset_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  asset_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code)
}
#endif
inline void StellarAllowTrustOp::set_asset_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  asset_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code)
}
inline void StellarAllowTrustOp::set_asset_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  asset_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code)
}
inline ::std::string* StellarAllowTrustOp::mutable_asset_code() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code)
  return asset_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarAllowTrustOp::release_asset_code() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code)
  if (!has_asset_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return asset_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarAllowTrustOp::set_allocated_asset_code(::std::string* asset_code) {
  if (asset_code != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  asset_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asset_code);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code)
}

// optional uint32 is_authorized = 5;
inline bool StellarAllowTrustOp::has_is_authorized() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StellarAllowTrustOp::clear_is_authorized() {
  is_authorized_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 StellarAllowTrustOp::is_authorized() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarAllowTrustOp.is_authorized)
  return is_authorized_;
}
inline void StellarAllowTrustOp::set_is_authorized(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  is_authorized_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarAllowTrustOp.is_authorized)
}

// -------------------------------------------------------------------

// StellarAccountMergeOp

// optional string source_account = 1;
inline bool StellarAccountMergeOp::has_source_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarAccountMergeOp::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarAccountMergeOp::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarAccountMergeOp.source_account)
  return source_account_.GetNoArena();
}
inline void StellarAccountMergeOp::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarAccountMergeOp.source_account)
}
#if LANG_CXX11
inline void StellarAccountMergeOp::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarAccountMergeOp.source_account)
}
#endif
inline void StellarAccountMergeOp::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarAccountMergeOp.source_account)
}
inline void StellarAccountMergeOp::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarAccountMergeOp.source_account)
}
inline ::std::string* StellarAccountMergeOp::mutable_source_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarAccountMergeOp.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarAccountMergeOp::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarAccountMergeOp.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarAccountMergeOp::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarAccountMergeOp.source_account)
}

// optional string destination_account = 2;
inline bool StellarAccountMergeOp::has_destination_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarAccountMergeOp::clear_destination_account() {
  destination_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StellarAccountMergeOp::destination_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account)
  return destination_account_.GetNoArena();
}
inline void StellarAccountMergeOp::set_destination_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account)
}
#if LANG_CXX11
inline void StellarAccountMergeOp::set_destination_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account)
}
#endif
inline void StellarAccountMergeOp::set_destination_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account)
}
inline void StellarAccountMergeOp::set_destination_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  destination_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account)
}
inline ::std::string* StellarAccountMergeOp::mutable_destination_account() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account)
  return destination_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarAccountMergeOp::release_destination_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account)
  if (!has_destination_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return destination_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarAccountMergeOp::set_allocated_destination_account(::std::string* destination_account) {
  if (destination_account != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  destination_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account)
}

// -------------------------------------------------------------------

// StellarManageDataOp

// optional string source_account = 1;
inline bool StellarManageDataOp::has_source_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarManageDataOp::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarManageDataOp::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarManageDataOp.source_account)
  return source_account_.GetNoArena();
}
inline void StellarManageDataOp::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarManageDataOp.source_account)
}
#if LANG_CXX11
inline void StellarManageDataOp::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarManageDataOp.source_account)
}
#endif
inline void StellarManageDataOp::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarManageDataOp.source_account)
}
inline void StellarManageDataOp::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarManageDataOp.source_account)
}
inline ::std::string* StellarManageDataOp::mutable_source_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarManageDataOp.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarManageDataOp::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarManageDataOp.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarManageDataOp::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarManageDataOp.source_account)
}

// optional string key = 2;
inline bool StellarManageDataOp::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarManageDataOp::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StellarManageDataOp::key() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarManageDataOp.key)
  return key_.GetNoArena();
}
inline void StellarManageDataOp::set_key(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarManageDataOp.key)
}
#if LANG_CXX11
inline void StellarManageDataOp::set_key(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarManageDataOp.key)
}
#endif
inline void StellarManageDataOp::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarManageDataOp.key)
}
inline void StellarManageDataOp::set_key(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarManageDataOp.key)
}
inline ::std::string* StellarManageDataOp::mutable_key() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarManageDataOp.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarManageDataOp::release_key() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarManageDataOp.key)
  if (!has_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarManageDataOp::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarManageDataOp.key)
}

// optional bytes value = 3;
inline bool StellarManageDataOp::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StellarManageDataOp::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& StellarManageDataOp::value() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarManageDataOp.value)
  return value_.GetNoArena();
}
inline void StellarManageDataOp::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarManageDataOp.value)
}
#if LANG_CXX11
inline void StellarManageDataOp::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarManageDataOp.value)
}
#endif
inline void StellarManageDataOp::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarManageDataOp.value)
}
inline void StellarManageDataOp::set_value(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarManageDataOp.value)
}
inline ::std::string* StellarManageDataOp::mutable_value() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarManageDataOp.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarManageDataOp::release_value() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarManageDataOp.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarManageDataOp::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarManageDataOp.value)
}

// -------------------------------------------------------------------

// StellarBumpSequenceOp

// optional string source_account = 1;
inline bool StellarBumpSequenceOp::has_source_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarBumpSequenceOp::clear_source_account() {
  source_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarBumpSequenceOp::source_account() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account)
  return source_account_.GetNoArena();
}
inline void StellarBumpSequenceOp::set_source_account(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account)
}
#if LANG_CXX11
inline void StellarBumpSequenceOp::set_source_account(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account)
}
#endif
inline void StellarBumpSequenceOp::set_source_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account)
}
inline void StellarBumpSequenceOp::set_source_account(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  source_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account)
}
inline ::std::string* StellarBumpSequenceOp::mutable_source_account() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account)
  return source_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarBumpSequenceOp::release_source_account() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account)
  if (!has_source_account()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return source_account_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarBumpSequenceOp::set_allocated_source_account(::std::string* source_account) {
  if (source_account != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  source_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_account);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account)
}

// optional uint64 bump_to = 2;
inline bool StellarBumpSequenceOp::has_bump_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarBumpSequenceOp::clear_bump_to() {
  bump_to_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 StellarBumpSequenceOp::bump_to() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarBumpSequenceOp.bump_to)
  return bump_to_;
}
inline void StellarBumpSequenceOp::set_bump_to(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  bump_to_ = value;
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarBumpSequenceOp.bump_to)
}

// -------------------------------------------------------------------

// StellarSignedTx

// optional bytes public_key = 1;
inline bool StellarSignedTx::has_public_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StellarSignedTx::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StellarSignedTx::public_key() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignedTx.public_key)
  return public_key_.GetNoArena();
}
inline void StellarSignedTx::set_public_key(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignedTx.public_key)
}
#if LANG_CXX11
inline void StellarSignedTx::set_public_key(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarSignedTx.public_key)
}
#endif
inline void StellarSignedTx::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarSignedTx.public_key)
}
inline void StellarSignedTx::set_public_key(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarSignedTx.public_key)
}
inline ::std::string* StellarSignedTx::mutable_public_key() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarSignedTx.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarSignedTx::release_public_key() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarSignedTx.public_key)
  if (!has_public_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return public_key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarSignedTx::set_allocated_public_key(::std::string* public_key) {
  if (public_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarSignedTx.public_key)
}

// optional bytes signature = 2;
inline bool StellarSignedTx::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StellarSignedTx::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& StellarSignedTx::signature() const {
  // @@protoc_insertion_point(field_get:hw.trezor.messages.stellar.StellarSignedTx.signature)
  return signature_.GetNoArena();
}
inline void StellarSignedTx::set_signature(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hw.trezor.messages.stellar.StellarSignedTx.signature)
}
#if LANG_CXX11
inline void StellarSignedTx::set_signature(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hw.trezor.messages.stellar.StellarSignedTx.signature)
}
#endif
inline void StellarSignedTx::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hw.trezor.messages.stellar.StellarSignedTx.signature)
}
inline void StellarSignedTx::set_signature(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hw.trezor.messages.stellar.StellarSignedTx.signature)
}
inline ::std::string* StellarSignedTx::mutable_signature() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:hw.trezor.messages.stellar.StellarSignedTx.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StellarSignedTx::release_signature() {
  // @@protoc_insertion_point(field_release:hw.trezor.messages.stellar.StellarSignedTx.signature)
  if (!has_signature()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return signature_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StellarSignedTx::set_allocated_signature(::std::string* signature) {
  if (signature != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:hw.trezor.messages.stellar.StellarSignedTx.signature)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace stellar
}  // namespace messages
}  // namespace trezor
}  // namespace hw

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_messages_2dstellar_2eproto
