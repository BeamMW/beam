// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages-monero.proto

#include "messages-monero.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList_messages_2dmonero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MoneroKeyImageSyncStepAck_MoneroExportedKeyImage_messages_2dmonero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MoneroKeyImageSyncStepRequest_MoneroTransferDetails_messages_2dmonero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionAllOutSetAck_MoneroRingCtSig_messages_2dmonero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionDestinationEntry_MoneroAccountPublicAddress_messages_2dmonero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionRsigData_messages_2dmonero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionSourceEntry_MoneroMultisigKLRki_messages_2dmonero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic_messages_2dmonero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionDestinationEntry_messages_2dmonero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_messages_2dmonero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MoneroTransactionInitRequest_MoneroTransactionData_messages_2dmonero_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2dmonero_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MoneroTransactionSourceEntry_messages_2dmonero_2eproto;
namespace hw {
namespace trezor {
namespace messages {
namespace monero {
class MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic> _instance;
} _MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic_default_instance_;
class MoneroTransactionSourceEntry_MoneroOutputEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionSourceEntry_MoneroOutputEntry> _instance;
} _MoneroTransactionSourceEntry_MoneroOutputEntry_default_instance_;
class MoneroTransactionSourceEntry_MoneroMultisigKLRkiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionSourceEntry_MoneroMultisigKLRki> _instance;
} _MoneroTransactionSourceEntry_MoneroMultisigKLRki_default_instance_;
class MoneroTransactionSourceEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionSourceEntry> _instance;
} _MoneroTransactionSourceEntry_default_instance_;
class MoneroTransactionDestinationEntry_MoneroAccountPublicAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionDestinationEntry_MoneroAccountPublicAddress> _instance;
} _MoneroTransactionDestinationEntry_MoneroAccountPublicAddress_default_instance_;
class MoneroTransactionDestinationEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionDestinationEntry> _instance;
} _MoneroTransactionDestinationEntry_default_instance_;
class MoneroTransactionRsigDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionRsigData> _instance;
} _MoneroTransactionRsigData_default_instance_;
class MoneroGetAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroGetAddress> _instance;
} _MoneroGetAddress_default_instance_;
class MoneroAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroAddress> _instance;
} _MoneroAddress_default_instance_;
class MoneroGetWatchKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroGetWatchKey> _instance;
} _MoneroGetWatchKey_default_instance_;
class MoneroWatchKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroWatchKey> _instance;
} _MoneroWatchKey_default_instance_;
class MoneroTransactionInitRequest_MoneroTransactionDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionInitRequest_MoneroTransactionData> _instance;
} _MoneroTransactionInitRequest_MoneroTransactionData_default_instance_;
class MoneroTransactionInitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionInitRequest> _instance;
} _MoneroTransactionInitRequest_default_instance_;
class MoneroTransactionInitAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionInitAck> _instance;
} _MoneroTransactionInitAck_default_instance_;
class MoneroTransactionSetInputRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionSetInputRequest> _instance;
} _MoneroTransactionSetInputRequest_default_instance_;
class MoneroTransactionSetInputAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionSetInputAck> _instance;
} _MoneroTransactionSetInputAck_default_instance_;
class MoneroTransactionInputsPermutationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionInputsPermutationRequest> _instance;
} _MoneroTransactionInputsPermutationRequest_default_instance_;
class MoneroTransactionInputsPermutationAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionInputsPermutationAck> _instance;
} _MoneroTransactionInputsPermutationAck_default_instance_;
class MoneroTransactionInputViniRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionInputViniRequest> _instance;
} _MoneroTransactionInputViniRequest_default_instance_;
class MoneroTransactionInputViniAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionInputViniAck> _instance;
} _MoneroTransactionInputViniAck_default_instance_;
class MoneroTransactionAllInputsSetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionAllInputsSetRequest> _instance;
} _MoneroTransactionAllInputsSetRequest_default_instance_;
class MoneroTransactionAllInputsSetAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionAllInputsSetAck> _instance;
} _MoneroTransactionAllInputsSetAck_default_instance_;
class MoneroTransactionSetOutputRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionSetOutputRequest> _instance;
} _MoneroTransactionSetOutputRequest_default_instance_;
class MoneroTransactionSetOutputAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionSetOutputAck> _instance;
} _MoneroTransactionSetOutputAck_default_instance_;
class MoneroTransactionAllOutSetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionAllOutSetRequest> _instance;
} _MoneroTransactionAllOutSetRequest_default_instance_;
class MoneroTransactionAllOutSetAck_MoneroRingCtSigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionAllOutSetAck_MoneroRingCtSig> _instance;
} _MoneroTransactionAllOutSetAck_MoneroRingCtSig_default_instance_;
class MoneroTransactionAllOutSetAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionAllOutSetAck> _instance;
} _MoneroTransactionAllOutSetAck_default_instance_;
class MoneroTransactionSignInputRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionSignInputRequest> _instance;
} _MoneroTransactionSignInputRequest_default_instance_;
class MoneroTransactionSignInputAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionSignInputAck> _instance;
} _MoneroTransactionSignInputAck_default_instance_;
class MoneroTransactionFinalRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionFinalRequest> _instance;
} _MoneroTransactionFinalRequest_default_instance_;
class MoneroTransactionFinalAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroTransactionFinalAck> _instance;
} _MoneroTransactionFinalAck_default_instance_;
class MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList> _instance;
} _MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList_default_instance_;
class MoneroKeyImageExportInitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroKeyImageExportInitRequest> _instance;
} _MoneroKeyImageExportInitRequest_default_instance_;
class MoneroKeyImageExportInitAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroKeyImageExportInitAck> _instance;
} _MoneroKeyImageExportInitAck_default_instance_;
class MoneroKeyImageSyncStepRequest_MoneroTransferDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroKeyImageSyncStepRequest_MoneroTransferDetails> _instance;
} _MoneroKeyImageSyncStepRequest_MoneroTransferDetails_default_instance_;
class MoneroKeyImageSyncStepRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroKeyImageSyncStepRequest> _instance;
} _MoneroKeyImageSyncStepRequest_default_instance_;
class MoneroKeyImageSyncStepAck_MoneroExportedKeyImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroKeyImageSyncStepAck_MoneroExportedKeyImage> _instance;
} _MoneroKeyImageSyncStepAck_MoneroExportedKeyImage_default_instance_;
class MoneroKeyImageSyncStepAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroKeyImageSyncStepAck> _instance;
} _MoneroKeyImageSyncStepAck_default_instance_;
class MoneroKeyImageSyncFinalRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroKeyImageSyncFinalRequest> _instance;
} _MoneroKeyImageSyncFinalRequest_default_instance_;
class MoneroKeyImageSyncFinalAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroKeyImageSyncFinalAck> _instance;
} _MoneroKeyImageSyncFinalAck_default_instance_;
class MoneroGetTxKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroGetTxKeyRequest> _instance;
} _MoneroGetTxKeyRequest_default_instance_;
class MoneroGetTxKeyAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroGetTxKeyAck> _instance;
} _MoneroGetTxKeyAck_default_instance_;
class MoneroLiveRefreshStartRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroLiveRefreshStartRequest> _instance;
} _MoneroLiveRefreshStartRequest_default_instance_;
class MoneroLiveRefreshStartAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroLiveRefreshStartAck> _instance;
} _MoneroLiveRefreshStartAck_default_instance_;
class MoneroLiveRefreshStepRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroLiveRefreshStepRequest> _instance;
} _MoneroLiveRefreshStepRequest_default_instance_;
class MoneroLiveRefreshStepAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroLiveRefreshStepAck> _instance;
} _MoneroLiveRefreshStepAck_default_instance_;
class MoneroLiveRefreshFinalRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroLiveRefreshFinalRequest> _instance;
} _MoneroLiveRefreshFinalRequest_default_instance_;
class MoneroLiveRefreshFinalAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneroLiveRefreshFinalAck> _instance;
} _MoneroLiveRefreshFinalAck_default_instance_;
class DebugMoneroDiagRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebugMoneroDiagRequest> _instance;
} _DebugMoneroDiagRequest_default_instance_;
class DebugMoneroDiagAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebugMoneroDiagAck> _instance;
} _DebugMoneroDiagAck_default_instance_;
}  // namespace monero
}  // namespace messages
}  // namespace trezor
}  // namespace hw
static void InitDefaultsMoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionSourceEntry_MoneroOutputEntry_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionSourceEntry_MoneroOutputEntry_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroTransactionSourceEntry_MoneroOutputEntry_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionSourceEntry_MoneroMultisigKLRki_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionSourceEntry_MoneroMultisigKLRki_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionSourceEntry_MoneroMultisigKLRki_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionSourceEntry_MoneroMultisigKLRki_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionSourceEntry_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionSourceEntry_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionSourceEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionSourceEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MoneroTransactionSourceEntry_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMoneroTransactionSourceEntry_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_messages_2dmonero_2eproto.base,
      &scc_info_MoneroTransactionSourceEntry_MoneroMultisigKLRki_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionDestinationEntry_MoneroAccountPublicAddress_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionDestinationEntry_MoneroAccountPublicAddress_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionDestinationEntry_MoneroAccountPublicAddress_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionDestinationEntry_MoneroAccountPublicAddress_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionDestinationEntry_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionDestinationEntry_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionDestinationEntry_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroTransactionDestinationEntry_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionDestinationEntry_MoneroAccountPublicAddress_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionRsigData_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionRsigData_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionRsigData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionRsigData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionRsigData_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionRsigData_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroGetAddress_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroGetAddress_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroGetAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroGetAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroGetAddress_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroGetAddress_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroAddress_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroAddress_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroAddress_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroAddress_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroGetWatchKey_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroGetWatchKey_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroGetWatchKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroGetWatchKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroGetWatchKey_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroGetWatchKey_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroWatchKey_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroWatchKey_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroWatchKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroWatchKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroWatchKey_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroWatchKey_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionInitRequest_MoneroTransactionData_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionInitRequest_MoneroTransactionData_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MoneroTransactionInitRequest_MoneroTransactionData_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMoneroTransactionInitRequest_MoneroTransactionData_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionDestinationEntry_messages_2dmonero_2eproto.base,
      &scc_info_MoneroTransactionRsigData_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionInitRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionInitRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionInitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionInitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionInitRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroTransactionInitRequest_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionInitRequest_MoneroTransactionData_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionInitAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionInitAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionInitAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionInitAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionInitAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroTransactionInitAck_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionRsigData_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionSetInputRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionSetInputRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionSetInputRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionSetInputRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionSetInputRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroTransactionSetInputRequest_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionSourceEntry_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionSetInputAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionSetInputAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionSetInputAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionSetInputAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionSetInputAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionSetInputAck_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionInputsPermutationRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionInputsPermutationRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionInputsPermutationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionInputsPermutationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionInputsPermutationRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionInputsPermutationRequest_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionInputsPermutationAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionInputsPermutationAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionInputsPermutationAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionInputsPermutationAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionInputsPermutationAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionInputsPermutationAck_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionInputViniRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionInputViniRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionInputViniRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionInputViniRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionInputViniRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroTransactionInputViniRequest_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionSourceEntry_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionInputViniAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionInputViniAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionInputViniAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionInputViniAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionInputViniAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionInputViniAck_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionAllInputsSetRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionAllInputsSetRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionAllInputsSetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionAllInputsSetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionAllInputsSetRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionAllInputsSetRequest_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionAllInputsSetAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionAllInputsSetAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionAllInputsSetAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionAllInputsSetAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionAllInputsSetAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroTransactionAllInputsSetAck_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionRsigData_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionSetOutputRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionSetOutputRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionSetOutputRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionSetOutputRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MoneroTransactionSetOutputRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMoneroTransactionSetOutputRequest_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionDestinationEntry_messages_2dmonero_2eproto.base,
      &scc_info_MoneroTransactionRsigData_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionSetOutputAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionSetOutputAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionSetOutputAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionSetOutputAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionSetOutputAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroTransactionSetOutputAck_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionRsigData_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionAllOutSetRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionAllOutSetRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionAllOutSetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionAllOutSetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionAllOutSetRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroTransactionAllOutSetRequest_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionRsigData_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionAllOutSetAck_MoneroRingCtSig_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionAllOutSetAck_MoneroRingCtSig_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionAllOutSetAck_MoneroRingCtSig_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionAllOutSetAck_MoneroRingCtSig_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionAllOutSetAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionAllOutSetAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionAllOutSetAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroTransactionAllOutSetAck_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionAllOutSetAck_MoneroRingCtSig_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionSignInputRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionSignInputRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionSignInputRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionSignInputRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroTransactionSignInputRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroTransactionSignInputRequest_messages_2dmonero_2eproto}, {
      &scc_info_MoneroTransactionSourceEntry_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroTransactionSignInputAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionSignInputAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionSignInputAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionSignInputAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionSignInputAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionSignInputAck_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionFinalRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionFinalRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionFinalRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionFinalRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionFinalRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionFinalRequest_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroTransactionFinalAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroTransactionFinalAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroTransactionFinalAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroTransactionFinalAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroTransactionFinalAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroTransactionFinalAck_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroKeyImageExportInitRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroKeyImageExportInitRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroKeyImageExportInitRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroKeyImageExportInitRequest_messages_2dmonero_2eproto}, {
      &scc_info_MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroKeyImageExportInitAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroKeyImageExportInitAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroKeyImageExportInitAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroKeyImageExportInitAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroKeyImageExportInitAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroKeyImageExportInitAck_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroKeyImageSyncStepRequest_MoneroTransferDetails_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroKeyImageSyncStepRequest_MoneroTransferDetails_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroKeyImageSyncStepRequest_MoneroTransferDetails_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroKeyImageSyncStepRequest_MoneroTransferDetails_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroKeyImageSyncStepRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroKeyImageSyncStepRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroKeyImageSyncStepRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroKeyImageSyncStepRequest_messages_2dmonero_2eproto}, {
      &scc_info_MoneroKeyImageSyncStepRequest_MoneroTransferDetails_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroKeyImageSyncStepAck_MoneroExportedKeyImage_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroKeyImageSyncStepAck_MoneroExportedKeyImage_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroKeyImageSyncStepAck_MoneroExportedKeyImage_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroKeyImageSyncStepAck_MoneroExportedKeyImage_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroKeyImageSyncStepAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroKeyImageSyncStepAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoneroKeyImageSyncStepAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoneroKeyImageSyncStepAck_messages_2dmonero_2eproto}, {
      &scc_info_MoneroKeyImageSyncStepAck_MoneroExportedKeyImage_messages_2dmonero_2eproto.base,}};

static void InitDefaultsMoneroKeyImageSyncFinalRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroKeyImageSyncFinalRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroKeyImageSyncFinalRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroKeyImageSyncFinalRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroKeyImageSyncFinalRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroKeyImageSyncFinalRequest_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroKeyImageSyncFinalAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroKeyImageSyncFinalAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroKeyImageSyncFinalAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroKeyImageSyncFinalAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroKeyImageSyncFinalAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroKeyImageSyncFinalAck_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroGetTxKeyRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroGetTxKeyRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroGetTxKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroGetTxKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroGetTxKeyRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroGetTxKeyRequest_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroGetTxKeyAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroGetTxKeyAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroGetTxKeyAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroGetTxKeyAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroGetTxKeyAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroGetTxKeyAck_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroLiveRefreshStartRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroLiveRefreshStartRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroLiveRefreshStartRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroLiveRefreshStartRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroLiveRefreshStartRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroLiveRefreshStartRequest_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroLiveRefreshStartAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroLiveRefreshStartAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroLiveRefreshStartAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroLiveRefreshStartAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroLiveRefreshStartAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroLiveRefreshStartAck_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroLiveRefreshStepRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroLiveRefreshStepRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroLiveRefreshStepRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroLiveRefreshStepRequest_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroLiveRefreshStepAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroLiveRefreshStepAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroLiveRefreshStepAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroLiveRefreshStepAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroLiveRefreshStepAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroLiveRefreshStepAck_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroLiveRefreshFinalRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroLiveRefreshFinalRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroLiveRefreshFinalRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroLiveRefreshFinalRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroLiveRefreshFinalRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroLiveRefreshFinalRequest_messages_2dmonero_2eproto}, {}};

static void InitDefaultsMoneroLiveRefreshFinalAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_MoneroLiveRefreshFinalAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::MoneroLiveRefreshFinalAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::MoneroLiveRefreshFinalAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneroLiveRefreshFinalAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneroLiveRefreshFinalAck_messages_2dmonero_2eproto}, {}};

static void InitDefaultsDebugMoneroDiagRequest_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_DebugMoneroDiagRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::DebugMoneroDiagRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::DebugMoneroDiagRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DebugMoneroDiagRequest_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDebugMoneroDiagRequest_messages_2dmonero_2eproto}, {}};

static void InitDefaultsDebugMoneroDiagAck_messages_2dmonero_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::monero::_DebugMoneroDiagAck_default_instance_;
    new (ptr) ::hw::trezor::messages::monero::DebugMoneroDiagAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::monero::DebugMoneroDiagAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DebugMoneroDiagAck_messages_2dmonero_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDebugMoneroDiagAck_messages_2dmonero_2eproto}, {}};

void InitDefaults_messages_2dmonero_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionSourceEntry_MoneroMultisigKLRki_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionSourceEntry_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionDestinationEntry_MoneroAccountPublicAddress_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionDestinationEntry_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionRsigData_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroGetAddress_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroAddress_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroGetWatchKey_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroWatchKey_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionInitRequest_MoneroTransactionData_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionInitRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionInitAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionSetInputRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionSetInputAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionInputsPermutationRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionInputsPermutationAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionInputViniRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionInputViniAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionAllInputsSetRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionAllInputsSetAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionSetOutputRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionSetOutputAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionAllOutSetRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionAllOutSetAck_MoneroRingCtSig_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionAllOutSetAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionSignInputRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionSignInputAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionFinalRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroTransactionFinalAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroKeyImageExportInitRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroKeyImageExportInitAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroKeyImageSyncStepRequest_MoneroTransferDetails_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroKeyImageSyncStepRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroKeyImageSyncStepAck_MoneroExportedKeyImage_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroKeyImageSyncStepAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroKeyImageSyncFinalRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroKeyImageSyncFinalAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroGetTxKeyRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroGetTxKeyAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroLiveRefreshStartRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroLiveRefreshStartAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroLiveRefreshStepRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroLiveRefreshStepAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroLiveRefreshFinalRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneroLiveRefreshFinalAck_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DebugMoneroDiagRequest_messages_2dmonero_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DebugMoneroDiagAck_messages_2dmonero_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_messages_2dmonero_2eproto[50];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_messages_2dmonero_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_messages_2dmonero_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_messages_2dmonero_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic, dest_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic, commitment_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry, idx_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry, key_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki, k_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki, l_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki, r_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki, ki_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry, outputs_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry, real_output_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry, real_out_tx_key_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry, real_out_additional_tx_keys_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry, real_output_in_tx_index_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry, amount_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry, rct_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry, mask_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSourceEntry, multisig_klrki_),
  ~0u,
  3,
  0,
  ~0u,
  4,
  5,
  6,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress, spend_public_key_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress, view_public_key_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionDestinationEntry, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionDestinationEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionDestinationEntry, amount_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionDestinationEntry, addr_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionDestinationEntry, is_subaddress_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionRsigData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionRsigData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionRsigData, rsig_type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionRsigData, offload_type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionRsigData, grouping_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionRsigData, mask_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionRsigData, rsig_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionRsigData, rsig_parts_),
  2,
  3,
  ~0u,
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetAddress, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetAddress, address_n_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetAddress, show_display_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetAddress, network_type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetAddress, account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetAddress, minor_),
  ~0u,
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroAddress, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroAddress, address_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetWatchKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetWatchKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetWatchKey, address_n_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetWatchKey, network_type_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroWatchKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroWatchKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroWatchKey, watch_key_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroWatchKey, address_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, version_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, payment_id_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, unlock_time_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, outputs_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, change_dts_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, num_inputs_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, mixin_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, fee_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, minor_indices_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, rsig_data_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData, integrated_indices_),
  4,
  0,
  3,
  ~0u,
  1,
  5,
  7,
  6,
  8,
  ~0u,
  2,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest, version_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest, address_n_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest, network_type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitRequest, tsx_data_),
  1,
  ~0u,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitAck, hmacs_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInitAck, rsig_data_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetInputRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetInputRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetInputRequest, src_entr_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetInputAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetInputAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetInputAck, vini_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetInputAck, vini_hmac_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetInputAck, pseudo_out_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetInputAck, pseudo_out_hmac_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetInputAck, pseudo_out_alpha_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetInputAck, spend_key_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputsPermutationRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputsPermutationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputsPermutationRequest, perm_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputsPermutationAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputsPermutationAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputViniRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputViniRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputViniRequest, src_entr_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputViniRequest, vini_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputViniRequest, vini_hmac_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputViniRequest, pseudo_out_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputViniRequest, pseudo_out_hmac_),
  4,
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputViniAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionInputViniAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllInputsSetRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllInputsSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllInputsSetAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllInputsSetAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllInputsSetAck, rsig_data_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputRequest, dst_entr_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputRequest, dst_entr_hmac_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputRequest, rsig_data_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputAck, tx_out_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputAck, vouti_hmac_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputAck, rsig_data_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputAck, out_pk_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSetOutputAck, ecdh_info_),
  0,
  1,
  4,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetRequest, rsig_data_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig, txn_fee_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig, message_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig, rv_type_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck, extra_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck, tx_prefix_hash_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck, rv_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck, full_message_hash_),
  0,
  1,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputRequest, src_entr_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputRequest, vini_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputRequest, vini_hmac_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputRequest, pseudo_out_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputRequest, pseudo_out_hmac_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputRequest, pseudo_out_alpha_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputRequest, spend_key_),
  6,
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionSignInputAck, signature_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionFinalRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionFinalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionFinalAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionFinalAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionFinalAck, cout_key_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionFinalAck, salt_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionFinalAck, rand_mult_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroTransactionFinalAck, tx_enc_keys_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList, account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList, minor_indices_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest, num_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest, hash_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest, address_n_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest, network_type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest, subs_),
  1,
  0,
  ~0u,
  2,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageExportInitAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails, out_key_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails, tx_pub_key_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails, additional_tx_pub_keys_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails, internal_output_index_),
  0,
  1,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest, tdis_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage, iv_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage, blob_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck, kis_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncFinalRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncFinalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncFinalAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncFinalAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroKeyImageSyncFinalAck, enc_key_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyRequest, address_n_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyRequest, network_type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyRequest, salt1_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyRequest, salt2_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyRequest, tx_enc_keys_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyRequest, tx_prefix_hash_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyRequest, reason_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyRequest, view_public_key_),
  ~0u,
  5,
  0,
  1,
  2,
  3,
  6,
  4,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyAck, salt_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyAck, tx_keys_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroGetTxKeyAck, tx_derivations_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStartRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStartRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStartRequest, address_n_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStartRequest, network_type_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStartAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStartAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest, out_key_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest, recv_deriv_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest, real_out_idx_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest, sub_addr_major_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest, sub_addr_minor_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStepAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStepAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStepAck, salt_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshStepAck, key_image_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshFinalRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshFinalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshFinalAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::MoneroLiveRefreshFinalAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagRequest, ins_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagRequest, p1_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagRequest, p2_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagRequest, pd_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagRequest, data1_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagRequest, data2_),
  2,
  3,
  4,
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagAck, ins_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagAck, p1_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagAck, p2_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagAck, pd_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagAck, data1_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::monero::DebugMoneroDiagAck, data2_),
  2,
  3,
  4,
  ~0u,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic)},
  { 9, 16, sizeof(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry)},
  { 18, 27, sizeof(::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki)},
  { 31, 45, sizeof(::hw::trezor::messages::monero::MoneroTransactionSourceEntry)},
  { 54, 61, sizeof(::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress)},
  { 63, 71, sizeof(::hw::trezor::messages::monero::MoneroTransactionDestinationEntry)},
  { 74, 85, sizeof(::hw::trezor::messages::monero::MoneroTransactionRsigData)},
  { 91, 101, sizeof(::hw::trezor::messages::monero::MoneroGetAddress)},
  { 106, 112, sizeof(::hw::trezor::messages::monero::MoneroAddress)},
  { 113, 120, sizeof(::hw::trezor::messages::monero::MoneroGetWatchKey)},
  { 122, 129, sizeof(::hw::trezor::messages::monero::MoneroWatchKey)},
  { 131, 148, sizeof(::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData)},
  { 160, 169, sizeof(::hw::trezor::messages::monero::MoneroTransactionInitRequest)},
  { 173, 180, sizeof(::hw::trezor::messages::monero::MoneroTransactionInitAck)},
  { 182, 188, sizeof(::hw::trezor::messages::monero::MoneroTransactionSetInputRequest)},
  { 189, 200, sizeof(::hw::trezor::messages::monero::MoneroTransactionSetInputAck)},
  { 206, 212, sizeof(::hw::trezor::messages::monero::MoneroTransactionInputsPermutationRequest)},
  { 213, 218, sizeof(::hw::trezor::messages::monero::MoneroTransactionInputsPermutationAck)},
  { 218, 228, sizeof(::hw::trezor::messages::monero::MoneroTransactionInputViniRequest)},
  { 233, 238, sizeof(::hw::trezor::messages::monero::MoneroTransactionInputViniAck)},
  { 238, 243, sizeof(::hw::trezor::messages::monero::MoneroTransactionAllInputsSetRequest)},
  { 243, 249, sizeof(::hw::trezor::messages::monero::MoneroTransactionAllInputsSetAck)},
  { 250, 258, sizeof(::hw::trezor::messages::monero::MoneroTransactionSetOutputRequest)},
  { 261, 271, sizeof(::hw::trezor::messages::monero::MoneroTransactionSetOutputAck)},
  { 276, 282, sizeof(::hw::trezor::messages::monero::MoneroTransactionAllOutSetRequest)},
  { 283, 291, sizeof(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig)},
  { 294, 303, sizeof(::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck)},
  { 307, 319, sizeof(::hw::trezor::messages::monero::MoneroTransactionSignInputRequest)},
  { 326, 332, sizeof(::hw::trezor::messages::monero::MoneroTransactionSignInputAck)},
  { 333, 338, sizeof(::hw::trezor::messages::monero::MoneroTransactionFinalRequest)},
  { 338, 347, sizeof(::hw::trezor::messages::monero::MoneroTransactionFinalAck)},
  { 351, 358, sizeof(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList)},
  { 360, 370, sizeof(::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest)},
  { 375, 380, sizeof(::hw::trezor::messages::monero::MoneroKeyImageExportInitAck)},
  { 380, 389, sizeof(::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails)},
  { 393, 399, sizeof(::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest)},
  { 400, 407, sizeof(::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage)},
  { 409, 415, sizeof(::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck)},
  { 416, 421, sizeof(::hw::trezor::messages::monero::MoneroKeyImageSyncFinalRequest)},
  { 421, 427, sizeof(::hw::trezor::messages::monero::MoneroKeyImageSyncFinalAck)},
  { 428, 441, sizeof(::hw::trezor::messages::monero::MoneroGetTxKeyRequest)},
  { 449, 457, sizeof(::hw::trezor::messages::monero::MoneroGetTxKeyAck)},
  { 460, 467, sizeof(::hw::trezor::messages::monero::MoneroLiveRefreshStartRequest)},
  { 469, 474, sizeof(::hw::trezor::messages::monero::MoneroLiveRefreshStartAck)},
  { 474, 484, sizeof(::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest)},
  { 489, 496, sizeof(::hw::trezor::messages::monero::MoneroLiveRefreshStepAck)},
  { 498, 503, sizeof(::hw::trezor::messages::monero::MoneroLiveRefreshFinalRequest)},
  { 503, 508, sizeof(::hw::trezor::messages::monero::MoneroLiveRefreshFinalAck)},
  { 508, 519, sizeof(::hw::trezor::messages::monero::DebugMoneroDiagRequest)},
  { 525, 536, sizeof(::hw::trezor::messages::monero::DebugMoneroDiagAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionSourceEntry_MoneroOutputEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionSourceEntry_MoneroMultisigKLRki_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionSourceEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionDestinationEntry_MoneroAccountPublicAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionDestinationEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionRsigData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroGetAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroGetWatchKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroWatchKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionInitRequest_MoneroTransactionData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionInitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionInitAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionSetInputRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionSetInputAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionInputsPermutationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionInputsPermutationAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionInputViniRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionInputViniAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionAllInputsSetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionAllInputsSetAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionSetOutputRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionSetOutputAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionAllOutSetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionAllOutSetAck_MoneroRingCtSig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionAllOutSetAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionSignInputRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionSignInputAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionFinalRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroTransactionFinalAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroKeyImageExportInitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroKeyImageExportInitAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroKeyImageSyncStepRequest_MoneroTransferDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroKeyImageSyncStepRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroKeyImageSyncStepAck_MoneroExportedKeyImage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroKeyImageSyncStepAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroKeyImageSyncFinalRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroKeyImageSyncFinalAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroGetTxKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroGetTxKeyAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroLiveRefreshStartRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroLiveRefreshStartAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroLiveRefreshStepRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroLiveRefreshStepAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroLiveRefreshFinalRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_MoneroLiveRefreshFinalAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_DebugMoneroDiagRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::monero::_DebugMoneroDiagAck_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_messages_2dmonero_2eproto = {
  {}, AddDescriptors_messages_2dmonero_2eproto, "messages-monero.proto", schemas,
  file_default_instances, TableStruct_messages_2dmonero_2eproto::offsets,
  file_level_metadata_messages_2dmonero_2eproto, 50, file_level_enum_descriptors_messages_2dmonero_2eproto, file_level_service_descriptors_messages_2dmonero_2eproto,
};

const char descriptor_table_protodef_messages_2dmonero_2eproto[] =
  "\n\025messages-monero.proto\022\031hw.trezor.messa"
  "ges.monero\"\210\005\n\034MoneroTransactionSourceEn"
  "try\022Z\n\007outputs\030\001 \003(\0132I.hw.trezor.message"
  "s.monero.MoneroTransactionSourceEntry.Mo"
  "neroOutputEntry\022\023\n\013real_output\030\002 \001(\004\022\027\n\017"
  "real_out_tx_key\030\003 \001(\014\022#\n\033real_out_additi"
  "onal_tx_keys\030\004 \003(\014\022\037\n\027real_output_in_tx_"
  "index\030\005 \001(\004\022\016\n\006amount\030\006 \001(\004\022\013\n\003rct\030\007 \001(\010"
  "\022\014\n\004mask\030\010 \001(\014\022c\n\016multisig_kLRki\030\t \001(\0132K"
  ".hw.trezor.messages.monero.MoneroTransac"
  "tionSourceEntry.MoneroMultisigKLRki\032\303\001\n\021"
  "MoneroOutputEntry\022\013\n\003idx\030\001 \001(\004\022i\n\003key\030\002 "
  "\001(\0132\\.hw.trezor.messages.monero.MoneroTr"
  "ansactionSourceEntry.MoneroOutputEntry.M"
  "oneroRctKeyPublic\0326\n\022MoneroRctKeyPublic\022"
  "\014\n\004dest\030\001 \001(\014\022\022\n\ncommitment\030\002 \001(\014\032B\n\023Mon"
  "eroMultisigKLRki\022\t\n\001K\030\001 \001(\014\022\t\n\001L\030\002 \001(\014\022\t"
  "\n\001R\030\003 \001(\014\022\n\n\002ki\030\004 \001(\014\"\202\002\n!MoneroTransact"
  "ionDestinationEntry\022\016\n\006amount\030\001 \001(\004\022e\n\004a"
  "ddr\030\002 \001(\0132W.hw.trezor.messages.monero.Mo"
  "neroTransactionDestinationEntry.MoneroAc"
  "countPublicAddress\022\025\n\ris_subaddress\030\003 \001("
  "\010\032O\n\032MoneroAccountPublicAddress\022\030\n\020spend"
  "_public_key\030\001 \001(\014\022\027\n\017view_public_key\030\002 \001"
  "(\014\"\206\001\n\031MoneroTransactionRsigData\022\021\n\trsig"
  "_type\030\001 \001(\r\022\024\n\014offload_type\030\002 \001(\r\022\020\n\010gro"
  "uping\030\003 \003(\004\022\014\n\004mask\030\004 \001(\014\022\014\n\004rsig\030\005 \001(\014\022"
  "\022\n\nrsig_parts\030\006 \003(\014\"q\n\020MoneroGetAddress\022"
  "\021\n\taddress_n\030\001 \003(\r\022\024\n\014show_display\030\002 \001(\010"
  "\022\024\n\014network_type\030\003 \001(\r\022\017\n\007account\030\004 \001(\r\022"
  "\r\n\005minor\030\005 \001(\r\" \n\rMoneroAddress\022\017\n\007addre"
  "ss\030\001 \001(\014\"<\n\021MoneroGetWatchKey\022\021\n\taddress"
  "_n\030\001 \003(\r\022\024\n\014network_type\030\002 \001(\r\"4\n\016Monero"
  "WatchKey\022\021\n\twatch_key\030\001 \001(\014\022\017\n\007address\030\002"
  " \001(\014\"\353\004\n\034MoneroTransactionInitRequest\022\017\n"
  "\007version\030\001 \001(\r\022\021\n\taddress_n\030\002 \003(\r\022\024\n\014net"
  "work_type\030\003 \001(\r\022_\n\010tsx_data\030\004 \001(\0132M.hw.t"
  "rezor.messages.monero.MoneroTransactionI"
  "nitRequest.MoneroTransactionData\032\257\003\n\025Mon"
  "eroTransactionData\022\017\n\007version\030\001 \001(\r\022\022\n\np"
  "ayment_id\030\002 \001(\014\022\023\n\013unlock_time\030\003 \001(\004\022M\n\007"
  "outputs\030\004 \003(\0132<.hw.trezor.messages.moner"
  "o.MoneroTransactionDestinationEntry\022P\n\nc"
  "hange_dts\030\005 \001(\0132<.hw.trezor.messages.mon"
  "ero.MoneroTransactionDestinationEntry\022\022\n"
  "\nnum_inputs\030\006 \001(\r\022\r\n\005mixin\030\007 \001(\r\022\013\n\003fee\030"
  "\010 \001(\004\022\017\n\007account\030\t \001(\r\022\025\n\rminor_indices\030"
  "\n \003(\r\022G\n\trsig_data\030\013 \001(\01324.hw.trezor.mes"
  "sages.monero.MoneroTransactionRsigData\022\032"
  "\n\022integrated_indices\030\014 \003(\r\"r\n\030MoneroTran"
  "sactionInitAck\022\r\n\005hmacs\030\001 \003(\014\022G\n\trsig_da"
  "ta\030\002 \001(\01324.hw.trezor.messages.monero.Mon"
  "eroTransactionRsigData\"m\n MoneroTransact"
  "ionSetInputRequest\022I\n\010src_entr\030\001 \001(\01327.h"
  "w.trezor.messages.monero.MoneroTransacti"
  "onSourceEntry\"\231\001\n\034MoneroTransactionSetIn"
  "putAck\022\014\n\004vini\030\001 \001(\014\022\021\n\tvini_hmac\030\002 \001(\014\022"
  "\022\n\npseudo_out\030\003 \001(\014\022\027\n\017pseudo_out_hmac\030\004"
  " \001(\014\022\030\n\020pseudo_out_alpha\030\005 \001(\014\022\021\n\tspend_"
  "key\030\006 \001(\014\"9\n)MoneroTransactionInputsPerm"
  "utationRequest\022\014\n\004perm\030\001 \003(\r\"\'\n%MoneroTr"
  "ansactionInputsPermutationAck\"\274\001\n!Monero"
  "TransactionInputViniRequest\022I\n\010src_entr\030"
  "\001 \001(\01327.hw.trezor.messages.monero.Monero"
  "TransactionSourceEntry\022\014\n\004vini\030\002 \001(\014\022\021\n\t"
  "vini_hmac\030\003 \001(\014\022\022\n\npseudo_out\030\004 \001(\014\022\027\n\017p"
  "seudo_out_hmac\030\005 \001(\014\"\037\n\035MoneroTransactio"
  "nInputViniAck\"&\n$MoneroTransactionAllInp"
  "utsSetRequest\"k\n MoneroTransactionAllInp"
  "utsSetAck\022G\n\trsig_data\030\001 \001(\01324.hw.trezor"
  ".messages.monero.MoneroTransactionRsigDa"
  "ta\"\323\001\n!MoneroTransactionSetOutputRequest"
  "\022N\n\010dst_entr\030\001 \001(\0132<.hw.trezor.messages."
  "monero.MoneroTransactionDestinationEntry"
  "\022\025\n\rdst_entr_hmac\030\002 \001(\014\022G\n\trsig_data\030\003 \001"
  "(\01324.hw.trezor.messages.monero.MoneroTra"
  "nsactionRsigData\"\257\001\n\035MoneroTransactionSe"
  "tOutputAck\022\016\n\006tx_out\030\001 \001(\014\022\022\n\nvouti_hmac"
  "\030\002 \001(\014\022G\n\trsig_data\030\003 \001(\01324.hw.trezor.me"
  "ssages.monero.MoneroTransactionRsigData\022"
  "\016\n\006out_pk\030\004 \001(\014\022\021\n\tecdh_info\030\005 \001(\014\"l\n!Mo"
  "neroTransactionAllOutSetRequest\022G\n\trsig_"
  "data\030\001 \001(\01324.hw.trezor.messages.monero.M"
  "oneroTransactionRsigData\"\375\001\n\035MoneroTrans"
  "actionAllOutSetAck\022\r\n\005extra\030\001 \001(\014\022\026\n\016tx_"
  "prefix_hash\030\002 \001(\014\022T\n\002rv\030\004 \001(\0132H.hw.trezo"
  "r.messages.monero.MoneroTransactionAllOu"
  "tSetAck.MoneroRingCtSig\022\031\n\021full_message_"
  "hash\030\005 \001(\014\032D\n\017MoneroRingCtSig\022\017\n\007txn_fee"
  "\030\001 \001(\004\022\017\n\007message\030\002 \001(\014\022\017\n\007rv_type\030\003 \001(\r"
  "\"\351\001\n!MoneroTransactionSignInputRequest\022I"
  "\n\010src_entr\030\001 \001(\01327.hw.trezor.messages.mo"
  "nero.MoneroTransactionSourceEntry\022\014\n\004vin"
  "i\030\002 \001(\014\022\021\n\tvini_hmac\030\003 \001(\014\022\022\n\npseudo_out"
  "\030\004 \001(\014\022\027\n\017pseudo_out_hmac\030\005 \001(\014\022\030\n\020pseud"
  "o_out_alpha\030\006 \001(\014\022\021\n\tspend_key\030\007 \001(\014\"2\n\035"
  "MoneroTransactionSignInputAck\022\021\n\tsignatu"
  "re\030\001 \001(\014\"\037\n\035MoneroTransactionFinalReques"
  "t\"c\n\031MoneroTransactionFinalAck\022\020\n\010cout_k"
  "ey\030\001 \001(\014\022\014\n\004salt\030\002 \001(\014\022\021\n\trand_mult\030\003 \001("
  "\014\022\023\n\013tx_enc_keys\030\004 \001(\014\"\222\002\n\037MoneroKeyImag"
  "eExportInitRequest\022\013\n\003num\030\001 \001(\004\022\014\n\004hash\030"
  "\002 \001(\014\022\021\n\taddress_n\030\003 \003(\r\022\024\n\014network_type"
  "\030\004 \001(\r\022d\n\004subs\030\005 \003(\0132V.hw.trezor.message"
  "s.monero.MoneroKeyImageExportInitRequest"
  ".MoneroSubAddressIndicesList\032E\n\033MoneroSu"
  "bAddressIndicesList\022\017\n\007account\030\001 \001(\r\022\025\n\r"
  "minor_indices\030\002 \003(\r\"\035\n\033MoneroKeyImageExp"
  "ortInitAck\"\372\001\n\035MoneroKeyImageSyncStepReq"
  "uest\022\\\n\004tdis\030\001 \003(\0132N.hw.trezor.messages."
  "monero.MoneroKeyImageSyncStepRequest.Mon"
  "eroTransferDetails\032{\n\025MoneroTransferDeta"
  "ils\022\017\n\007out_key\030\001 \001(\014\022\022\n\ntx_pub_key\030\002 \001(\014"
  "\022\036\n\026additional_tx_pub_keys\030\003 \003(\014\022\035\n\025inte"
  "rnal_output_index\030\004 \001(\004\"\251\001\n\031MoneroKeyIma"
  "geSyncStepAck\022X\n\003kis\030\001 \003(\0132K.hw.trezor.m"
  "essages.monero.MoneroKeyImageSyncStepAck"
  ".MoneroExportedKeyImage\0322\n\026MoneroExporte"
  "dKeyImage\022\n\n\002iv\030\001 \001(\014\022\014\n\004blob\030\003 \001(\014\" \n\036M"
  "oneroKeyImageSyncFinalRequest\"-\n\032MoneroK"
  "eyImageSyncFinalAck\022\017\n\007enc_key\030\001 \001(\014\"\264\001\n"
  "\025MoneroGetTxKeyRequest\022\021\n\taddress_n\030\001 \003("
  "\r\022\024\n\014network_type\030\002 \001(\r\022\r\n\005salt1\030\003 \001(\014\022\r"
  "\n\005salt2\030\004 \001(\014\022\023\n\013tx_enc_keys\030\005 \001(\014\022\026\n\016tx"
  "_prefix_hash\030\006 \001(\014\022\016\n\006reason\030\007 \001(\r\022\027\n\017vi"
  "ew_public_key\030\010 \001(\014\"J\n\021MoneroGetTxKeyAck"
  "\022\014\n\004salt\030\001 \001(\014\022\017\n\007tx_keys\030\002 \001(\014\022\026\n\016tx_de"
  "rivations\030\003 \001(\014\"H\n\035MoneroLiveRefreshStar"
  "tRequest\022\021\n\taddress_n\030\001 \003(\r\022\024\n\014network_t"
  "ype\030\002 \001(\r\"\033\n\031MoneroLiveRefreshStartAck\"\211"
  "\001\n\034MoneroLiveRefreshStepRequest\022\017\n\007out_k"
  "ey\030\001 \001(\014\022\022\n\nrecv_deriv\030\002 \001(\014\022\024\n\014real_out"
  "_idx\030\003 \001(\004\022\026\n\016sub_addr_major\030\004 \001(\r\022\026\n\016su"
  "b_addr_minor\030\005 \001(\r\";\n\030MoneroLiveRefreshS"
  "tepAck\022\014\n\004salt\030\001 \001(\014\022\021\n\tkey_image\030\002 \001(\014\""
  "\037\n\035MoneroLiveRefreshFinalRequest\"\033\n\031Mone"
  "roLiveRefreshFinalAck\"g\n\026DebugMoneroDiag"
  "Request\022\013\n\003ins\030\001 \001(\004\022\n\n\002p1\030\002 \001(\004\022\n\n\002p2\030\003"
  " \001(\004\022\n\n\002pd\030\004 \003(\004\022\r\n\005data1\030\005 \001(\014\022\r\n\005data2"
  "\030\006 \001(\014\"c\n\022DebugMoneroDiagAck\022\013\n\003ins\030\001 \001("
  "\004\022\n\n\002p1\030\002 \001(\004\022\n\n\002p2\030\003 \001(\004\022\n\n\002pd\030\004 \003(\004\022\r\n"
  "\005data1\030\005 \001(\014\022\r\n\005data2\030\006 \001(\014B:\n#com.satos"
  "hilabs.trezor.lib.protobufB\023TrezorMessag"
  "eMonero"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_messages_2dmonero_2eproto = {
  false, InitDefaults_messages_2dmonero_2eproto, 
  descriptor_table_protodef_messages_2dmonero_2eproto,
  "messages-monero.proto", &assign_descriptors_table_messages_2dmonero_2eproto, 5727,
};

void AddDescriptors_messages_2dmonero_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_messages_2dmonero_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messages_2dmonero_2eproto = []() { AddDescriptors_messages_2dmonero_2eproto(); return true; }();
namespace hw {
namespace trezor {
namespace messages {
namespace monero {

// ===================================================================

void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::InitAsDefaultInstance() {
}
class MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::HasBitSetters {
 public:
  static void set_has_dest(MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_commitment(MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::kDestFieldNumber;
const int MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::kCommitmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
}
MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic(const MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dest()) {
    dest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_);
  }
  commitment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_commitment()) {
    commitment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitment_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
}

void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic_messages_2dmonero_2eproto.base);
  dest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commitment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::~MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  SharedDtor();
}

void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::SharedDtor() {
  dest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commitment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic& MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      dest_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      commitment_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes dest = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_dest();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes commitment = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_commitment();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes dest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes commitment = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_commitment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes dest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->dest(), output);
  }

  // optional bytes commitment = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->commitment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
}

::google::protobuf::uint8* MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes dest = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->dest(), target);
  }

  // optional bytes commitment = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->commitment(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  return target;
}

size_t MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes dest = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->dest());
    }

    // optional bytes commitment = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->commitment());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
    MergeFrom(*source);
  }
}

void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::MergeFrom(const MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      dest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      commitment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commitment_);
    }
  }
}

void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::CopyFrom(const MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::IsInitialized() const {
  return true;
}

void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::Swap(MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::InternalSwap(MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  dest_.Swap(&other->dest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  commitment_.Swap(&other->commitment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionSourceEntry_MoneroOutputEntry::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionSourceEntry_MoneroOutputEntry_default_instance_._instance.get_mutable()->key_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic*>(
      ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::internal_default_instance());
}
class MoneroTransactionSourceEntry_MoneroOutputEntry::HasBitSetters {
 public:
  static void set_has_idx(MoneroTransactionSourceEntry_MoneroOutputEntry* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic& key(const MoneroTransactionSourceEntry_MoneroOutputEntry* msg);
  static void set_has_key(MoneroTransactionSourceEntry_MoneroOutputEntry* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic&
MoneroTransactionSourceEntry_MoneroOutputEntry::HasBitSetters::key(const MoneroTransactionSourceEntry_MoneroOutputEntry* msg) {
  return *msg->key_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionSourceEntry_MoneroOutputEntry::kIdxFieldNumber;
const int MoneroTransactionSourceEntry_MoneroOutputEntry::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionSourceEntry_MoneroOutputEntry::MoneroTransactionSourceEntry_MoneroOutputEntry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
}
MoneroTransactionSourceEntry_MoneroOutputEntry::MoneroTransactionSourceEntry_MoneroOutputEntry(const MoneroTransactionSourceEntry_MoneroOutputEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic(*from.key_);
  } else {
    key_ = nullptr;
  }
  idx_ = from.idx_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
}

void MoneroTransactionSourceEntry_MoneroOutputEntry::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_messages_2dmonero_2eproto.base);
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idx_) -
      reinterpret_cast<char*>(&key_)) + sizeof(idx_));
}

MoneroTransactionSourceEntry_MoneroOutputEntry::~MoneroTransactionSourceEntry_MoneroOutputEntry() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  SharedDtor();
}

void MoneroTransactionSourceEntry_MoneroOutputEntry::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void MoneroTransactionSourceEntry_MoneroOutputEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionSourceEntry_MoneroOutputEntry& MoneroTransactionSourceEntry_MoneroOutputEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionSourceEntry_MoneroOutputEntry_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionSourceEntry_MoneroOutputEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(key_ != nullptr);
    key_->Clear();
  }
  idx_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionSourceEntry_MoneroOutputEntry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionSourceEntry_MoneroOutputEntry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 idx = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_idx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::_InternalParse;
        object = msg->mutable_key();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionSourceEntry_MoneroOutputEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 idx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_idx(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionSourceEntry_MoneroOutputEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 idx = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->idx(), output);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::key(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
}

::google::protobuf::uint8* MoneroTransactionSourceEntry_MoneroOutputEntry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 idx = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->idx(), target);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic key = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::key(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  return target;
}

size_t MoneroTransactionSourceEntry_MoneroOutputEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry.MoneroRctKeyPublic key = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *key_);
    }

    // optional uint64 idx = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionSourceEntry_MoneroOutputEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionSourceEntry_MoneroOutputEntry* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionSourceEntry_MoneroOutputEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
    MergeFrom(*source);
  }
}

void MoneroTransactionSourceEntry_MoneroOutputEntry::MergeFrom(const MoneroTransactionSourceEntry_MoneroOutputEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_key()->::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic::MergeFrom(from.key());
    }
    if (cached_has_bits & 0x00000002u) {
      idx_ = from.idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MoneroTransactionSourceEntry_MoneroOutputEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionSourceEntry_MoneroOutputEntry::CopyFrom(const MoneroTransactionSourceEntry_MoneroOutputEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionSourceEntry_MoneroOutputEntry::IsInitialized() const {
  return true;
}

void MoneroTransactionSourceEntry_MoneroOutputEntry::Swap(MoneroTransactionSourceEntry_MoneroOutputEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionSourceEntry_MoneroOutputEntry::InternalSwap(MoneroTransactionSourceEntry_MoneroOutputEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(key_, other->key_);
  swap(idx_, other->idx_);
}

::google::protobuf::Metadata MoneroTransactionSourceEntry_MoneroOutputEntry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionSourceEntry_MoneroMultisigKLRki::InitAsDefaultInstance() {
}
class MoneroTransactionSourceEntry_MoneroMultisigKLRki::HasBitSetters {
 public:
  static void set_has_k(MoneroTransactionSourceEntry_MoneroMultisigKLRki* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_l(MoneroTransactionSourceEntry_MoneroMultisigKLRki* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_r(MoneroTransactionSourceEntry_MoneroMultisigKLRki* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ki(MoneroTransactionSourceEntry_MoneroMultisigKLRki* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionSourceEntry_MoneroMultisigKLRki::kKFieldNumber;
const int MoneroTransactionSourceEntry_MoneroMultisigKLRki::kLFieldNumber;
const int MoneroTransactionSourceEntry_MoneroMultisigKLRki::kRFieldNumber;
const int MoneroTransactionSourceEntry_MoneroMultisigKLRki::kKiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionSourceEntry_MoneroMultisigKLRki::MoneroTransactionSourceEntry_MoneroMultisigKLRki()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
}
MoneroTransactionSourceEntry_MoneroMultisigKLRki::MoneroTransactionSourceEntry_MoneroMultisigKLRki(const MoneroTransactionSourceEntry_MoneroMultisigKLRki& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  k_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_k()) {
    k_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.k_);
  }
  l_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_l()) {
    l_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.l_);
  }
  r_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_r()) {
    r_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.r_);
  }
  ki_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ki()) {
    ki_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ki_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
}

void MoneroTransactionSourceEntry_MoneroMultisigKLRki::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionSourceEntry_MoneroMultisigKLRki_messages_2dmonero_2eproto.base);
  k_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  l_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  r_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ki_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroTransactionSourceEntry_MoneroMultisigKLRki::~MoneroTransactionSourceEntry_MoneroMultisigKLRki() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  SharedDtor();
}

void MoneroTransactionSourceEntry_MoneroMultisigKLRki::SharedDtor() {
  k_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  l_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  r_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ki_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroTransactionSourceEntry_MoneroMultisigKLRki::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionSourceEntry_MoneroMultisigKLRki& MoneroTransactionSourceEntry_MoneroMultisigKLRki::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionSourceEntry_MoneroMultisigKLRki_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionSourceEntry_MoneroMultisigKLRki::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      k_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      l_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      r_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      ki_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionSourceEntry_MoneroMultisigKLRki::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionSourceEntry_MoneroMultisigKLRki*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes K = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_k();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes L = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_l();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes R = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_r();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes ki = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ki();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionSourceEntry_MoneroMultisigKLRki::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes K = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_k()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes L = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_l()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes R = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_r()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ki = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ki()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionSourceEntry_MoneroMultisigKLRki::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes K = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->k(), output);
  }

  // optional bytes L = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->l(), output);
  }

  // optional bytes R = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->r(), output);
  }

  // optional bytes ki = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ki(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
}

::google::protobuf::uint8* MoneroTransactionSourceEntry_MoneroMultisigKLRki::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes K = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->k(), target);
  }

  // optional bytes L = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->l(), target);
  }

  // optional bytes R = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->r(), target);
  }

  // optional bytes ki = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ki(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  return target;
}

size_t MoneroTransactionSourceEntry_MoneroMultisigKLRki::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bytes K = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->k());
    }

    // optional bytes L = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->l());
    }

    // optional bytes R = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->r());
    }

    // optional bytes ki = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ki());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionSourceEntry_MoneroMultisigKLRki::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionSourceEntry_MoneroMultisigKLRki* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionSourceEntry_MoneroMultisigKLRki>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
    MergeFrom(*source);
  }
}

void MoneroTransactionSourceEntry_MoneroMultisigKLRki::MergeFrom(const MoneroTransactionSourceEntry_MoneroMultisigKLRki& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      k_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.k_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      l_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.l_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      r_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.r_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      ki_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ki_);
    }
  }
}

void MoneroTransactionSourceEntry_MoneroMultisigKLRki::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionSourceEntry_MoneroMultisigKLRki::CopyFrom(const MoneroTransactionSourceEntry_MoneroMultisigKLRki& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionSourceEntry_MoneroMultisigKLRki::IsInitialized() const {
  return true;
}

void MoneroTransactionSourceEntry_MoneroMultisigKLRki::Swap(MoneroTransactionSourceEntry_MoneroMultisigKLRki* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionSourceEntry_MoneroMultisigKLRki::InternalSwap(MoneroTransactionSourceEntry_MoneroMultisigKLRki* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  k_.Swap(&other->k_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  l_.Swap(&other->l_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  r_.Swap(&other->r_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ki_.Swap(&other->ki_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroTransactionSourceEntry_MoneroMultisigKLRki::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionSourceEntry::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionSourceEntry_default_instance_._instance.get_mutable()->multisig_klrki_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki*>(
      ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki::internal_default_instance());
}
class MoneroTransactionSourceEntry::HasBitSetters {
 public:
  static void set_has_real_output(MoneroTransactionSourceEntry* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_real_out_tx_key(MoneroTransactionSourceEntry* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_real_output_in_tx_index(MoneroTransactionSourceEntry* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_amount(MoneroTransactionSourceEntry* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_rct(MoneroTransactionSourceEntry* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_mask(MoneroTransactionSourceEntry* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki& multisig_klrki(const MoneroTransactionSourceEntry* msg);
  static void set_has_multisig_klrki(MoneroTransactionSourceEntry* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki&
MoneroTransactionSourceEntry::HasBitSetters::multisig_klrki(const MoneroTransactionSourceEntry* msg) {
  return *msg->multisig_klrki_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionSourceEntry::kOutputsFieldNumber;
const int MoneroTransactionSourceEntry::kRealOutputFieldNumber;
const int MoneroTransactionSourceEntry::kRealOutTxKeyFieldNumber;
const int MoneroTransactionSourceEntry::kRealOutAdditionalTxKeysFieldNumber;
const int MoneroTransactionSourceEntry::kRealOutputInTxIndexFieldNumber;
const int MoneroTransactionSourceEntry::kAmountFieldNumber;
const int MoneroTransactionSourceEntry::kRctFieldNumber;
const int MoneroTransactionSourceEntry::kMaskFieldNumber;
const int MoneroTransactionSourceEntry::kMultisigKLRkiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionSourceEntry::MoneroTransactionSourceEntry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
}
MoneroTransactionSourceEntry::MoneroTransactionSourceEntry(const MoneroTransactionSourceEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      outputs_(from.outputs_),
      real_out_additional_tx_keys_(from.real_out_additional_tx_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  real_out_tx_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_real_out_tx_key()) {
    real_out_tx_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.real_out_tx_key_);
  }
  mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mask()) {
    mask_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mask_);
  }
  if (from.has_multisig_klrki()) {
    multisig_klrki_ = new ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki(*from.multisig_klrki_);
  } else {
    multisig_klrki_ = nullptr;
  }
  ::memcpy(&real_output_, &from.real_output_,
    static_cast<size_t>(reinterpret_cast<char*>(&rct_) -
    reinterpret_cast<char*>(&real_output_)) + sizeof(rct_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
}

void MoneroTransactionSourceEntry::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionSourceEntry_messages_2dmonero_2eproto.base);
  real_out_tx_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&multisig_klrki_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rct_) -
      reinterpret_cast<char*>(&multisig_klrki_)) + sizeof(rct_));
}

MoneroTransactionSourceEntry::~MoneroTransactionSourceEntry() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  SharedDtor();
}

void MoneroTransactionSourceEntry::SharedDtor() {
  real_out_tx_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mask_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete multisig_klrki_;
}

void MoneroTransactionSourceEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionSourceEntry& MoneroTransactionSourceEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionSourceEntry_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionSourceEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outputs_.Clear();
  real_out_additional_tx_keys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      real_out_tx_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      mask_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(multisig_klrki_ != nullptr);
      multisig_klrki_->Clear();
    }
  }
  if (cached_has_bits & 0x00000078u) {
    ::memset(&real_output_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rct_) -
        reinterpret_cast<char*>(&real_output_)) + sizeof(rct_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionSourceEntry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionSourceEntry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry outputs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry::_InternalParse;
          object = msg->add_outputs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // optional uint64 real_output = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_real_output(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes real_out_tx_key = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_real_out_tx_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated bytes real_out_additional_tx_keys = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          object = msg->add_real_out_additional_tx_keys();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParser;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // optional uint64 real_output_in_tx_index = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_real_output_in_tx_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 amount = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_amount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool rct = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_rct(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes mask = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_mask();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki multisig_kLRki = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki::_InternalParse;
        object = msg->mutable_multisig_klrki();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionSourceEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry outputs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 real_output = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_real_output(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &real_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes real_out_tx_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_real_out_tx_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes real_out_additional_tx_keys = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_real_out_additional_tx_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 real_output_in_tx_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_real_output_in_tx_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &real_output_in_tx_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 amount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool rct = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_rct(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes mask = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki multisig_kLRki = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multisig_klrki()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionSourceEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry outputs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->outputs(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 real_output = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->real_output(), output);
  }

  // optional bytes real_out_tx_key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->real_out_tx_key(), output);
  }

  // repeated bytes real_out_additional_tx_keys = 4;
  for (int i = 0, n = this->real_out_additional_tx_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->real_out_additional_tx_keys(i), output);
  }

  // optional uint64 real_output_in_tx_index = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->real_output_in_tx_index(), output);
  }

  // optional uint64 amount = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->amount(), output);
  }

  // optional bool rct = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->rct(), output);
  }

  // optional bytes mask = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->mask(), output);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki multisig_kLRki = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::multisig_klrki(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
}

::google::protobuf::uint8* MoneroTransactionSourceEntry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry outputs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->outputs(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 real_output = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->real_output(), target);
  }

  // optional bytes real_out_tx_key = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->real_out_tx_key(), target);
  }

  // repeated bytes real_out_additional_tx_keys = 4;
  for (int i = 0, n = this->real_out_additional_tx_keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(4, this->real_out_additional_tx_keys(i), target);
  }

  // optional uint64 real_output_in_tx_index = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->real_output_in_tx_index(), target);
  }

  // optional uint64 amount = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->amount(), target);
  }

  // optional bool rct = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->rct(), target);
  }

  // optional bytes mask = 8;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->mask(), target);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki multisig_kLRki = 9;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::multisig_klrki(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  return target;
}

size_t MoneroTransactionSourceEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroOutputEntry outputs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outputs(static_cast<int>(i)));
    }
  }

  // repeated bytes real_out_additional_tx_keys = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->real_out_additional_tx_keys_size());
  for (int i = 0, n = this->real_out_additional_tx_keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->real_out_additional_tx_keys(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes real_out_tx_key = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->real_out_tx_key());
    }

    // optional bytes mask = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mask());
    }

    // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry.MoneroMultisigKLRki multisig_kLRki = 9;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *multisig_klrki_);
    }

    // optional uint64 real_output = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->real_output());
    }

    // optional uint64 real_output_in_tx_index = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->real_output_in_tx_index());
    }

    // optional uint64 amount = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

    // optional bool rct = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionSourceEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionSourceEntry* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionSourceEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
    MergeFrom(*source);
  }
}

void MoneroTransactionSourceEntry::MergeFrom(const MoneroTransactionSourceEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  outputs_.MergeFrom(from.outputs_);
  real_out_additional_tx_keys_.MergeFrom(from.real_out_additional_tx_keys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      real_out_tx_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.real_out_tx_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      mask_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mask_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_multisig_klrki()->::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki::MergeFrom(from.multisig_klrki());
    }
    if (cached_has_bits & 0x00000008u) {
      real_output_ = from.real_output_;
    }
    if (cached_has_bits & 0x00000010u) {
      real_output_in_tx_index_ = from.real_output_in_tx_index_;
    }
    if (cached_has_bits & 0x00000020u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000040u) {
      rct_ = from.rct_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MoneroTransactionSourceEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionSourceEntry::CopyFrom(const MoneroTransactionSourceEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSourceEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionSourceEntry::IsInitialized() const {
  return true;
}

void MoneroTransactionSourceEntry::Swap(MoneroTransactionSourceEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionSourceEntry::InternalSwap(MoneroTransactionSourceEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&outputs_)->InternalSwap(CastToBase(&other->outputs_));
  real_out_additional_tx_keys_.InternalSwap(CastToBase(&other->real_out_additional_tx_keys_));
  real_out_tx_key_.Swap(&other->real_out_tx_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mask_.Swap(&other->mask_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(multisig_klrki_, other->multisig_klrki_);
  swap(real_output_, other->real_output_);
  swap(real_output_in_tx_index_, other->real_output_in_tx_index_);
  swap(amount_, other->amount_);
  swap(rct_, other->rct_);
}

::google::protobuf::Metadata MoneroTransactionSourceEntry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::InitAsDefaultInstance() {
}
class MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::HasBitSetters {
 public:
  static void set_has_spend_public_key(MoneroTransactionDestinationEntry_MoneroAccountPublicAddress* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_view_public_key(MoneroTransactionDestinationEntry_MoneroAccountPublicAddress* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::kSpendPublicKeyFieldNumber;
const int MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::kViewPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
}
MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress(const MoneroTransactionDestinationEntry_MoneroAccountPublicAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  spend_public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_spend_public_key()) {
    spend_public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spend_public_key_);
  }
  view_public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_view_public_key()) {
    view_public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_public_key_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
}

void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionDestinationEntry_MoneroAccountPublicAddress_messages_2dmonero_2eproto.base);
  spend_public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::~MoneroTransactionDestinationEntry_MoneroAccountPublicAddress() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  SharedDtor();
}

void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::SharedDtor() {
  spend_public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionDestinationEntry_MoneroAccountPublicAddress& MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionDestinationEntry_MoneroAccountPublicAddress_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      spend_public_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      view_public_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionDestinationEntry_MoneroAccountPublicAddress*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes spend_public_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_spend_public_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes view_public_key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_view_public_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes spend_public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_spend_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes view_public_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_view_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes spend_public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->spend_public_key(), output);
  }

  // optional bytes view_public_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->view_public_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
}

::google::protobuf::uint8* MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes spend_public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->spend_public_key(), target);
  }

  // optional bytes view_public_key = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->view_public_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  return target;
}

size_t MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes spend_public_key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->spend_public_key());
    }

    // optional bytes view_public_key = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->view_public_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionDestinationEntry_MoneroAccountPublicAddress* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionDestinationEntry_MoneroAccountPublicAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
    MergeFrom(*source);
  }
}

void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::MergeFrom(const MoneroTransactionDestinationEntry_MoneroAccountPublicAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      spend_public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spend_public_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      view_public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_public_key_);
    }
  }
}

void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::CopyFrom(const MoneroTransactionDestinationEntry_MoneroAccountPublicAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::IsInitialized() const {
  return true;
}

void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::Swap(MoneroTransactionDestinationEntry_MoneroAccountPublicAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::InternalSwap(MoneroTransactionDestinationEntry_MoneroAccountPublicAddress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  spend_public_key_.Swap(&other->spend_public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  view_public_key_.Swap(&other->view_public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionDestinationEntry::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionDestinationEntry_default_instance_._instance.get_mutable()->addr_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress*>(
      ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::internal_default_instance());
}
class MoneroTransactionDestinationEntry::HasBitSetters {
 public:
  static void set_has_amount(MoneroTransactionDestinationEntry* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress& addr(const MoneroTransactionDestinationEntry* msg);
  static void set_has_addr(MoneroTransactionDestinationEntry* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_is_subaddress(MoneroTransactionDestinationEntry* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress&
MoneroTransactionDestinationEntry::HasBitSetters::addr(const MoneroTransactionDestinationEntry* msg) {
  return *msg->addr_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionDestinationEntry::kAmountFieldNumber;
const int MoneroTransactionDestinationEntry::kAddrFieldNumber;
const int MoneroTransactionDestinationEntry::kIsSubaddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionDestinationEntry::MoneroTransactionDestinationEntry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
}
MoneroTransactionDestinationEntry::MoneroTransactionDestinationEntry(const MoneroTransactionDestinationEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_addr()) {
    addr_ = new ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress(*from.addr_);
  } else {
    addr_ = nullptr;
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_subaddress_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(is_subaddress_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
}

void MoneroTransactionDestinationEntry::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionDestinationEntry_messages_2dmonero_2eproto.base);
  ::memset(&addr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_subaddress_) -
      reinterpret_cast<char*>(&addr_)) + sizeof(is_subaddress_));
}

MoneroTransactionDestinationEntry::~MoneroTransactionDestinationEntry() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  SharedDtor();
}

void MoneroTransactionDestinationEntry::SharedDtor() {
  if (this != internal_default_instance()) delete addr_;
}

void MoneroTransactionDestinationEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionDestinationEntry& MoneroTransactionDestinationEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionDestinationEntry_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionDestinationEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(addr_ != nullptr);
    addr_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_subaddress_) -
        reinterpret_cast<char*>(&amount_)) + sizeof(is_subaddress_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionDestinationEntry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionDestinationEntry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 amount = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_amount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress addr = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::_InternalParse;
        object = msg->mutable_addr();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional bool is_subaddress = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_is_subaddress(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionDestinationEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_addr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_subaddress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_is_subaddress(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_subaddress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionDestinationEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->amount(), output);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress addr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::addr(this), output);
  }

  // optional bool is_subaddress = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_subaddress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
}

::google::protobuf::uint8* MoneroTransactionDestinationEntry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 amount = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->amount(), target);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress addr = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::addr(this), target);
  }

  // optional bool is_subaddress = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_subaddress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  return target;
}

size_t MoneroTransactionDestinationEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry.MoneroAccountPublicAddress addr = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *addr_);
    }

    // optional uint64 amount = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

    // optional bool is_subaddress = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionDestinationEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionDestinationEntry* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionDestinationEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
    MergeFrom(*source);
  }
}

void MoneroTransactionDestinationEntry::MergeFrom(const MoneroTransactionDestinationEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_addr()->::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress::MergeFrom(from.addr());
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_subaddress_ = from.is_subaddress_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MoneroTransactionDestinationEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionDestinationEntry::CopyFrom(const MoneroTransactionDestinationEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionDestinationEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionDestinationEntry::IsInitialized() const {
  return true;
}

void MoneroTransactionDestinationEntry::Swap(MoneroTransactionDestinationEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionDestinationEntry::InternalSwap(MoneroTransactionDestinationEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(addr_, other->addr_);
  swap(amount_, other->amount_);
  swap(is_subaddress_, other->is_subaddress_);
}

::google::protobuf::Metadata MoneroTransactionDestinationEntry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionRsigData::InitAsDefaultInstance() {
}
class MoneroTransactionRsigData::HasBitSetters {
 public:
  static void set_has_rsig_type(MoneroTransactionRsigData* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_offload_type(MoneroTransactionRsigData* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_mask(MoneroTransactionRsigData* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_rsig(MoneroTransactionRsigData* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionRsigData::kRsigTypeFieldNumber;
const int MoneroTransactionRsigData::kOffloadTypeFieldNumber;
const int MoneroTransactionRsigData::kGroupingFieldNumber;
const int MoneroTransactionRsigData::kMaskFieldNumber;
const int MoneroTransactionRsigData::kRsigFieldNumber;
const int MoneroTransactionRsigData::kRsigPartsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionRsigData::MoneroTransactionRsigData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionRsigData)
}
MoneroTransactionRsigData::MoneroTransactionRsigData(const MoneroTransactionRsigData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      grouping_(from.grouping_),
      rsig_parts_(from.rsig_parts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mask()) {
    mask_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mask_);
  }
  rsig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rsig()) {
    rsig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rsig_);
  }
  ::memcpy(&rsig_type_, &from.rsig_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&offload_type_) -
    reinterpret_cast<char*>(&rsig_type_)) + sizeof(offload_type_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionRsigData)
}

void MoneroTransactionRsigData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionRsigData_messages_2dmonero_2eproto.base);
  mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rsig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rsig_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offload_type_) -
      reinterpret_cast<char*>(&rsig_type_)) + sizeof(offload_type_));
}

MoneroTransactionRsigData::~MoneroTransactionRsigData() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionRsigData)
  SharedDtor();
}

void MoneroTransactionRsigData::SharedDtor() {
  mask_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rsig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroTransactionRsigData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionRsigData& MoneroTransactionRsigData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionRsigData_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionRsigData::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionRsigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grouping_.Clear();
  rsig_parts_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mask_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      rsig_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&rsig_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offload_type_) -
        reinterpret_cast<char*>(&rsig_type_)) + sizeof(offload_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionRsigData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionRsigData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 rsig_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_rsig_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 offload_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_offload_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint64 grouping = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 24) {
          do {
            msg->add_grouping(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_grouping();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional bytes mask = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_mask();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes rsig = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_rsig();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated bytes rsig_parts = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          object = msg->add_rsig_parts();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParser;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionRsigData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionRsigData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 rsig_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_rsig_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rsig_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offload_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_offload_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offload_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 grouping = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24u, input, this->mutable_grouping())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_grouping())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes mask = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes rsig = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rsig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes rsig_parts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_rsig_parts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionRsigData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionRsigData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionRsigData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionRsigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 rsig_type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rsig_type(), output);
  }

  // optional uint32 offload_type = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offload_type(), output);
  }

  // repeated uint64 grouping = 3;
  for (int i = 0, n = this->grouping_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->grouping(i), output);
  }

  // optional bytes mask = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->mask(), output);
  }

  // optional bytes rsig = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->rsig(), output);
  }

  // repeated bytes rsig_parts = 6;
  for (int i = 0, n = this->rsig_parts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->rsig_parts(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionRsigData)
}

::google::protobuf::uint8* MoneroTransactionRsigData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionRsigData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 rsig_type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rsig_type(), target);
  }

  // optional uint32 offload_type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offload_type(), target);
  }

  // repeated uint64 grouping = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(3, this->grouping_, target);

  // optional bytes mask = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->mask(), target);
  }

  // optional bytes rsig = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->rsig(), target);
  }

  // repeated bytes rsig_parts = 6;
  for (int i = 0, n = this->rsig_parts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(6, this->rsig_parts(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionRsigData)
  return target;
}

size_t MoneroTransactionRsigData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionRsigData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 grouping = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->grouping_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->grouping_size());
    total_size += data_size;
  }

  // repeated bytes rsig_parts = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->rsig_parts_size());
  for (int i = 0, n = this->rsig_parts_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->rsig_parts(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bytes mask = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mask());
    }

    // optional bytes rsig = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->rsig());
    }

    // optional uint32 rsig_type = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rsig_type());
    }

    // optional uint32 offload_type = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offload_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionRsigData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionRsigData)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionRsigData* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionRsigData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionRsigData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionRsigData)
    MergeFrom(*source);
  }
}

void MoneroTransactionRsigData::MergeFrom(const MoneroTransactionRsigData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionRsigData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  grouping_.MergeFrom(from.grouping_);
  rsig_parts_.MergeFrom(from.rsig_parts_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      mask_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mask_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      rsig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rsig_);
    }
    if (cached_has_bits & 0x00000004u) {
      rsig_type_ = from.rsig_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      offload_type_ = from.offload_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MoneroTransactionRsigData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionRsigData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionRsigData::CopyFrom(const MoneroTransactionRsigData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionRsigData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionRsigData::IsInitialized() const {
  return true;
}

void MoneroTransactionRsigData::Swap(MoneroTransactionRsigData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionRsigData::InternalSwap(MoneroTransactionRsigData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  grouping_.InternalSwap(&other->grouping_);
  rsig_parts_.InternalSwap(CastToBase(&other->rsig_parts_));
  mask_.Swap(&other->mask_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rsig_.Swap(&other->rsig_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rsig_type_, other->rsig_type_);
  swap(offload_type_, other->offload_type_);
}

::google::protobuf::Metadata MoneroTransactionRsigData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroGetAddress::InitAsDefaultInstance() {
}
class MoneroGetAddress::HasBitSetters {
 public:
  static void set_has_show_display(MoneroGetAddress* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_network_type(MoneroGetAddress* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_account(MoneroGetAddress* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_minor(MoneroGetAddress* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroGetAddress::kAddressNFieldNumber;
const int MoneroGetAddress::kShowDisplayFieldNumber;
const int MoneroGetAddress::kNetworkTypeFieldNumber;
const int MoneroGetAddress::kAccountFieldNumber;
const int MoneroGetAddress::kMinorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroGetAddress::MoneroGetAddress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroGetAddress)
}
MoneroGetAddress::MoneroGetAddress(const MoneroGetAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&show_display_, &from.show_display_,
    static_cast<size_t>(reinterpret_cast<char*>(&minor_) -
    reinterpret_cast<char*>(&show_display_)) + sizeof(minor_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroGetAddress)
}

void MoneroGetAddress::SharedCtor() {
  ::memset(&show_display_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minor_) -
      reinterpret_cast<char*>(&show_display_)) + sizeof(minor_));
}

MoneroGetAddress::~MoneroGetAddress() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroGetAddress)
  SharedDtor();
}

void MoneroGetAddress::SharedDtor() {
}

void MoneroGetAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroGetAddress& MoneroGetAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroGetAddress_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroGetAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&show_display_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&minor_) -
        reinterpret_cast<char*>(&show_display_)) + sizeof(minor_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroGetAddress::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroGetAddress*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_address_n(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_address_n();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional bool show_display = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_show_display(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 network_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_network_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 account = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_account(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 minor = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_minor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroGetAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroGetAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_display = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_show_display(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 network_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_network_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 account = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_account(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 minor = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_minor(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroGetAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroGetAddress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroGetAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show_display(), output);
  }

  // optional uint32 network_type = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->network_type(), output);
  }

  // optional uint32 account = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->account(), output);
  }

  // optional uint32 minor = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->minor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroGetAddress)
}

::google::protobuf::uint8* MoneroGetAddress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show_display(), target);
  }

  // optional uint32 network_type = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->network_type(), target);
  }

  // optional uint32 account = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->account(), target);
  }

  // optional uint32 minor = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->minor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroGetAddress)
  return target;
}

size_t MoneroGetAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroGetAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bool show_display = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional uint32 network_type = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_type());
    }

    // optional uint32 account = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account());
    }

    // optional uint32 minor = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->minor());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroGetAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroGetAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroGetAddress* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroGetAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroGetAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroGetAddress)
    MergeFrom(*source);
  }
}

void MoneroGetAddress::MergeFrom(const MoneroGetAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroGetAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      show_display_ = from.show_display_;
    }
    if (cached_has_bits & 0x00000002u) {
      network_type_ = from.network_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      account_ = from.account_;
    }
    if (cached_has_bits & 0x00000008u) {
      minor_ = from.minor_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MoneroGetAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroGetAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroGetAddress::CopyFrom(const MoneroGetAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroGetAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroGetAddress::IsInitialized() const {
  return true;
}

void MoneroGetAddress::Swap(MoneroGetAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroGetAddress::InternalSwap(MoneroGetAddress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  address_n_.InternalSwap(&other->address_n_);
  swap(show_display_, other->show_display_);
  swap(network_type_, other->network_type_);
  swap(account_, other->account_);
  swap(minor_, other->minor_);
}

::google::protobuf::Metadata MoneroGetAddress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroAddress::InitAsDefaultInstance() {
}
class MoneroAddress::HasBitSetters {
 public:
  static void set_has_address(MoneroAddress* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroAddress::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroAddress::MoneroAddress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroAddress)
}
MoneroAddress::MoneroAddress(const MoneroAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroAddress)
}

void MoneroAddress::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroAddress_messages_2dmonero_2eproto.base);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroAddress::~MoneroAddress() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroAddress)
  SharedDtor();
}

void MoneroAddress::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroAddress& MoneroAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroAddress_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    address_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroAddress::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroAddress*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroAddress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroAddress)
}

::google::protobuf::uint8* MoneroAddress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes address = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroAddress)
  return target;
}

size_t MoneroAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes address = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroAddress* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroAddress)
    MergeFrom(*source);
  }
}

void MoneroAddress::MergeFrom(const MoneroAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    _has_bits_[0] |= 0x00000001u;
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void MoneroAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroAddress::CopyFrom(const MoneroAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroAddress::IsInitialized() const {
  return true;
}

void MoneroAddress::Swap(MoneroAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroAddress::InternalSwap(MoneroAddress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroAddress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroGetWatchKey::InitAsDefaultInstance() {
}
class MoneroGetWatchKey::HasBitSetters {
 public:
  static void set_has_network_type(MoneroGetWatchKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroGetWatchKey::kAddressNFieldNumber;
const int MoneroGetWatchKey::kNetworkTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroGetWatchKey::MoneroGetWatchKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroGetWatchKey)
}
MoneroGetWatchKey::MoneroGetWatchKey(const MoneroGetWatchKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_type_ = from.network_type_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroGetWatchKey)
}

void MoneroGetWatchKey::SharedCtor() {
  network_type_ = 0u;
}

MoneroGetWatchKey::~MoneroGetWatchKey() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroGetWatchKey)
  SharedDtor();
}

void MoneroGetWatchKey::SharedDtor() {
}

void MoneroGetWatchKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroGetWatchKey& MoneroGetWatchKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroGetWatchKey_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroGetWatchKey::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroGetWatchKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  network_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroGetWatchKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroGetWatchKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_address_n(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_address_n();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 network_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_network_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroGetWatchKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroGetWatchKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 network_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_network_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroGetWatchKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroGetWatchKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroGetWatchKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroGetWatchKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->network_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroGetWatchKey)
}

::google::protobuf::uint8* MoneroGetWatchKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroGetWatchKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_type = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->network_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroGetWatchKey)
  return target;
}

size_t MoneroGetWatchKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroGetWatchKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  // optional uint32 network_type = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->network_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroGetWatchKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroGetWatchKey)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroGetWatchKey* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroGetWatchKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroGetWatchKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroGetWatchKey)
    MergeFrom(*source);
  }
}

void MoneroGetWatchKey::MergeFrom(const MoneroGetWatchKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroGetWatchKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  if (from.has_network_type()) {
    set_network_type(from.network_type());
  }
}

void MoneroGetWatchKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroGetWatchKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroGetWatchKey::CopyFrom(const MoneroGetWatchKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroGetWatchKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroGetWatchKey::IsInitialized() const {
  return true;
}

void MoneroGetWatchKey::Swap(MoneroGetWatchKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroGetWatchKey::InternalSwap(MoneroGetWatchKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  address_n_.InternalSwap(&other->address_n_);
  swap(network_type_, other->network_type_);
}

::google::protobuf::Metadata MoneroGetWatchKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroWatchKey::InitAsDefaultInstance() {
}
class MoneroWatchKey::HasBitSetters {
 public:
  static void set_has_watch_key(MoneroWatchKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_address(MoneroWatchKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroWatchKey::kWatchKeyFieldNumber;
const int MoneroWatchKey::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroWatchKey::MoneroWatchKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroWatchKey)
}
MoneroWatchKey::MoneroWatchKey(const MoneroWatchKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  watch_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_watch_key()) {
    watch_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.watch_key_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroWatchKey)
}

void MoneroWatchKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroWatchKey_messages_2dmonero_2eproto.base);
  watch_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroWatchKey::~MoneroWatchKey() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroWatchKey)
  SharedDtor();
}

void MoneroWatchKey::SharedDtor() {
  watch_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroWatchKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroWatchKey& MoneroWatchKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroWatchKey_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroWatchKey::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroWatchKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      watch_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      address_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroWatchKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroWatchKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes watch_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_watch_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroWatchKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroWatchKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes watch_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_watch_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroWatchKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroWatchKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroWatchKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroWatchKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes watch_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->watch_key(), output);
  }

  // optional bytes address = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroWatchKey)
}

::google::protobuf::uint8* MoneroWatchKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroWatchKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes watch_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->watch_key(), target);
  }

  // optional bytes address = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroWatchKey)
  return target;
}

size_t MoneroWatchKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroWatchKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes watch_key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->watch_key());
    }

    // optional bytes address = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->address());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroWatchKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroWatchKey)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroWatchKey* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroWatchKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroWatchKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroWatchKey)
    MergeFrom(*source);
  }
}

void MoneroWatchKey::MergeFrom(const MoneroWatchKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroWatchKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      watch_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.watch_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
  }
}

void MoneroWatchKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroWatchKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroWatchKey::CopyFrom(const MoneroWatchKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroWatchKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroWatchKey::IsInitialized() const {
  return true;
}

void MoneroWatchKey::Swap(MoneroWatchKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroWatchKey::InternalSwap(MoneroWatchKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  watch_key_.Swap(&other->watch_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroWatchKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionInitRequest_MoneroTransactionData::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionInitRequest_MoneroTransactionData_default_instance_._instance.get_mutable()->change_dts_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry*>(
      ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry::internal_default_instance());
  ::hw::trezor::messages::monero::_MoneroTransactionInitRequest_MoneroTransactionData_default_instance_._instance.get_mutable()->rsig_data_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionRsigData*>(
      ::hw::trezor::messages::monero::MoneroTransactionRsigData::internal_default_instance());
}
class MoneroTransactionInitRequest_MoneroTransactionData::HasBitSetters {
 public:
  static void set_has_version(MoneroTransactionInitRequest_MoneroTransactionData* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_payment_id(MoneroTransactionInitRequest_MoneroTransactionData* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_unlock_time(MoneroTransactionInitRequest_MoneroTransactionData* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static const ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry& change_dts(const MoneroTransactionInitRequest_MoneroTransactionData* msg);
  static void set_has_change_dts(MoneroTransactionInitRequest_MoneroTransactionData* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_num_inputs(MoneroTransactionInitRequest_MoneroTransactionData* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_mixin(MoneroTransactionInitRequest_MoneroTransactionData* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_fee(MoneroTransactionInitRequest_MoneroTransactionData* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_account(MoneroTransactionInitRequest_MoneroTransactionData* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static const ::hw::trezor::messages::monero::MoneroTransactionRsigData& rsig_data(const MoneroTransactionInitRequest_MoneroTransactionData* msg);
  static void set_has_rsig_data(MoneroTransactionInitRequest_MoneroTransactionData* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry&
MoneroTransactionInitRequest_MoneroTransactionData::HasBitSetters::change_dts(const MoneroTransactionInitRequest_MoneroTransactionData* msg) {
  return *msg->change_dts_;
}
const ::hw::trezor::messages::monero::MoneroTransactionRsigData&
MoneroTransactionInitRequest_MoneroTransactionData::HasBitSetters::rsig_data(const MoneroTransactionInitRequest_MoneroTransactionData* msg) {
  return *msg->rsig_data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionInitRequest_MoneroTransactionData::kVersionFieldNumber;
const int MoneroTransactionInitRequest_MoneroTransactionData::kPaymentIdFieldNumber;
const int MoneroTransactionInitRequest_MoneroTransactionData::kUnlockTimeFieldNumber;
const int MoneroTransactionInitRequest_MoneroTransactionData::kOutputsFieldNumber;
const int MoneroTransactionInitRequest_MoneroTransactionData::kChangeDtsFieldNumber;
const int MoneroTransactionInitRequest_MoneroTransactionData::kNumInputsFieldNumber;
const int MoneroTransactionInitRequest_MoneroTransactionData::kMixinFieldNumber;
const int MoneroTransactionInitRequest_MoneroTransactionData::kFeeFieldNumber;
const int MoneroTransactionInitRequest_MoneroTransactionData::kAccountFieldNumber;
const int MoneroTransactionInitRequest_MoneroTransactionData::kMinorIndicesFieldNumber;
const int MoneroTransactionInitRequest_MoneroTransactionData::kRsigDataFieldNumber;
const int MoneroTransactionInitRequest_MoneroTransactionData::kIntegratedIndicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionInitRequest_MoneroTransactionData::MoneroTransactionInitRequest_MoneroTransactionData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
}
MoneroTransactionInitRequest_MoneroTransactionData::MoneroTransactionInitRequest_MoneroTransactionData(const MoneroTransactionInitRequest_MoneroTransactionData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      outputs_(from.outputs_),
      minor_indices_(from.minor_indices_),
      integrated_indices_(from.integrated_indices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payment_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payment_id()) {
    payment_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_id_);
  }
  if (from.has_change_dts()) {
    change_dts_ = new ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry(*from.change_dts_);
  } else {
    change_dts_ = nullptr;
  }
  if (from.has_rsig_data()) {
    rsig_data_ = new ::hw::trezor::messages::monero::MoneroTransactionRsigData(*from.rsig_data_);
  } else {
    rsig_data_ = nullptr;
  }
  ::memcpy(&unlock_time_, &from.unlock_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&account_) -
    reinterpret_cast<char*>(&unlock_time_)) + sizeof(account_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
}

void MoneroTransactionInitRequest_MoneroTransactionData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionInitRequest_MoneroTransactionData_messages_2dmonero_2eproto.base);
  payment_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&change_dts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&account_) -
      reinterpret_cast<char*>(&change_dts_)) + sizeof(account_));
}

MoneroTransactionInitRequest_MoneroTransactionData::~MoneroTransactionInitRequest_MoneroTransactionData() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  SharedDtor();
}

void MoneroTransactionInitRequest_MoneroTransactionData::SharedDtor() {
  payment_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete change_dts_;
  if (this != internal_default_instance()) delete rsig_data_;
}

void MoneroTransactionInitRequest_MoneroTransactionData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionInitRequest_MoneroTransactionData& MoneroTransactionInitRequest_MoneroTransactionData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionInitRequest_MoneroTransactionData_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionInitRequest_MoneroTransactionData::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outputs_.Clear();
  minor_indices_.Clear();
  integrated_indices_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      payment_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(change_dts_ != nullptr);
      change_dts_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(rsig_data_ != nullptr);
      rsig_data_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&unlock_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mixin_) -
        reinterpret_cast<char*>(&unlock_time_)) + sizeof(mixin_));
  }
  account_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionInitRequest_MoneroTransactionData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionInitRequest_MoneroTransactionData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes payment_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_payment_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint64 unlock_time = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_unlock_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .hw.trezor.messages.monero.MoneroTransactionDestinationEntry outputs = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry::_InternalParse;
          object = msg->add_outputs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry change_dts = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry::_InternalParse;
        object = msg->mutable_change_dts();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional uint32 num_inputs = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_num_inputs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 mixin = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_mixin(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 fee = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_fee(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 account = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_account(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 minor_indices = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) == 80) {
          do {
            msg->add_minor_indices(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 80 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_minor_indices();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionRsigData::_InternalParse;
        object = msg->mutable_rsig_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated uint32 integrated_indices = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) == 96) {
          do {
            msg->add_integrated_indices(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 96 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_integrated_indices();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionInitRequest_MoneroTransactionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes payment_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payment_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 unlock_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_unlock_time(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &unlock_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hw.trezor.messages.monero.MoneroTransactionDestinationEntry outputs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry change_dts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_change_dts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_inputs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_num_inputs(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_inputs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mixin = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_mixin(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mixin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fee = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_fee(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 account = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_account(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 minor_indices = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 80u, input, this->mutable_minor_indices())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_minor_indices())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rsig_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 integrated_indices = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 96u, input, this->mutable_integrated_indices())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_integrated_indices())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionInitRequest_MoneroTransactionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional bytes payment_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->payment_id(), output);
  }

  // optional uint64 unlock_time = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->unlock_time(), output);
  }

  // repeated .hw.trezor.messages.monero.MoneroTransactionDestinationEntry outputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->outputs(static_cast<int>(i)),
      output);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry change_dts = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::change_dts(this), output);
  }

  // optional uint32 num_inputs = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->num_inputs(), output);
  }

  // optional uint32 mixin = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mixin(), output);
  }

  // optional uint64 fee = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->fee(), output);
  }

  // optional uint32 account = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->account(), output);
  }

  // repeated uint32 minor_indices = 10;
  for (int i = 0, n = this->minor_indices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      10, this->minor_indices(i), output);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::rsig_data(this), output);
  }

  // repeated uint32 integrated_indices = 12;
  for (int i = 0, n = this->integrated_indices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      12, this->integrated_indices(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
}

::google::protobuf::uint8* MoneroTransactionInitRequest_MoneroTransactionData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional bytes payment_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->payment_id(), target);
  }

  // optional uint64 unlock_time = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->unlock_time(), target);
  }

  // repeated .hw.trezor.messages.monero.MoneroTransactionDestinationEntry outputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->outputs(static_cast<int>(i)), target);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry change_dts = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::change_dts(this), target);
  }

  // optional uint32 num_inputs = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->num_inputs(), target);
  }

  // optional uint32 mixin = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mixin(), target);
  }

  // optional uint64 fee = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->fee(), target);
  }

  // optional uint32 account = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->account(), target);
  }

  // repeated uint32 minor_indices = 10;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(10, this->minor_indices_, target);

  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 11;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::rsig_data(this), target);
  }

  // repeated uint32 integrated_indices = 12;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(12, this->integrated_indices_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  return target;
}

size_t MoneroTransactionInitRequest_MoneroTransactionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.monero.MoneroTransactionDestinationEntry outputs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outputs(static_cast<int>(i)));
    }
  }

  // repeated uint32 minor_indices = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->minor_indices_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->minor_indices_size());
    total_size += data_size;
  }

  // repeated uint32 integrated_indices = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->integrated_indices_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->integrated_indices_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes payment_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->payment_id());
    }

    // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry change_dts = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *change_dts_);
    }

    // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rsig_data_);
    }

    // optional uint64 unlock_time = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->unlock_time());
    }

    // optional uint32 version = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 num_inputs = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_inputs());
    }

    // optional uint64 fee = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fee());
    }

    // optional uint32 mixin = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mixin());
    }

  }
  // optional uint32 account = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionInitRequest_MoneroTransactionData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionInitRequest_MoneroTransactionData* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionInitRequest_MoneroTransactionData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
    MergeFrom(*source);
  }
}

void MoneroTransactionInitRequest_MoneroTransactionData::MergeFrom(const MoneroTransactionInitRequest_MoneroTransactionData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  outputs_.MergeFrom(from.outputs_);
  minor_indices_.MergeFrom(from.minor_indices_);
  integrated_indices_.MergeFrom(from.integrated_indices_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      payment_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_change_dts()->::hw::trezor::messages::monero::MoneroTransactionDestinationEntry::MergeFrom(from.change_dts());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_rsig_data()->::hw::trezor::messages::monero::MoneroTransactionRsigData::MergeFrom(from.rsig_data());
    }
    if (cached_has_bits & 0x00000008u) {
      unlock_time_ = from.unlock_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_inputs_ = from.num_inputs_;
    }
    if (cached_has_bits & 0x00000040u) {
      fee_ = from.fee_;
    }
    if (cached_has_bits & 0x00000080u) {
      mixin_ = from.mixin_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_account(from.account());
  }
}

void MoneroTransactionInitRequest_MoneroTransactionData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionInitRequest_MoneroTransactionData::CopyFrom(const MoneroTransactionInitRequest_MoneroTransactionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionInitRequest_MoneroTransactionData::IsInitialized() const {
  return true;
}

void MoneroTransactionInitRequest_MoneroTransactionData::Swap(MoneroTransactionInitRequest_MoneroTransactionData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionInitRequest_MoneroTransactionData::InternalSwap(MoneroTransactionInitRequest_MoneroTransactionData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&outputs_)->InternalSwap(CastToBase(&other->outputs_));
  minor_indices_.InternalSwap(&other->minor_indices_);
  integrated_indices_.InternalSwap(&other->integrated_indices_);
  payment_id_.Swap(&other->payment_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(change_dts_, other->change_dts_);
  swap(rsig_data_, other->rsig_data_);
  swap(unlock_time_, other->unlock_time_);
  swap(version_, other->version_);
  swap(num_inputs_, other->num_inputs_);
  swap(fee_, other->fee_);
  swap(mixin_, other->mixin_);
  swap(account_, other->account_);
}

::google::protobuf::Metadata MoneroTransactionInitRequest_MoneroTransactionData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionInitRequest::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionInitRequest_default_instance_._instance.get_mutable()->tsx_data_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData*>(
      ::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData::internal_default_instance());
}
class MoneroTransactionInitRequest::HasBitSetters {
 public:
  static void set_has_version(MoneroTransactionInitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_network_type(MoneroTransactionInitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static const ::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData& tsx_data(const MoneroTransactionInitRequest* msg);
  static void set_has_tsx_data(MoneroTransactionInitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData&
MoneroTransactionInitRequest::HasBitSetters::tsx_data(const MoneroTransactionInitRequest* msg) {
  return *msg->tsx_data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionInitRequest::kVersionFieldNumber;
const int MoneroTransactionInitRequest::kAddressNFieldNumber;
const int MoneroTransactionInitRequest::kNetworkTypeFieldNumber;
const int MoneroTransactionInitRequest::kTsxDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionInitRequest::MoneroTransactionInitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionInitRequest)
}
MoneroTransactionInitRequest::MoneroTransactionInitRequest(const MoneroTransactionInitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tsx_data()) {
    tsx_data_ = new ::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData(*from.tsx_data_);
  } else {
    tsx_data_ = nullptr;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&network_type_) -
    reinterpret_cast<char*>(&version_)) + sizeof(network_type_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionInitRequest)
}

void MoneroTransactionInitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionInitRequest_messages_2dmonero_2eproto.base);
  ::memset(&tsx_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&network_type_) -
      reinterpret_cast<char*>(&tsx_data_)) + sizeof(network_type_));
}

MoneroTransactionInitRequest::~MoneroTransactionInitRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  SharedDtor();
}

void MoneroTransactionInitRequest::SharedDtor() {
  if (this != internal_default_instance()) delete tsx_data_;
}

void MoneroTransactionInitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionInitRequest& MoneroTransactionInitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionInitRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionInitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(tsx_data_ != nullptr);
    tsx_data_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&network_type_) -
        reinterpret_cast<char*>(&version_)) + sizeof(network_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionInitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionInitRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 address_n = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_address_n(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_address_n();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 network_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_network_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData tsx_data = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData::_InternalParse;
        object = msg->mutable_tsx_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionInitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 address_n = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_address_n())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 network_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_network_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData tsx_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tsx_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionInitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // repeated uint32 address_n = 2;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->address_n(i), output);
  }

  // optional uint32 network_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->network_type(), output);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData tsx_data = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::tsx_data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionInitRequest)
}

::google::protobuf::uint8* MoneroTransactionInitRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // repeated uint32 address_n = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->address_n_, target);

  // optional uint32 network_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->network_type(), target);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData tsx_data = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::tsx_data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  return target;
}

size_t MoneroTransactionInitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 address_n = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .hw.trezor.messages.monero.MoneroTransactionInitRequest.MoneroTransactionData tsx_data = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tsx_data_);
    }

    // optional uint32 version = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 network_type = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionInitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionInitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionInitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionInitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionInitRequest)
    MergeFrom(*source);
  }
}

void MoneroTransactionInitRequest::MergeFrom(const MoneroTransactionInitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_tsx_data()->::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData::MergeFrom(from.tsx_data());
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000004u) {
      network_type_ = from.network_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MoneroTransactionInitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionInitRequest::CopyFrom(const MoneroTransactionInitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionInitRequest::IsInitialized() const {
  return true;
}

void MoneroTransactionInitRequest::Swap(MoneroTransactionInitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionInitRequest::InternalSwap(MoneroTransactionInitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  address_n_.InternalSwap(&other->address_n_);
  swap(tsx_data_, other->tsx_data_);
  swap(version_, other->version_);
  swap(network_type_, other->network_type_);
}

::google::protobuf::Metadata MoneroTransactionInitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionInitAck::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionInitAck_default_instance_._instance.get_mutable()->rsig_data_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionRsigData*>(
      ::hw::trezor::messages::monero::MoneroTransactionRsigData::internal_default_instance());
}
class MoneroTransactionInitAck::HasBitSetters {
 public:
  static const ::hw::trezor::messages::monero::MoneroTransactionRsigData& rsig_data(const MoneroTransactionInitAck* msg);
  static void set_has_rsig_data(MoneroTransactionInitAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionRsigData&
MoneroTransactionInitAck::HasBitSetters::rsig_data(const MoneroTransactionInitAck* msg) {
  return *msg->rsig_data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionInitAck::kHmacsFieldNumber;
const int MoneroTransactionInitAck::kRsigDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionInitAck::MoneroTransactionInitAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionInitAck)
}
MoneroTransactionInitAck::MoneroTransactionInitAck(const MoneroTransactionInitAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      hmacs_(from.hmacs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rsig_data()) {
    rsig_data_ = new ::hw::trezor::messages::monero::MoneroTransactionRsigData(*from.rsig_data_);
  } else {
    rsig_data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionInitAck)
}

void MoneroTransactionInitAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionInitAck_messages_2dmonero_2eproto.base);
  rsig_data_ = nullptr;
}

MoneroTransactionInitAck::~MoneroTransactionInitAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionInitAck)
  SharedDtor();
}

void MoneroTransactionInitAck::SharedDtor() {
  if (this != internal_default_instance()) delete rsig_data_;
}

void MoneroTransactionInitAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionInitAck& MoneroTransactionInitAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionInitAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionInitAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionInitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hmacs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(rsig_data_ != nullptr);
    rsig_data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionInitAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionInitAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated bytes hmacs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          object = msg->add_hmacs();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParser;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionRsigData::_InternalParse;
        object = msg->mutable_rsig_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionInitAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionInitAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes hmacs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_hmacs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rsig_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionInitAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionInitAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionInitAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionInitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes hmacs = 1;
  for (int i = 0, n = this->hmacs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->hmacs(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::rsig_data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionInitAck)
}

::google::protobuf::uint8* MoneroTransactionInitAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionInitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes hmacs = 1;
  for (int i = 0, n = this->hmacs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->hmacs(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::rsig_data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionInitAck)
  return target;
}

size_t MoneroTransactionInitAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionInitAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes hmacs = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->hmacs_size());
  for (int i = 0, n = this->hmacs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->hmacs(i));
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rsig_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionInitAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInitAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionInitAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionInitAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionInitAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionInitAck)
    MergeFrom(*source);
  }
}

void MoneroTransactionInitAck::MergeFrom(const MoneroTransactionInitAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInitAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hmacs_.MergeFrom(from.hmacs_);
  if (from.has_rsig_data()) {
    mutable_rsig_data()->::hw::trezor::messages::monero::MoneroTransactionRsigData::MergeFrom(from.rsig_data());
  }
}

void MoneroTransactionInitAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInitAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionInitAck::CopyFrom(const MoneroTransactionInitAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInitAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionInitAck::IsInitialized() const {
  return true;
}

void MoneroTransactionInitAck::Swap(MoneroTransactionInitAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionInitAck::InternalSwap(MoneroTransactionInitAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  hmacs_.InternalSwap(CastToBase(&other->hmacs_));
  swap(rsig_data_, other->rsig_data_);
}

::google::protobuf::Metadata MoneroTransactionInitAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionSetInputRequest::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionSetInputRequest_default_instance_._instance.get_mutable()->src_entr_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry*>(
      ::hw::trezor::messages::monero::MoneroTransactionSourceEntry::internal_default_instance());
}
class MoneroTransactionSetInputRequest::HasBitSetters {
 public:
  static const ::hw::trezor::messages::monero::MoneroTransactionSourceEntry& src_entr(const MoneroTransactionSetInputRequest* msg);
  static void set_has_src_entr(MoneroTransactionSetInputRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionSourceEntry&
MoneroTransactionSetInputRequest::HasBitSetters::src_entr(const MoneroTransactionSetInputRequest* msg) {
  return *msg->src_entr_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionSetInputRequest::kSrcEntrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionSetInputRequest::MoneroTransactionSetInputRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
}
MoneroTransactionSetInputRequest::MoneroTransactionSetInputRequest(const MoneroTransactionSetInputRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_src_entr()) {
    src_entr_ = new ::hw::trezor::messages::monero::MoneroTransactionSourceEntry(*from.src_entr_);
  } else {
    src_entr_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
}

void MoneroTransactionSetInputRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionSetInputRequest_messages_2dmonero_2eproto.base);
  src_entr_ = nullptr;
}

MoneroTransactionSetInputRequest::~MoneroTransactionSetInputRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  SharedDtor();
}

void MoneroTransactionSetInputRequest::SharedDtor() {
  if (this != internal_default_instance()) delete src_entr_;
}

void MoneroTransactionSetInputRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionSetInputRequest& MoneroTransactionSetInputRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionSetInputRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionSetInputRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(src_entr_ != nullptr);
    src_entr_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionSetInputRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionSetInputRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionSourceEntry::_InternalParse;
        object = msg->mutable_src_entr();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionSetInputRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_src_entr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionSetInputRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::src_entr(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
}

::google::protobuf::uint8* MoneroTransactionSetInputRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::src_entr(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  return target;
}

size_t MoneroTransactionSetInputRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *src_entr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionSetInputRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionSetInputRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionSetInputRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
    MergeFrom(*source);
  }
}

void MoneroTransactionSetInputRequest::MergeFrom(const MoneroTransactionSetInputRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_src_entr()) {
    mutable_src_entr()->::hw::trezor::messages::monero::MoneroTransactionSourceEntry::MergeFrom(from.src_entr());
  }
}

void MoneroTransactionSetInputRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionSetInputRequest::CopyFrom(const MoneroTransactionSetInputRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSetInputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionSetInputRequest::IsInitialized() const {
  return true;
}

void MoneroTransactionSetInputRequest::Swap(MoneroTransactionSetInputRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionSetInputRequest::InternalSwap(MoneroTransactionSetInputRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(src_entr_, other->src_entr_);
}

::google::protobuf::Metadata MoneroTransactionSetInputRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionSetInputAck::InitAsDefaultInstance() {
}
class MoneroTransactionSetInputAck::HasBitSetters {
 public:
  static void set_has_vini(MoneroTransactionSetInputAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_vini_hmac(MoneroTransactionSetInputAck* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pseudo_out(MoneroTransactionSetInputAck* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pseudo_out_hmac(MoneroTransactionSetInputAck* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pseudo_out_alpha(MoneroTransactionSetInputAck* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_spend_key(MoneroTransactionSetInputAck* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionSetInputAck::kViniFieldNumber;
const int MoneroTransactionSetInputAck::kViniHmacFieldNumber;
const int MoneroTransactionSetInputAck::kPseudoOutFieldNumber;
const int MoneroTransactionSetInputAck::kPseudoOutHmacFieldNumber;
const int MoneroTransactionSetInputAck::kPseudoOutAlphaFieldNumber;
const int MoneroTransactionSetInputAck::kSpendKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionSetInputAck::MoneroTransactionSetInputAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
}
MoneroTransactionSetInputAck::MoneroTransactionSetInputAck(const MoneroTransactionSetInputAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vini_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vini()) {
    vini_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_);
  }
  vini_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vini_hmac()) {
    vini_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_hmac_);
  }
  pseudo_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pseudo_out()) {
    pseudo_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_);
  }
  pseudo_out_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pseudo_out_hmac()) {
    pseudo_out_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_hmac_);
  }
  pseudo_out_alpha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pseudo_out_alpha()) {
    pseudo_out_alpha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_alpha_);
  }
  spend_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_spend_key()) {
    spend_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spend_key_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
}

void MoneroTransactionSetInputAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionSetInputAck_messages_2dmonero_2eproto.base);
  vini_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vini_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_alpha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spend_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroTransactionSetInputAck::~MoneroTransactionSetInputAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  SharedDtor();
}

void MoneroTransactionSetInputAck::SharedDtor() {
  vini_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vini_hmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_hmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_alpha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spend_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroTransactionSetInputAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionSetInputAck& MoneroTransactionSetInputAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionSetInputAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionSetInputAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      vini_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      vini_hmac_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      pseudo_out_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      pseudo_out_hmac_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      pseudo_out_alpha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      spend_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionSetInputAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionSetInputAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes vini = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_vini();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes vini_hmac = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_vini_hmac();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes pseudo_out = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pseudo_out();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes pseudo_out_hmac = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pseudo_out_hmac();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes pseudo_out_alpha = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pseudo_out_alpha();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes spend_key = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_spend_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionSetInputAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes vini = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vini()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes vini_hmac = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vini_hmac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pseudo_out = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pseudo_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pseudo_out_hmac = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pseudo_out_hmac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pseudo_out_alpha = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pseudo_out_alpha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes spend_key = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_spend_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionSetInputAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes vini = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->vini(), output);
  }

  // optional bytes vini_hmac = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->vini_hmac(), output);
  }

  // optional bytes pseudo_out = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pseudo_out(), output);
  }

  // optional bytes pseudo_out_hmac = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pseudo_out_hmac(), output);
  }

  // optional bytes pseudo_out_alpha = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->pseudo_out_alpha(), output);
  }

  // optional bytes spend_key = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->spend_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
}

::google::protobuf::uint8* MoneroTransactionSetInputAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes vini = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->vini(), target);
  }

  // optional bytes vini_hmac = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->vini_hmac(), target);
  }

  // optional bytes pseudo_out = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pseudo_out(), target);
  }

  // optional bytes pseudo_out_hmac = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pseudo_out_hmac(), target);
  }

  // optional bytes pseudo_out_alpha = 5;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->pseudo_out_alpha(), target);
  }

  // optional bytes spend_key = 6;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->spend_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  return target;
}

size_t MoneroTransactionSetInputAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional bytes vini = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->vini());
    }

    // optional bytes vini_hmac = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->vini_hmac());
    }

    // optional bytes pseudo_out = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pseudo_out());
    }

    // optional bytes pseudo_out_hmac = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pseudo_out_hmac());
    }

    // optional bytes pseudo_out_alpha = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pseudo_out_alpha());
    }

    // optional bytes spend_key = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->spend_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionSetInputAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionSetInputAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionSetInputAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
    MergeFrom(*source);
  }
}

void MoneroTransactionSetInputAck::MergeFrom(const MoneroTransactionSetInputAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      vini_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      vini_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_hmac_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      pseudo_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      pseudo_out_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_hmac_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      pseudo_out_alpha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_alpha_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      spend_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spend_key_);
    }
  }
}

void MoneroTransactionSetInputAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionSetInputAck::CopyFrom(const MoneroTransactionSetInputAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSetInputAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionSetInputAck::IsInitialized() const {
  return true;
}

void MoneroTransactionSetInputAck::Swap(MoneroTransactionSetInputAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionSetInputAck::InternalSwap(MoneroTransactionSetInputAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  vini_.Swap(&other->vini_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vini_hmac_.Swap(&other->vini_hmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pseudo_out_.Swap(&other->pseudo_out_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pseudo_out_hmac_.Swap(&other->pseudo_out_hmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pseudo_out_alpha_.Swap(&other->pseudo_out_alpha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  spend_key_.Swap(&other->spend_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroTransactionSetInputAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionInputsPermutationRequest::InitAsDefaultInstance() {
}
class MoneroTransactionInputsPermutationRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionInputsPermutationRequest::kPermFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionInputsPermutationRequest::MoneroTransactionInputsPermutationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
}
MoneroTransactionInputsPermutationRequest::MoneroTransactionInputsPermutationRequest(const MoneroTransactionInputsPermutationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      perm_(from.perm_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
}

void MoneroTransactionInputsPermutationRequest::SharedCtor() {
}

MoneroTransactionInputsPermutationRequest::~MoneroTransactionInputsPermutationRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  SharedDtor();
}

void MoneroTransactionInputsPermutationRequest::SharedDtor() {
}

void MoneroTransactionInputsPermutationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionInputsPermutationRequest& MoneroTransactionInputsPermutationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionInputsPermutationRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionInputsPermutationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  perm_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionInputsPermutationRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionInputsPermutationRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 perm = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_perm(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_perm();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionInputsPermutationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 perm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_perm())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_perm())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionInputsPermutationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 perm = 1;
  for (int i = 0, n = this->perm_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->perm(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
}

::google::protobuf::uint8* MoneroTransactionInputsPermutationRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 perm = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->perm_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  return target;
}

size_t MoneroTransactionInputsPermutationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 perm = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->perm_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->perm_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionInputsPermutationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionInputsPermutationRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionInputsPermutationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
    MergeFrom(*source);
  }
}

void MoneroTransactionInputsPermutationRequest::MergeFrom(const MoneroTransactionInputsPermutationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  perm_.MergeFrom(from.perm_);
}

void MoneroTransactionInputsPermutationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionInputsPermutationRequest::CopyFrom(const MoneroTransactionInputsPermutationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionInputsPermutationRequest::IsInitialized() const {
  return true;
}

void MoneroTransactionInputsPermutationRequest::Swap(MoneroTransactionInputsPermutationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionInputsPermutationRequest::InternalSwap(MoneroTransactionInputsPermutationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  perm_.InternalSwap(&other->perm_);
}

::google::protobuf::Metadata MoneroTransactionInputsPermutationRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionInputsPermutationAck::InitAsDefaultInstance() {
}
class MoneroTransactionInputsPermutationAck::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionInputsPermutationAck::MoneroTransactionInputsPermutationAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
}
MoneroTransactionInputsPermutationAck::MoneroTransactionInputsPermutationAck(const MoneroTransactionInputsPermutationAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
}

void MoneroTransactionInputsPermutationAck::SharedCtor() {
}

MoneroTransactionInputsPermutationAck::~MoneroTransactionInputsPermutationAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  SharedDtor();
}

void MoneroTransactionInputsPermutationAck::SharedDtor() {
}

void MoneroTransactionInputsPermutationAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionInputsPermutationAck& MoneroTransactionInputsPermutationAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionInputsPermutationAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionInputsPermutationAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionInputsPermutationAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionInputsPermutationAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionInputsPermutationAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionInputsPermutationAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
}

::google::protobuf::uint8* MoneroTransactionInputsPermutationAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  return target;
}

size_t MoneroTransactionInputsPermutationAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionInputsPermutationAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionInputsPermutationAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionInputsPermutationAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
    MergeFrom(*source);
  }
}

void MoneroTransactionInputsPermutationAck::MergeFrom(const MoneroTransactionInputsPermutationAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MoneroTransactionInputsPermutationAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionInputsPermutationAck::CopyFrom(const MoneroTransactionInputsPermutationAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInputsPermutationAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionInputsPermutationAck::IsInitialized() const {
  return true;
}

void MoneroTransactionInputsPermutationAck::Swap(MoneroTransactionInputsPermutationAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionInputsPermutationAck::InternalSwap(MoneroTransactionInputsPermutationAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata MoneroTransactionInputsPermutationAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionInputViniRequest::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionInputViniRequest_default_instance_._instance.get_mutable()->src_entr_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry*>(
      ::hw::trezor::messages::monero::MoneroTransactionSourceEntry::internal_default_instance());
}
class MoneroTransactionInputViniRequest::HasBitSetters {
 public:
  static const ::hw::trezor::messages::monero::MoneroTransactionSourceEntry& src_entr(const MoneroTransactionInputViniRequest* msg);
  static void set_has_src_entr(MoneroTransactionInputViniRequest* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_vini(MoneroTransactionInputViniRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_vini_hmac(MoneroTransactionInputViniRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pseudo_out(MoneroTransactionInputViniRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pseudo_out_hmac(MoneroTransactionInputViniRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionSourceEntry&
MoneroTransactionInputViniRequest::HasBitSetters::src_entr(const MoneroTransactionInputViniRequest* msg) {
  return *msg->src_entr_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionInputViniRequest::kSrcEntrFieldNumber;
const int MoneroTransactionInputViniRequest::kViniFieldNumber;
const int MoneroTransactionInputViniRequest::kViniHmacFieldNumber;
const int MoneroTransactionInputViniRequest::kPseudoOutFieldNumber;
const int MoneroTransactionInputViniRequest::kPseudoOutHmacFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionInputViniRequest::MoneroTransactionInputViniRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
}
MoneroTransactionInputViniRequest::MoneroTransactionInputViniRequest(const MoneroTransactionInputViniRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vini_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vini()) {
    vini_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_);
  }
  vini_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vini_hmac()) {
    vini_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_hmac_);
  }
  pseudo_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pseudo_out()) {
    pseudo_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_);
  }
  pseudo_out_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pseudo_out_hmac()) {
    pseudo_out_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_hmac_);
  }
  if (from.has_src_entr()) {
    src_entr_ = new ::hw::trezor::messages::monero::MoneroTransactionSourceEntry(*from.src_entr_);
  } else {
    src_entr_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
}

void MoneroTransactionInputViniRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionInputViniRequest_messages_2dmonero_2eproto.base);
  vini_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vini_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_entr_ = nullptr;
}

MoneroTransactionInputViniRequest::~MoneroTransactionInputViniRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  SharedDtor();
}

void MoneroTransactionInputViniRequest::SharedDtor() {
  vini_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vini_hmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_hmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete src_entr_;
}

void MoneroTransactionInputViniRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionInputViniRequest& MoneroTransactionInputViniRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionInputViniRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionInputViniRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      vini_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      vini_hmac_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      pseudo_out_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      pseudo_out_hmac_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(src_entr_ != nullptr);
      src_entr_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionInputViniRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionInputViniRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionSourceEntry::_InternalParse;
        object = msg->mutable_src_entr();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional bytes vini = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_vini();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes vini_hmac = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_vini_hmac();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes pseudo_out = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pseudo_out();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes pseudo_out_hmac = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pseudo_out_hmac();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionInputViniRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_src_entr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes vini = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vini()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes vini_hmac = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vini_hmac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pseudo_out = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pseudo_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pseudo_out_hmac = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pseudo_out_hmac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionInputViniRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::src_entr(this), output);
  }

  // optional bytes vini = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->vini(), output);
  }

  // optional bytes vini_hmac = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->vini_hmac(), output);
  }

  // optional bytes pseudo_out = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pseudo_out(), output);
  }

  // optional bytes pseudo_out_hmac = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->pseudo_out_hmac(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
}

::google::protobuf::uint8* MoneroTransactionInputViniRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::src_entr(this), target);
  }

  // optional bytes vini = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->vini(), target);
  }

  // optional bytes vini_hmac = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->vini_hmac(), target);
  }

  // optional bytes pseudo_out = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pseudo_out(), target);
  }

  // optional bytes pseudo_out_hmac = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->pseudo_out_hmac(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  return target;
}

size_t MoneroTransactionInputViniRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bytes vini = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->vini());
    }

    // optional bytes vini_hmac = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->vini_hmac());
    }

    // optional bytes pseudo_out = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pseudo_out());
    }

    // optional bytes pseudo_out_hmac = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pseudo_out_hmac());
    }

    // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *src_entr_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionInputViniRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionInputViniRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionInputViniRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
    MergeFrom(*source);
  }
}

void MoneroTransactionInputViniRequest::MergeFrom(const MoneroTransactionInputViniRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      vini_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      vini_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_hmac_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      pseudo_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      pseudo_out_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_hmac_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_src_entr()->::hw::trezor::messages::monero::MoneroTransactionSourceEntry::MergeFrom(from.src_entr());
    }
  }
}

void MoneroTransactionInputViniRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionInputViniRequest::CopyFrom(const MoneroTransactionInputViniRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInputViniRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionInputViniRequest::IsInitialized() const {
  return true;
}

void MoneroTransactionInputViniRequest::Swap(MoneroTransactionInputViniRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionInputViniRequest::InternalSwap(MoneroTransactionInputViniRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  vini_.Swap(&other->vini_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vini_hmac_.Swap(&other->vini_hmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pseudo_out_.Swap(&other->pseudo_out_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pseudo_out_hmac_.Swap(&other->pseudo_out_hmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(src_entr_, other->src_entr_);
}

::google::protobuf::Metadata MoneroTransactionInputViniRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionInputViniAck::InitAsDefaultInstance() {
}
class MoneroTransactionInputViniAck::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionInputViniAck::MoneroTransactionInputViniAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
}
MoneroTransactionInputViniAck::MoneroTransactionInputViniAck(const MoneroTransactionInputViniAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
}

void MoneroTransactionInputViniAck::SharedCtor() {
}

MoneroTransactionInputViniAck::~MoneroTransactionInputViniAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  SharedDtor();
}

void MoneroTransactionInputViniAck::SharedDtor() {
}

void MoneroTransactionInputViniAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionInputViniAck& MoneroTransactionInputViniAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionInputViniAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionInputViniAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionInputViniAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionInputViniAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionInputViniAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionInputViniAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
}

::google::protobuf::uint8* MoneroTransactionInputViniAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  return target;
}

size_t MoneroTransactionInputViniAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionInputViniAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionInputViniAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionInputViniAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
    MergeFrom(*source);
  }
}

void MoneroTransactionInputViniAck::MergeFrom(const MoneroTransactionInputViniAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MoneroTransactionInputViniAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionInputViniAck::CopyFrom(const MoneroTransactionInputViniAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionInputViniAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionInputViniAck::IsInitialized() const {
  return true;
}

void MoneroTransactionInputViniAck::Swap(MoneroTransactionInputViniAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionInputViniAck::InternalSwap(MoneroTransactionInputViniAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata MoneroTransactionInputViniAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionAllInputsSetRequest::InitAsDefaultInstance() {
}
class MoneroTransactionAllInputsSetRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionAllInputsSetRequest::MoneroTransactionAllInputsSetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
}
MoneroTransactionAllInputsSetRequest::MoneroTransactionAllInputsSetRequest(const MoneroTransactionAllInputsSetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
}

void MoneroTransactionAllInputsSetRequest::SharedCtor() {
}

MoneroTransactionAllInputsSetRequest::~MoneroTransactionAllInputsSetRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  SharedDtor();
}

void MoneroTransactionAllInputsSetRequest::SharedDtor() {
}

void MoneroTransactionAllInputsSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionAllInputsSetRequest& MoneroTransactionAllInputsSetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionAllInputsSetRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionAllInputsSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionAllInputsSetRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionAllInputsSetRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionAllInputsSetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionAllInputsSetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
}

::google::protobuf::uint8* MoneroTransactionAllInputsSetRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  return target;
}

size_t MoneroTransactionAllInputsSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionAllInputsSetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionAllInputsSetRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionAllInputsSetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
    MergeFrom(*source);
  }
}

void MoneroTransactionAllInputsSetRequest::MergeFrom(const MoneroTransactionAllInputsSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MoneroTransactionAllInputsSetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionAllInputsSetRequest::CopyFrom(const MoneroTransactionAllInputsSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionAllInputsSetRequest::IsInitialized() const {
  return true;
}

void MoneroTransactionAllInputsSetRequest::Swap(MoneroTransactionAllInputsSetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionAllInputsSetRequest::InternalSwap(MoneroTransactionAllInputsSetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata MoneroTransactionAllInputsSetRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionAllInputsSetAck::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionAllInputsSetAck_default_instance_._instance.get_mutable()->rsig_data_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionRsigData*>(
      ::hw::trezor::messages::monero::MoneroTransactionRsigData::internal_default_instance());
}
class MoneroTransactionAllInputsSetAck::HasBitSetters {
 public:
  static const ::hw::trezor::messages::monero::MoneroTransactionRsigData& rsig_data(const MoneroTransactionAllInputsSetAck* msg);
  static void set_has_rsig_data(MoneroTransactionAllInputsSetAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionRsigData&
MoneroTransactionAllInputsSetAck::HasBitSetters::rsig_data(const MoneroTransactionAllInputsSetAck* msg) {
  return *msg->rsig_data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionAllInputsSetAck::kRsigDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionAllInputsSetAck::MoneroTransactionAllInputsSetAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
}
MoneroTransactionAllInputsSetAck::MoneroTransactionAllInputsSetAck(const MoneroTransactionAllInputsSetAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rsig_data()) {
    rsig_data_ = new ::hw::trezor::messages::monero::MoneroTransactionRsigData(*from.rsig_data_);
  } else {
    rsig_data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
}

void MoneroTransactionAllInputsSetAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionAllInputsSetAck_messages_2dmonero_2eproto.base);
  rsig_data_ = nullptr;
}

MoneroTransactionAllInputsSetAck::~MoneroTransactionAllInputsSetAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  SharedDtor();
}

void MoneroTransactionAllInputsSetAck::SharedDtor() {
  if (this != internal_default_instance()) delete rsig_data_;
}

void MoneroTransactionAllInputsSetAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionAllInputsSetAck& MoneroTransactionAllInputsSetAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionAllInputsSetAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionAllInputsSetAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(rsig_data_ != nullptr);
    rsig_data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionAllInputsSetAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionAllInputsSetAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionRsigData::_InternalParse;
        object = msg->mutable_rsig_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionAllInputsSetAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rsig_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionAllInputsSetAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::rsig_data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
}

::google::protobuf::uint8* MoneroTransactionAllInputsSetAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::rsig_data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  return target;
}

size_t MoneroTransactionAllInputsSetAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rsig_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionAllInputsSetAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionAllInputsSetAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionAllInputsSetAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
    MergeFrom(*source);
  }
}

void MoneroTransactionAllInputsSetAck::MergeFrom(const MoneroTransactionAllInputsSetAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsig_data()) {
    mutable_rsig_data()->::hw::trezor::messages::monero::MoneroTransactionRsigData::MergeFrom(from.rsig_data());
  }
}

void MoneroTransactionAllInputsSetAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionAllInputsSetAck::CopyFrom(const MoneroTransactionAllInputsSetAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionAllInputsSetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionAllInputsSetAck::IsInitialized() const {
  return true;
}

void MoneroTransactionAllInputsSetAck::Swap(MoneroTransactionAllInputsSetAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionAllInputsSetAck::InternalSwap(MoneroTransactionAllInputsSetAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(rsig_data_, other->rsig_data_);
}

::google::protobuf::Metadata MoneroTransactionAllInputsSetAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionSetOutputRequest::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionSetOutputRequest_default_instance_._instance.get_mutable()->dst_entr_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry*>(
      ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry::internal_default_instance());
  ::hw::trezor::messages::monero::_MoneroTransactionSetOutputRequest_default_instance_._instance.get_mutable()->rsig_data_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionRsigData*>(
      ::hw::trezor::messages::monero::MoneroTransactionRsigData::internal_default_instance());
}
class MoneroTransactionSetOutputRequest::HasBitSetters {
 public:
  static const ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry& dst_entr(const MoneroTransactionSetOutputRequest* msg);
  static void set_has_dst_entr(MoneroTransactionSetOutputRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_dst_entr_hmac(MoneroTransactionSetOutputRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::hw::trezor::messages::monero::MoneroTransactionRsigData& rsig_data(const MoneroTransactionSetOutputRequest* msg);
  static void set_has_rsig_data(MoneroTransactionSetOutputRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry&
MoneroTransactionSetOutputRequest::HasBitSetters::dst_entr(const MoneroTransactionSetOutputRequest* msg) {
  return *msg->dst_entr_;
}
const ::hw::trezor::messages::monero::MoneroTransactionRsigData&
MoneroTransactionSetOutputRequest::HasBitSetters::rsig_data(const MoneroTransactionSetOutputRequest* msg) {
  return *msg->rsig_data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionSetOutputRequest::kDstEntrFieldNumber;
const int MoneroTransactionSetOutputRequest::kDstEntrHmacFieldNumber;
const int MoneroTransactionSetOutputRequest::kRsigDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionSetOutputRequest::MoneroTransactionSetOutputRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
}
MoneroTransactionSetOutputRequest::MoneroTransactionSetOutputRequest(const MoneroTransactionSetOutputRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dst_entr_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dst_entr_hmac()) {
    dst_entr_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_entr_hmac_);
  }
  if (from.has_dst_entr()) {
    dst_entr_ = new ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry(*from.dst_entr_);
  } else {
    dst_entr_ = nullptr;
  }
  if (from.has_rsig_data()) {
    rsig_data_ = new ::hw::trezor::messages::monero::MoneroTransactionRsigData(*from.rsig_data_);
  } else {
    rsig_data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
}

void MoneroTransactionSetOutputRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionSetOutputRequest_messages_2dmonero_2eproto.base);
  dst_entr_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dst_entr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rsig_data_) -
      reinterpret_cast<char*>(&dst_entr_)) + sizeof(rsig_data_));
}

MoneroTransactionSetOutputRequest::~MoneroTransactionSetOutputRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  SharedDtor();
}

void MoneroTransactionSetOutputRequest::SharedDtor() {
  dst_entr_hmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete dst_entr_;
  if (this != internal_default_instance()) delete rsig_data_;
}

void MoneroTransactionSetOutputRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionSetOutputRequest& MoneroTransactionSetOutputRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionSetOutputRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionSetOutputRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      dst_entr_hmac_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(dst_entr_ != nullptr);
      dst_entr_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(rsig_data_ != nullptr);
      rsig_data_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionSetOutputRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionSetOutputRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry dst_entr = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry::_InternalParse;
        object = msg->mutable_dst_entr();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional bytes dst_entr_hmac = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_dst_entr_hmac();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionRsigData::_InternalParse;
        object = msg->mutable_rsig_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionSetOutputRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry dst_entr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dst_entr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes dst_entr_hmac = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dst_entr_hmac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rsig_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionSetOutputRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry dst_entr = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::dst_entr(this), output);
  }

  // optional bytes dst_entr_hmac = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->dst_entr_hmac(), output);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::rsig_data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
}

::google::protobuf::uint8* MoneroTransactionSetOutputRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry dst_entr = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::dst_entr(this), target);
  }

  // optional bytes dst_entr_hmac = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->dst_entr_hmac(), target);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::rsig_data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  return target;
}

size_t MoneroTransactionSetOutputRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes dst_entr_hmac = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->dst_entr_hmac());
    }

    // optional .hw.trezor.messages.monero.MoneroTransactionDestinationEntry dst_entr = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dst_entr_);
    }

    // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rsig_data_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionSetOutputRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionSetOutputRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionSetOutputRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
    MergeFrom(*source);
  }
}

void MoneroTransactionSetOutputRequest::MergeFrom(const MoneroTransactionSetOutputRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      dst_entr_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dst_entr_hmac_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_dst_entr()->::hw::trezor::messages::monero::MoneroTransactionDestinationEntry::MergeFrom(from.dst_entr());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_rsig_data()->::hw::trezor::messages::monero::MoneroTransactionRsigData::MergeFrom(from.rsig_data());
    }
  }
}

void MoneroTransactionSetOutputRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionSetOutputRequest::CopyFrom(const MoneroTransactionSetOutputRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSetOutputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionSetOutputRequest::IsInitialized() const {
  return true;
}

void MoneroTransactionSetOutputRequest::Swap(MoneroTransactionSetOutputRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionSetOutputRequest::InternalSwap(MoneroTransactionSetOutputRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  dst_entr_hmac_.Swap(&other->dst_entr_hmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dst_entr_, other->dst_entr_);
  swap(rsig_data_, other->rsig_data_);
}

::google::protobuf::Metadata MoneroTransactionSetOutputRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionSetOutputAck::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionSetOutputAck_default_instance_._instance.get_mutable()->rsig_data_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionRsigData*>(
      ::hw::trezor::messages::monero::MoneroTransactionRsigData::internal_default_instance());
}
class MoneroTransactionSetOutputAck::HasBitSetters {
 public:
  static void set_has_tx_out(MoneroTransactionSetOutputAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_vouti_hmac(MoneroTransactionSetOutputAck* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::hw::trezor::messages::monero::MoneroTransactionRsigData& rsig_data(const MoneroTransactionSetOutputAck* msg);
  static void set_has_rsig_data(MoneroTransactionSetOutputAck* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_out_pk(MoneroTransactionSetOutputAck* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ecdh_info(MoneroTransactionSetOutputAck* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionRsigData&
MoneroTransactionSetOutputAck::HasBitSetters::rsig_data(const MoneroTransactionSetOutputAck* msg) {
  return *msg->rsig_data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionSetOutputAck::kTxOutFieldNumber;
const int MoneroTransactionSetOutputAck::kVoutiHmacFieldNumber;
const int MoneroTransactionSetOutputAck::kRsigDataFieldNumber;
const int MoneroTransactionSetOutputAck::kOutPkFieldNumber;
const int MoneroTransactionSetOutputAck::kEcdhInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionSetOutputAck::MoneroTransactionSetOutputAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
}
MoneroTransactionSetOutputAck::MoneroTransactionSetOutputAck(const MoneroTransactionSetOutputAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tx_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_out()) {
    tx_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_out_);
  }
  vouti_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vouti_hmac()) {
    vouti_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vouti_hmac_);
  }
  out_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_out_pk()) {
    out_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_pk_);
  }
  ecdh_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ecdh_info()) {
    ecdh_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ecdh_info_);
  }
  if (from.has_rsig_data()) {
    rsig_data_ = new ::hw::trezor::messages::monero::MoneroTransactionRsigData(*from.rsig_data_);
  } else {
    rsig_data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
}

void MoneroTransactionSetOutputAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionSetOutputAck_messages_2dmonero_2eproto.base);
  tx_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vouti_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ecdh_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rsig_data_ = nullptr;
}

MoneroTransactionSetOutputAck::~MoneroTransactionSetOutputAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  SharedDtor();
}

void MoneroTransactionSetOutputAck::SharedDtor() {
  tx_out_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vouti_hmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ecdh_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rsig_data_;
}

void MoneroTransactionSetOutputAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionSetOutputAck& MoneroTransactionSetOutputAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionSetOutputAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionSetOutputAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      tx_out_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      vouti_hmac_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      out_pk_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      ecdh_info_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(rsig_data_ != nullptr);
      rsig_data_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionSetOutputAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionSetOutputAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes tx_out = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_tx_out();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes vouti_hmac = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_vouti_hmac();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionRsigData::_InternalParse;
        object = msg->mutable_rsig_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional bytes out_pk = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_out_pk();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes ecdh_info = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ecdh_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionSetOutputAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes tx_out = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes vouti_hmac = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vouti_hmac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rsig_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes out_pk = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_out_pk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ecdh_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ecdh_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionSetOutputAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes tx_out = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->tx_out(), output);
  }

  // optional bytes vouti_hmac = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->vouti_hmac(), output);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::rsig_data(this), output);
  }

  // optional bytes out_pk = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->out_pk(), output);
  }

  // optional bytes ecdh_info = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->ecdh_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
}

::google::protobuf::uint8* MoneroTransactionSetOutputAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes tx_out = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->tx_out(), target);
  }

  // optional bytes vouti_hmac = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->vouti_hmac(), target);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::rsig_data(this), target);
  }

  // optional bytes out_pk = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->out_pk(), target);
  }

  // optional bytes ecdh_info = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->ecdh_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  return target;
}

size_t MoneroTransactionSetOutputAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bytes tx_out = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_out());
    }

    // optional bytes vouti_hmac = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->vouti_hmac());
    }

    // optional bytes out_pk = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->out_pk());
    }

    // optional bytes ecdh_info = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ecdh_info());
    }

    // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rsig_data_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionSetOutputAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionSetOutputAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionSetOutputAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
    MergeFrom(*source);
  }
}

void MoneroTransactionSetOutputAck::MergeFrom(const MoneroTransactionSetOutputAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      tx_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_out_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      vouti_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vouti_hmac_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      out_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_pk_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      ecdh_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ecdh_info_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_rsig_data()->::hw::trezor::messages::monero::MoneroTransactionRsigData::MergeFrom(from.rsig_data());
    }
  }
}

void MoneroTransactionSetOutputAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionSetOutputAck::CopyFrom(const MoneroTransactionSetOutputAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSetOutputAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionSetOutputAck::IsInitialized() const {
  return true;
}

void MoneroTransactionSetOutputAck::Swap(MoneroTransactionSetOutputAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionSetOutputAck::InternalSwap(MoneroTransactionSetOutputAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tx_out_.Swap(&other->tx_out_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vouti_hmac_.Swap(&other->vouti_hmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  out_pk_.Swap(&other->out_pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ecdh_info_.Swap(&other->ecdh_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rsig_data_, other->rsig_data_);
}

::google::protobuf::Metadata MoneroTransactionSetOutputAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionAllOutSetRequest::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionAllOutSetRequest_default_instance_._instance.get_mutable()->rsig_data_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionRsigData*>(
      ::hw::trezor::messages::monero::MoneroTransactionRsigData::internal_default_instance());
}
class MoneroTransactionAllOutSetRequest::HasBitSetters {
 public:
  static const ::hw::trezor::messages::monero::MoneroTransactionRsigData& rsig_data(const MoneroTransactionAllOutSetRequest* msg);
  static void set_has_rsig_data(MoneroTransactionAllOutSetRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionRsigData&
MoneroTransactionAllOutSetRequest::HasBitSetters::rsig_data(const MoneroTransactionAllOutSetRequest* msg) {
  return *msg->rsig_data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionAllOutSetRequest::kRsigDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionAllOutSetRequest::MoneroTransactionAllOutSetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
}
MoneroTransactionAllOutSetRequest::MoneroTransactionAllOutSetRequest(const MoneroTransactionAllOutSetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rsig_data()) {
    rsig_data_ = new ::hw::trezor::messages::monero::MoneroTransactionRsigData(*from.rsig_data_);
  } else {
    rsig_data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
}

void MoneroTransactionAllOutSetRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionAllOutSetRequest_messages_2dmonero_2eproto.base);
  rsig_data_ = nullptr;
}

MoneroTransactionAllOutSetRequest::~MoneroTransactionAllOutSetRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  SharedDtor();
}

void MoneroTransactionAllOutSetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete rsig_data_;
}

void MoneroTransactionAllOutSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionAllOutSetRequest& MoneroTransactionAllOutSetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionAllOutSetRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionAllOutSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(rsig_data_ != nullptr);
    rsig_data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionAllOutSetRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionAllOutSetRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionRsigData::_InternalParse;
        object = msg->mutable_rsig_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionAllOutSetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rsig_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionAllOutSetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::rsig_data(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
}

::google::protobuf::uint8* MoneroTransactionAllOutSetRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::rsig_data(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  return target;
}

size_t MoneroTransactionAllOutSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .hw.trezor.messages.monero.MoneroTransactionRsigData rsig_data = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rsig_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionAllOutSetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionAllOutSetRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionAllOutSetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
    MergeFrom(*source);
  }
}

void MoneroTransactionAllOutSetRequest::MergeFrom(const MoneroTransactionAllOutSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsig_data()) {
    mutable_rsig_data()->::hw::trezor::messages::monero::MoneroTransactionRsigData::MergeFrom(from.rsig_data());
  }
}

void MoneroTransactionAllOutSetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionAllOutSetRequest::CopyFrom(const MoneroTransactionAllOutSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionAllOutSetRequest::IsInitialized() const {
  return true;
}

void MoneroTransactionAllOutSetRequest::Swap(MoneroTransactionAllOutSetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionAllOutSetRequest::InternalSwap(MoneroTransactionAllOutSetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(rsig_data_, other->rsig_data_);
}

::google::protobuf::Metadata MoneroTransactionAllOutSetRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionAllOutSetAck_MoneroRingCtSig::InitAsDefaultInstance() {
}
class MoneroTransactionAllOutSetAck_MoneroRingCtSig::HasBitSetters {
 public:
  static void set_has_txn_fee(MoneroTransactionAllOutSetAck_MoneroRingCtSig* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_message(MoneroTransactionAllOutSetAck_MoneroRingCtSig* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_rv_type(MoneroTransactionAllOutSetAck_MoneroRingCtSig* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionAllOutSetAck_MoneroRingCtSig::kTxnFeeFieldNumber;
const int MoneroTransactionAllOutSetAck_MoneroRingCtSig::kMessageFieldNumber;
const int MoneroTransactionAllOutSetAck_MoneroRingCtSig::kRvTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionAllOutSetAck_MoneroRingCtSig::MoneroTransactionAllOutSetAck_MoneroRingCtSig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
}
MoneroTransactionAllOutSetAck_MoneroRingCtSig::MoneroTransactionAllOutSetAck_MoneroRingCtSig(const MoneroTransactionAllOutSetAck_MoneroRingCtSig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&txn_fee_, &from.txn_fee_,
    static_cast<size_t>(reinterpret_cast<char*>(&rv_type_) -
    reinterpret_cast<char*>(&txn_fee_)) + sizeof(rv_type_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
}

void MoneroTransactionAllOutSetAck_MoneroRingCtSig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionAllOutSetAck_MoneroRingCtSig_messages_2dmonero_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&txn_fee_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rv_type_) -
      reinterpret_cast<char*>(&txn_fee_)) + sizeof(rv_type_));
}

MoneroTransactionAllOutSetAck_MoneroRingCtSig::~MoneroTransactionAllOutSetAck_MoneroRingCtSig() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  SharedDtor();
}

void MoneroTransactionAllOutSetAck_MoneroRingCtSig::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroTransactionAllOutSetAck_MoneroRingCtSig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionAllOutSetAck_MoneroRingCtSig& MoneroTransactionAllOutSetAck_MoneroRingCtSig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionAllOutSetAck_MoneroRingCtSig_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionAllOutSetAck_MoneroRingCtSig::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&txn_fee_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rv_type_) -
        reinterpret_cast<char*>(&txn_fee_)) + sizeof(rv_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionAllOutSetAck_MoneroRingCtSig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionAllOutSetAck_MoneroRingCtSig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 txn_fee = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_txn_fee(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes message = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 rv_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_rv_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionAllOutSetAck_MoneroRingCtSig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 txn_fee = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_txn_fee(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rv_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_rv_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rv_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionAllOutSetAck_MoneroRingCtSig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_fee = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_fee(), output);
  }

  // optional bytes message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->message(), output);
  }

  // optional uint32 rv_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rv_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
}

::google::protobuf::uint8* MoneroTransactionAllOutSetAck_MoneroRingCtSig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_fee = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_fee(), target);
  }

  // optional bytes message = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->message(), target);
  }

  // optional uint32 rv_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rv_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  return target;
}

size_t MoneroTransactionAllOutSetAck_MoneroRingCtSig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes message = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->message());
    }

    // optional uint64 txn_fee = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->txn_fee());
    }

    // optional uint32 rv_type = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rv_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionAllOutSetAck_MoneroRingCtSig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionAllOutSetAck_MoneroRingCtSig* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionAllOutSetAck_MoneroRingCtSig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
    MergeFrom(*source);
  }
}

void MoneroTransactionAllOutSetAck_MoneroRingCtSig::MergeFrom(const MoneroTransactionAllOutSetAck_MoneroRingCtSig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      txn_fee_ = from.txn_fee_;
    }
    if (cached_has_bits & 0x00000004u) {
      rv_type_ = from.rv_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MoneroTransactionAllOutSetAck_MoneroRingCtSig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionAllOutSetAck_MoneroRingCtSig::CopyFrom(const MoneroTransactionAllOutSetAck_MoneroRingCtSig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionAllOutSetAck_MoneroRingCtSig::IsInitialized() const {
  return true;
}

void MoneroTransactionAllOutSetAck_MoneroRingCtSig::Swap(MoneroTransactionAllOutSetAck_MoneroRingCtSig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionAllOutSetAck_MoneroRingCtSig::InternalSwap(MoneroTransactionAllOutSetAck_MoneroRingCtSig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(txn_fee_, other->txn_fee_);
  swap(rv_type_, other->rv_type_);
}

::google::protobuf::Metadata MoneroTransactionAllOutSetAck_MoneroRingCtSig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionAllOutSetAck::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionAllOutSetAck_default_instance_._instance.get_mutable()->rv_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig*>(
      ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig::internal_default_instance());
}
class MoneroTransactionAllOutSetAck::HasBitSetters {
 public:
  static void set_has_extra(MoneroTransactionAllOutSetAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tx_prefix_hash(MoneroTransactionAllOutSetAck* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig& rv(const MoneroTransactionAllOutSetAck* msg);
  static void set_has_rv(MoneroTransactionAllOutSetAck* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_full_message_hash(MoneroTransactionAllOutSetAck* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig&
MoneroTransactionAllOutSetAck::HasBitSetters::rv(const MoneroTransactionAllOutSetAck* msg) {
  return *msg->rv_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionAllOutSetAck::kExtraFieldNumber;
const int MoneroTransactionAllOutSetAck::kTxPrefixHashFieldNumber;
const int MoneroTransactionAllOutSetAck::kRvFieldNumber;
const int MoneroTransactionAllOutSetAck::kFullMessageHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionAllOutSetAck::MoneroTransactionAllOutSetAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
}
MoneroTransactionAllOutSetAck::MoneroTransactionAllOutSetAck(const MoneroTransactionAllOutSetAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_extra()) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  tx_prefix_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_prefix_hash()) {
    tx_prefix_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_prefix_hash_);
  }
  full_message_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_full_message_hash()) {
    full_message_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_message_hash_);
  }
  if (from.has_rv()) {
    rv_ = new ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig(*from.rv_);
  } else {
    rv_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
}

void MoneroTransactionAllOutSetAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionAllOutSetAck_messages_2dmonero_2eproto.base);
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_prefix_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_message_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rv_ = nullptr;
}

MoneroTransactionAllOutSetAck::~MoneroTransactionAllOutSetAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  SharedDtor();
}

void MoneroTransactionAllOutSetAck::SharedDtor() {
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_prefix_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_message_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rv_;
}

void MoneroTransactionAllOutSetAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionAllOutSetAck& MoneroTransactionAllOutSetAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionAllOutSetAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionAllOutSetAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      extra_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      tx_prefix_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      full_message_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(rv_ != nullptr);
      rv_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionAllOutSetAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionAllOutSetAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes extra = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_extra();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes tx_prefix_hash = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_tx_prefix_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig rv = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig::_InternalParse;
        object = msg->mutable_rv();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional bytes full_message_hash = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_full_message_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionAllOutSetAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes extra = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_prefix_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_prefix_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig rv = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes full_message_hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_full_message_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionAllOutSetAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes extra = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->extra(), output);
  }

  // optional bytes tx_prefix_hash = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->tx_prefix_hash(), output);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig rv = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::rv(this), output);
  }

  // optional bytes full_message_hash = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->full_message_hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
}

::google::protobuf::uint8* MoneroTransactionAllOutSetAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes extra = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->extra(), target);
  }

  // optional bytes tx_prefix_hash = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->tx_prefix_hash(), target);
  }

  // optional .hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig rv = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::rv(this), target);
  }

  // optional bytes full_message_hash = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->full_message_hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  return target;
}

size_t MoneroTransactionAllOutSetAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bytes extra = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->extra());
    }

    // optional bytes tx_prefix_hash = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_prefix_hash());
    }

    // optional bytes full_message_hash = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->full_message_hash());
    }

    // optional .hw.trezor.messages.monero.MoneroTransactionAllOutSetAck.MoneroRingCtSig rv = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rv_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionAllOutSetAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionAllOutSetAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionAllOutSetAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
    MergeFrom(*source);
  }
}

void MoneroTransactionAllOutSetAck::MergeFrom(const MoneroTransactionAllOutSetAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      tx_prefix_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_prefix_hash_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      full_message_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_message_hash_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_rv()->::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig::MergeFrom(from.rv());
    }
  }
}

void MoneroTransactionAllOutSetAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionAllOutSetAck::CopyFrom(const MoneroTransactionAllOutSetAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionAllOutSetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionAllOutSetAck::IsInitialized() const {
  return true;
}

void MoneroTransactionAllOutSetAck::Swap(MoneroTransactionAllOutSetAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionAllOutSetAck::InternalSwap(MoneroTransactionAllOutSetAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  extra_.Swap(&other->extra_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tx_prefix_hash_.Swap(&other->tx_prefix_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  full_message_hash_.Swap(&other->full_message_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rv_, other->rv_);
}

::google::protobuf::Metadata MoneroTransactionAllOutSetAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionSignInputRequest::InitAsDefaultInstance() {
  ::hw::trezor::messages::monero::_MoneroTransactionSignInputRequest_default_instance_._instance.get_mutable()->src_entr_ = const_cast< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry*>(
      ::hw::trezor::messages::monero::MoneroTransactionSourceEntry::internal_default_instance());
}
class MoneroTransactionSignInputRequest::HasBitSetters {
 public:
  static const ::hw::trezor::messages::monero::MoneroTransactionSourceEntry& src_entr(const MoneroTransactionSignInputRequest* msg);
  static void set_has_src_entr(MoneroTransactionSignInputRequest* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_vini(MoneroTransactionSignInputRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_vini_hmac(MoneroTransactionSignInputRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pseudo_out(MoneroTransactionSignInputRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pseudo_out_hmac(MoneroTransactionSignInputRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pseudo_out_alpha(MoneroTransactionSignInputRequest* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_spend_key(MoneroTransactionSignInputRequest* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

const ::hw::trezor::messages::monero::MoneroTransactionSourceEntry&
MoneroTransactionSignInputRequest::HasBitSetters::src_entr(const MoneroTransactionSignInputRequest* msg) {
  return *msg->src_entr_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionSignInputRequest::kSrcEntrFieldNumber;
const int MoneroTransactionSignInputRequest::kViniFieldNumber;
const int MoneroTransactionSignInputRequest::kViniHmacFieldNumber;
const int MoneroTransactionSignInputRequest::kPseudoOutFieldNumber;
const int MoneroTransactionSignInputRequest::kPseudoOutHmacFieldNumber;
const int MoneroTransactionSignInputRequest::kPseudoOutAlphaFieldNumber;
const int MoneroTransactionSignInputRequest::kSpendKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionSignInputRequest::MoneroTransactionSignInputRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
}
MoneroTransactionSignInputRequest::MoneroTransactionSignInputRequest(const MoneroTransactionSignInputRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vini_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vini()) {
    vini_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_);
  }
  vini_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vini_hmac()) {
    vini_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_hmac_);
  }
  pseudo_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pseudo_out()) {
    pseudo_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_);
  }
  pseudo_out_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pseudo_out_hmac()) {
    pseudo_out_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_hmac_);
  }
  pseudo_out_alpha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pseudo_out_alpha()) {
    pseudo_out_alpha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_alpha_);
  }
  spend_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_spend_key()) {
    spend_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spend_key_);
  }
  if (from.has_src_entr()) {
    src_entr_ = new ::hw::trezor::messages::monero::MoneroTransactionSourceEntry(*from.src_entr_);
  } else {
    src_entr_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
}

void MoneroTransactionSignInputRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionSignInputRequest_messages_2dmonero_2eproto.base);
  vini_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vini_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_hmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_alpha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spend_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_entr_ = nullptr;
}

MoneroTransactionSignInputRequest::~MoneroTransactionSignInputRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  SharedDtor();
}

void MoneroTransactionSignInputRequest::SharedDtor() {
  vini_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vini_hmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_hmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseudo_out_alpha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spend_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete src_entr_;
}

void MoneroTransactionSignInputRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionSignInputRequest& MoneroTransactionSignInputRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionSignInputRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionSignInputRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      vini_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      vini_hmac_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      pseudo_out_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      pseudo_out_hmac_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      pseudo_out_alpha_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      spend_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(src_entr_ != nullptr);
      src_entr_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionSignInputRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionSignInputRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::monero::MoneroTransactionSourceEntry::_InternalParse;
        object = msg->mutable_src_entr();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional bytes vini = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_vini();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes vini_hmac = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_vini_hmac();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes pseudo_out = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pseudo_out();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes pseudo_out_hmac = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pseudo_out_hmac();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes pseudo_out_alpha = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pseudo_out_alpha();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes spend_key = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_spend_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionSignInputRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_src_entr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes vini = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vini()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes vini_hmac = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vini_hmac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pseudo_out = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pseudo_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pseudo_out_hmac = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pseudo_out_hmac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pseudo_out_alpha = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pseudo_out_alpha()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes spend_key = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_spend_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionSignInputRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::src_entr(this), output);
  }

  // optional bytes vini = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->vini(), output);
  }

  // optional bytes vini_hmac = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->vini_hmac(), output);
  }

  // optional bytes pseudo_out = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pseudo_out(), output);
  }

  // optional bytes pseudo_out_hmac = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->pseudo_out_hmac(), output);
  }

  // optional bytes pseudo_out_alpha = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->pseudo_out_alpha(), output);
  }

  // optional bytes spend_key = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->spend_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
}

::google::protobuf::uint8* MoneroTransactionSignInputRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::src_entr(this), target);
  }

  // optional bytes vini = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->vini(), target);
  }

  // optional bytes vini_hmac = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->vini_hmac(), target);
  }

  // optional bytes pseudo_out = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pseudo_out(), target);
  }

  // optional bytes pseudo_out_hmac = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->pseudo_out_hmac(), target);
  }

  // optional bytes pseudo_out_alpha = 6;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->pseudo_out_alpha(), target);
  }

  // optional bytes spend_key = 7;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->spend_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  return target;
}

size_t MoneroTransactionSignInputRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes vini = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->vini());
    }

    // optional bytes vini_hmac = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->vini_hmac());
    }

    // optional bytes pseudo_out = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pseudo_out());
    }

    // optional bytes pseudo_out_hmac = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pseudo_out_hmac());
    }

    // optional bytes pseudo_out_alpha = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pseudo_out_alpha());
    }

    // optional bytes spend_key = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->spend_key());
    }

    // optional .hw.trezor.messages.monero.MoneroTransactionSourceEntry src_entr = 1;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *src_entr_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionSignInputRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionSignInputRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionSignInputRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
    MergeFrom(*source);
  }
}

void MoneroTransactionSignInputRequest::MergeFrom(const MoneroTransactionSignInputRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      vini_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      vini_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vini_hmac_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      pseudo_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      pseudo_out_hmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_hmac_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      pseudo_out_alpha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseudo_out_alpha_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      spend_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spend_key_);
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_src_entr()->::hw::trezor::messages::monero::MoneroTransactionSourceEntry::MergeFrom(from.src_entr());
    }
  }
}

void MoneroTransactionSignInputRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionSignInputRequest::CopyFrom(const MoneroTransactionSignInputRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSignInputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionSignInputRequest::IsInitialized() const {
  return true;
}

void MoneroTransactionSignInputRequest::Swap(MoneroTransactionSignInputRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionSignInputRequest::InternalSwap(MoneroTransactionSignInputRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  vini_.Swap(&other->vini_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vini_hmac_.Swap(&other->vini_hmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pseudo_out_.Swap(&other->pseudo_out_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pseudo_out_hmac_.Swap(&other->pseudo_out_hmac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pseudo_out_alpha_.Swap(&other->pseudo_out_alpha_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  spend_key_.Swap(&other->spend_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(src_entr_, other->src_entr_);
}

::google::protobuf::Metadata MoneroTransactionSignInputRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionSignInputAck::InitAsDefaultInstance() {
}
class MoneroTransactionSignInputAck::HasBitSetters {
 public:
  static void set_has_signature(MoneroTransactionSignInputAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionSignInputAck::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionSignInputAck::MoneroTransactionSignInputAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
}
MoneroTransactionSignInputAck::MoneroTransactionSignInputAck(const MoneroTransactionSignInputAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
}

void MoneroTransactionSignInputAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionSignInputAck_messages_2dmonero_2eproto.base);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroTransactionSignInputAck::~MoneroTransactionSignInputAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  SharedDtor();
}

void MoneroTransactionSignInputAck::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroTransactionSignInputAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionSignInputAck& MoneroTransactionSignInputAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionSignInputAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionSignInputAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    signature_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionSignInputAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionSignInputAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes signature = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionSignInputAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionSignInputAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes signature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
}

::google::protobuf::uint8* MoneroTransactionSignInputAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes signature = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  return target;
}

size_t MoneroTransactionSignInputAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes signature = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionSignInputAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionSignInputAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionSignInputAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
    MergeFrom(*source);
  }
}

void MoneroTransactionSignInputAck::MergeFrom(const MoneroTransactionSignInputAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_signature()) {
    _has_bits_[0] |= 0x00000001u;
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void MoneroTransactionSignInputAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionSignInputAck::CopyFrom(const MoneroTransactionSignInputAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionSignInputAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionSignInputAck::IsInitialized() const {
  return true;
}

void MoneroTransactionSignInputAck::Swap(MoneroTransactionSignInputAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionSignInputAck::InternalSwap(MoneroTransactionSignInputAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroTransactionSignInputAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionFinalRequest::InitAsDefaultInstance() {
}
class MoneroTransactionFinalRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionFinalRequest::MoneroTransactionFinalRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
}
MoneroTransactionFinalRequest::MoneroTransactionFinalRequest(const MoneroTransactionFinalRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
}

void MoneroTransactionFinalRequest::SharedCtor() {
}

MoneroTransactionFinalRequest::~MoneroTransactionFinalRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  SharedDtor();
}

void MoneroTransactionFinalRequest::SharedDtor() {
}

void MoneroTransactionFinalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionFinalRequest& MoneroTransactionFinalRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionFinalRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionFinalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionFinalRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionFinalRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionFinalRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionFinalRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
}

::google::protobuf::uint8* MoneroTransactionFinalRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  return target;
}

size_t MoneroTransactionFinalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionFinalRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionFinalRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionFinalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
    MergeFrom(*source);
  }
}

void MoneroTransactionFinalRequest::MergeFrom(const MoneroTransactionFinalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MoneroTransactionFinalRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionFinalRequest::CopyFrom(const MoneroTransactionFinalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionFinalRequest::IsInitialized() const {
  return true;
}

void MoneroTransactionFinalRequest::Swap(MoneroTransactionFinalRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionFinalRequest::InternalSwap(MoneroTransactionFinalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata MoneroTransactionFinalRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroTransactionFinalAck::InitAsDefaultInstance() {
}
class MoneroTransactionFinalAck::HasBitSetters {
 public:
  static void set_has_cout_key(MoneroTransactionFinalAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_salt(MoneroTransactionFinalAck* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_rand_mult(MoneroTransactionFinalAck* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_tx_enc_keys(MoneroTransactionFinalAck* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroTransactionFinalAck::kCoutKeyFieldNumber;
const int MoneroTransactionFinalAck::kSaltFieldNumber;
const int MoneroTransactionFinalAck::kRandMultFieldNumber;
const int MoneroTransactionFinalAck::kTxEncKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroTransactionFinalAck::MoneroTransactionFinalAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroTransactionFinalAck)
}
MoneroTransactionFinalAck::MoneroTransactionFinalAck(const MoneroTransactionFinalAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cout_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cout_key()) {
    cout_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cout_key_);
  }
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_salt()) {
    salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
  }
  rand_mult_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rand_mult()) {
    rand_mult_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rand_mult_);
  }
  tx_enc_keys_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_enc_keys()) {
    tx_enc_keys_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_enc_keys_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroTransactionFinalAck)
}

void MoneroTransactionFinalAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroTransactionFinalAck_messages_2dmonero_2eproto.base);
  cout_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rand_mult_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_enc_keys_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroTransactionFinalAck::~MoneroTransactionFinalAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  SharedDtor();
}

void MoneroTransactionFinalAck::SharedDtor() {
  cout_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rand_mult_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_enc_keys_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroTransactionFinalAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroTransactionFinalAck& MoneroTransactionFinalAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroTransactionFinalAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroTransactionFinalAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      cout_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      salt_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      rand_mult_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      tx_enc_keys_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroTransactionFinalAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroTransactionFinalAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes cout_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_cout_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes salt = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_salt();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes rand_mult = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_rand_mult();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes tx_enc_keys = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_tx_enc_keys();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroTransactionFinalAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes cout_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cout_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes salt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_salt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes rand_mult = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rand_mult()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_enc_keys = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_enc_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroTransactionFinalAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes cout_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->cout_key(), output);
  }

  // optional bytes salt = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->salt(), output);
  }

  // optional bytes rand_mult = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->rand_mult(), output);
  }

  // optional bytes tx_enc_keys = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->tx_enc_keys(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroTransactionFinalAck)
}

::google::protobuf::uint8* MoneroTransactionFinalAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes cout_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->cout_key(), target);
  }

  // optional bytes salt = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->salt(), target);
  }

  // optional bytes rand_mult = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->rand_mult(), target);
  }

  // optional bytes tx_enc_keys = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->tx_enc_keys(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  return target;
}

size_t MoneroTransactionFinalAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bytes cout_key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->cout_key());
    }

    // optional bytes salt = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->salt());
    }

    // optional bytes rand_mult = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->rand_mult());
    }

    // optional bytes tx_enc_keys = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_enc_keys());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroTransactionFinalAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroTransactionFinalAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroTransactionFinalAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroTransactionFinalAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroTransactionFinalAck)
    MergeFrom(*source);
  }
}

void MoneroTransactionFinalAck::MergeFrom(const MoneroTransactionFinalAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      cout_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cout_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      rand_mult_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rand_mult_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      tx_enc_keys_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_enc_keys_);
    }
  }
}

void MoneroTransactionFinalAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroTransactionFinalAck::CopyFrom(const MoneroTransactionFinalAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroTransactionFinalAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroTransactionFinalAck::IsInitialized() const {
  return true;
}

void MoneroTransactionFinalAck::Swap(MoneroTransactionFinalAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroTransactionFinalAck::InternalSwap(MoneroTransactionFinalAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  cout_key_.Swap(&other->cout_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  salt_.Swap(&other->salt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rand_mult_.Swap(&other->rand_mult_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tx_enc_keys_.Swap(&other->tx_enc_keys_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroTransactionFinalAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::InitAsDefaultInstance() {
}
class MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::HasBitSetters {
 public:
  static void set_has_account(MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::kAccountFieldNumber;
const int MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::kMinorIndicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
}
MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList(const MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      minor_indices_(from.minor_indices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_ = from.account_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
}

void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::SharedCtor() {
  account_ = 0u;
}

MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::~MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  SharedDtor();
}

void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::SharedDtor() {
}

void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList& MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  minor_indices_.Clear();
  account_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 minor_indices = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_minor_indices(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_minor_indices();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 minor_indices = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_minor_indices())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_minor_indices())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account(), output);
  }

  // repeated uint32 minor_indices = 2;
  for (int i = 0, n = this->minor_indices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->minor_indices(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
}

::google::protobuf::uint8* MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account(), target);
  }

  // repeated uint32 minor_indices = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->minor_indices_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  return target;
}

size_t MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 minor_indices = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->minor_indices_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->minor_indices_size());
    total_size += data_size;
  }

  // optional uint32 account = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
    MergeFrom(*source);
  }
}

void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::MergeFrom(const MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  minor_indices_.MergeFrom(from.minor_indices_);
  if (from.has_account()) {
    set_account(from.account());
  }
}

void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::CopyFrom(const MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::IsInitialized() const {
  return true;
}

void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::Swap(MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::InternalSwap(MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  minor_indices_.InternalSwap(&other->minor_indices_);
  swap(account_, other->account_);
}

::google::protobuf::Metadata MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroKeyImageExportInitRequest::InitAsDefaultInstance() {
}
class MoneroKeyImageExportInitRequest::HasBitSetters {
 public:
  static void set_has_num(MoneroKeyImageExportInitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_hash(MoneroKeyImageExportInitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_network_type(MoneroKeyImageExportInitRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroKeyImageExportInitRequest::kNumFieldNumber;
const int MoneroKeyImageExportInitRequest::kHashFieldNumber;
const int MoneroKeyImageExportInitRequest::kAddressNFieldNumber;
const int MoneroKeyImageExportInitRequest::kNetworkTypeFieldNumber;
const int MoneroKeyImageExportInitRequest::kSubsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroKeyImageExportInitRequest::MoneroKeyImageExportInitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
}
MoneroKeyImageExportInitRequest::MoneroKeyImageExportInitRequest(const MoneroKeyImageExportInitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_),
      subs_(from.subs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hash()) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  ::memcpy(&num_, &from.num_,
    static_cast<size_t>(reinterpret_cast<char*>(&network_type_) -
    reinterpret_cast<char*>(&num_)) + sizeof(network_type_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
}

void MoneroKeyImageExportInitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroKeyImageExportInitRequest_messages_2dmonero_2eproto.base);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&network_type_) -
      reinterpret_cast<char*>(&num_)) + sizeof(network_type_));
}

MoneroKeyImageExportInitRequest::~MoneroKeyImageExportInitRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  SharedDtor();
}

void MoneroKeyImageExportInitRequest::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroKeyImageExportInitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroKeyImageExportInitRequest& MoneroKeyImageExportInitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroKeyImageExportInitRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroKeyImageExportInitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  subs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    hash_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&network_type_) -
        reinterpret_cast<char*>(&num_)) + sizeof(network_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroKeyImageExportInitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroKeyImageExportInitRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 num = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes hash = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated uint32 address_n = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 24) {
          do {
            msg->add_address_n(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_address_n();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 network_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_network_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList subs = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList::_InternalParse;
          object = msg->add_subs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroKeyImageExportInitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_num(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 address_n = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_address_n())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 network_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_network_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList subs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_subs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroKeyImageExportInitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 num = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->num(), output);
  }

  // optional bytes hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->hash(), output);
  }

  // repeated uint32 address_n = 3;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->address_n(i), output);
  }

  // optional uint32 network_type = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->network_type(), output);
  }

  // repeated .hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList subs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->subs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
}

::google::protobuf::uint8* MoneroKeyImageExportInitRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 num = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->num(), target);
  }

  // optional bytes hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->hash(), target);
  }

  // repeated uint32 address_n = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->address_n_, target);

  // optional uint32 network_type = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->network_type(), target);
  }

  // repeated .hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList subs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->subs(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  return target;
}

size_t MoneroKeyImageExportInitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 address_n = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  // repeated .hw.trezor.messages.monero.MoneroKeyImageExportInitRequest.MoneroSubAddressIndicesList subs = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->subs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subs(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes hash = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->hash());
    }

    // optional uint64 num = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->num());
    }

    // optional uint32 network_type = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroKeyImageExportInitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroKeyImageExportInitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroKeyImageExportInitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
    MergeFrom(*source);
  }
}

void MoneroKeyImageExportInitRequest::MergeFrom(const MoneroKeyImageExportInitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  subs_.MergeFrom(from.subs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000004u) {
      network_type_ = from.network_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MoneroKeyImageExportInitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroKeyImageExportInitRequest::CopyFrom(const MoneroKeyImageExportInitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroKeyImageExportInitRequest::IsInitialized() const {
  return true;
}

void MoneroKeyImageExportInitRequest::Swap(MoneroKeyImageExportInitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroKeyImageExportInitRequest::InternalSwap(MoneroKeyImageExportInitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  address_n_.InternalSwap(&other->address_n_);
  CastToBase(&subs_)->InternalSwap(CastToBase(&other->subs_));
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(num_, other->num_);
  swap(network_type_, other->network_type_);
}

::google::protobuf::Metadata MoneroKeyImageExportInitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroKeyImageExportInitAck::InitAsDefaultInstance() {
}
class MoneroKeyImageExportInitAck::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroKeyImageExportInitAck::MoneroKeyImageExportInitAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
}
MoneroKeyImageExportInitAck::MoneroKeyImageExportInitAck(const MoneroKeyImageExportInitAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
}

void MoneroKeyImageExportInitAck::SharedCtor() {
}

MoneroKeyImageExportInitAck::~MoneroKeyImageExportInitAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  SharedDtor();
}

void MoneroKeyImageExportInitAck::SharedDtor() {
}

void MoneroKeyImageExportInitAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroKeyImageExportInitAck& MoneroKeyImageExportInitAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroKeyImageExportInitAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroKeyImageExportInitAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroKeyImageExportInitAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroKeyImageExportInitAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroKeyImageExportInitAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroKeyImageExportInitAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
}

::google::protobuf::uint8* MoneroKeyImageExportInitAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  return target;
}

size_t MoneroKeyImageExportInitAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroKeyImageExportInitAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroKeyImageExportInitAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroKeyImageExportInitAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
    MergeFrom(*source);
  }
}

void MoneroKeyImageExportInitAck::MergeFrom(const MoneroKeyImageExportInitAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MoneroKeyImageExportInitAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroKeyImageExportInitAck::CopyFrom(const MoneroKeyImageExportInitAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageExportInitAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroKeyImageExportInitAck::IsInitialized() const {
  return true;
}

void MoneroKeyImageExportInitAck::Swap(MoneroKeyImageExportInitAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroKeyImageExportInitAck::InternalSwap(MoneroKeyImageExportInitAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata MoneroKeyImageExportInitAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::InitAsDefaultInstance() {
}
class MoneroKeyImageSyncStepRequest_MoneroTransferDetails::HasBitSetters {
 public:
  static void set_has_out_key(MoneroKeyImageSyncStepRequest_MoneroTransferDetails* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tx_pub_key(MoneroKeyImageSyncStepRequest_MoneroTransferDetails* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_internal_output_index(MoneroKeyImageSyncStepRequest_MoneroTransferDetails* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroKeyImageSyncStepRequest_MoneroTransferDetails::kOutKeyFieldNumber;
const int MoneroKeyImageSyncStepRequest_MoneroTransferDetails::kTxPubKeyFieldNumber;
const int MoneroKeyImageSyncStepRequest_MoneroTransferDetails::kAdditionalTxPubKeysFieldNumber;
const int MoneroKeyImageSyncStepRequest_MoneroTransferDetails::kInternalOutputIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroKeyImageSyncStepRequest_MoneroTransferDetails::MoneroKeyImageSyncStepRequest_MoneroTransferDetails()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
}
MoneroKeyImageSyncStepRequest_MoneroTransferDetails::MoneroKeyImageSyncStepRequest_MoneroTransferDetails(const MoneroKeyImageSyncStepRequest_MoneroTransferDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      additional_tx_pub_keys_(from.additional_tx_pub_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  out_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_out_key()) {
    out_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_key_);
  }
  tx_pub_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_pub_key()) {
    tx_pub_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_pub_key_);
  }
  internal_output_index_ = from.internal_output_index_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
}

void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroKeyImageSyncStepRequest_MoneroTransferDetails_messages_2dmonero_2eproto.base);
  out_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_pub_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_output_index_ = PROTOBUF_ULONGLONG(0);
}

MoneroKeyImageSyncStepRequest_MoneroTransferDetails::~MoneroKeyImageSyncStepRequest_MoneroTransferDetails() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  SharedDtor();
}

void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::SharedDtor() {
  out_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_pub_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroKeyImageSyncStepRequest_MoneroTransferDetails& MoneroKeyImageSyncStepRequest_MoneroTransferDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroKeyImageSyncStepRequest_MoneroTransferDetails_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additional_tx_pub_keys_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      out_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      tx_pub_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  internal_output_index_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroKeyImageSyncStepRequest_MoneroTransferDetails::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroKeyImageSyncStepRequest_MoneroTransferDetails*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes out_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_out_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes tx_pub_key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_tx_pub_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated bytes additional_tx_pub_keys = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          object = msg->add_additional_tx_pub_keys();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParser;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // optional uint64 internal_output_index = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_internal_output_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroKeyImageSyncStepRequest_MoneroTransferDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes out_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_out_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_pub_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_pub_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes additional_tx_pub_keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_additional_tx_pub_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 internal_output_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_internal_output_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &internal_output_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes out_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->out_key(), output);
  }

  // optional bytes tx_pub_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->tx_pub_key(), output);
  }

  // repeated bytes additional_tx_pub_keys = 3;
  for (int i = 0, n = this->additional_tx_pub_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->additional_tx_pub_keys(i), output);
  }

  // optional uint64 internal_output_index = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->internal_output_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
}

::google::protobuf::uint8* MoneroKeyImageSyncStepRequest_MoneroTransferDetails::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes out_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->out_key(), target);
  }

  // optional bytes tx_pub_key = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->tx_pub_key(), target);
  }

  // repeated bytes additional_tx_pub_keys = 3;
  for (int i = 0, n = this->additional_tx_pub_keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->additional_tx_pub_keys(i), target);
  }

  // optional uint64 internal_output_index = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->internal_output_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  return target;
}

size_t MoneroKeyImageSyncStepRequest_MoneroTransferDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes additional_tx_pub_keys = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->additional_tx_pub_keys_size());
  for (int i = 0, n = this->additional_tx_pub_keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->additional_tx_pub_keys(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes out_key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->out_key());
    }

    // optional bytes tx_pub_key = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_pub_key());
    }

    // optional uint64 internal_output_index = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->internal_output_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroKeyImageSyncStepRequest_MoneroTransferDetails* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroKeyImageSyncStepRequest_MoneroTransferDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
    MergeFrom(*source);
  }
}

void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::MergeFrom(const MoneroKeyImageSyncStepRequest_MoneroTransferDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  additional_tx_pub_keys_.MergeFrom(from.additional_tx_pub_keys_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      out_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      tx_pub_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_pub_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      internal_output_index_ = from.internal_output_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::CopyFrom(const MoneroKeyImageSyncStepRequest_MoneroTransferDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroKeyImageSyncStepRequest_MoneroTransferDetails::IsInitialized() const {
  return true;
}

void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::Swap(MoneroKeyImageSyncStepRequest_MoneroTransferDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroKeyImageSyncStepRequest_MoneroTransferDetails::InternalSwap(MoneroKeyImageSyncStepRequest_MoneroTransferDetails* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  additional_tx_pub_keys_.InternalSwap(CastToBase(&other->additional_tx_pub_keys_));
  out_key_.Swap(&other->out_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tx_pub_key_.Swap(&other->tx_pub_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(internal_output_index_, other->internal_output_index_);
}

::google::protobuf::Metadata MoneroKeyImageSyncStepRequest_MoneroTransferDetails::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroKeyImageSyncStepRequest::InitAsDefaultInstance() {
}
class MoneroKeyImageSyncStepRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroKeyImageSyncStepRequest::kTdisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroKeyImageSyncStepRequest::MoneroKeyImageSyncStepRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
}
MoneroKeyImageSyncStepRequest::MoneroKeyImageSyncStepRequest(const MoneroKeyImageSyncStepRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      tdis_(from.tdis_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
}

void MoneroKeyImageSyncStepRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroKeyImageSyncStepRequest_messages_2dmonero_2eproto.base);
}

MoneroKeyImageSyncStepRequest::~MoneroKeyImageSyncStepRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  SharedDtor();
}

void MoneroKeyImageSyncStepRequest::SharedDtor() {
}

void MoneroKeyImageSyncStepRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroKeyImageSyncStepRequest& MoneroKeyImageSyncStepRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroKeyImageSyncStepRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroKeyImageSyncStepRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tdis_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroKeyImageSyncStepRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroKeyImageSyncStepRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails tdis = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails::_InternalParse;
          object = msg->add_tdis();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroKeyImageSyncStepRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails tdis = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tdis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroKeyImageSyncStepRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails tdis = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tdis_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tdis(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
}

::google::protobuf::uint8* MoneroKeyImageSyncStepRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails tdis = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tdis_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tdis(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  return target;
}

size_t MoneroKeyImageSyncStepRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest.MoneroTransferDetails tdis = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tdis_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tdis(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroKeyImageSyncStepRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroKeyImageSyncStepRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroKeyImageSyncStepRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
    MergeFrom(*source);
  }
}

void MoneroKeyImageSyncStepRequest::MergeFrom(const MoneroKeyImageSyncStepRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tdis_.MergeFrom(from.tdis_);
}

void MoneroKeyImageSyncStepRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroKeyImageSyncStepRequest::CopyFrom(const MoneroKeyImageSyncStepRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroKeyImageSyncStepRequest::IsInitialized() const {
  return true;
}

void MoneroKeyImageSyncStepRequest::Swap(MoneroKeyImageSyncStepRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroKeyImageSyncStepRequest::InternalSwap(MoneroKeyImageSyncStepRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&tdis_)->InternalSwap(CastToBase(&other->tdis_));
}

::google::protobuf::Metadata MoneroKeyImageSyncStepRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::InitAsDefaultInstance() {
}
class MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::HasBitSetters {
 public:
  static void set_has_iv(MoneroKeyImageSyncStepAck_MoneroExportedKeyImage* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_blob(MoneroKeyImageSyncStepAck_MoneroExportedKeyImage* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::kIvFieldNumber;
const int MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::kBlobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
}
MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage(const MoneroKeyImageSyncStepAck_MoneroExportedKeyImage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  iv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iv()) {
    iv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iv_);
  }
  blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_blob()) {
    blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blob_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
}

void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroKeyImageSyncStepAck_MoneroExportedKeyImage_messages_2dmonero_2eproto.base);
  iv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::~MoneroKeyImageSyncStepAck_MoneroExportedKeyImage() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  SharedDtor();
}

void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::SharedDtor() {
  iv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroKeyImageSyncStepAck_MoneroExportedKeyImage& MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroKeyImageSyncStepAck_MoneroExportedKeyImage_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      iv_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      blob_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroKeyImageSyncStepAck_MoneroExportedKeyImage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes iv = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_iv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes blob = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_blob();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes iv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_iv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes blob = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_blob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes iv = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->iv(), output);
  }

  // optional bytes blob = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->blob(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
}

::google::protobuf::uint8* MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes iv = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->iv(), target);
  }

  // optional bytes blob = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->blob(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  return target;
}

size_t MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes iv = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->iv());
    }

    // optional bytes blob = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->blob());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroKeyImageSyncStepAck_MoneroExportedKeyImage* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroKeyImageSyncStepAck_MoneroExportedKeyImage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
    MergeFrom(*source);
  }
}

void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::MergeFrom(const MoneroKeyImageSyncStepAck_MoneroExportedKeyImage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      iv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iv_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blob_);
    }
  }
}

void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::CopyFrom(const MoneroKeyImageSyncStepAck_MoneroExportedKeyImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::IsInitialized() const {
  return true;
}

void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::Swap(MoneroKeyImageSyncStepAck_MoneroExportedKeyImage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::InternalSwap(MoneroKeyImageSyncStepAck_MoneroExportedKeyImage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  iv_.Swap(&other->iv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  blob_.Swap(&other->blob_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroKeyImageSyncStepAck::InitAsDefaultInstance() {
}
class MoneroKeyImageSyncStepAck::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroKeyImageSyncStepAck::kKisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroKeyImageSyncStepAck::MoneroKeyImageSyncStepAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
}
MoneroKeyImageSyncStepAck::MoneroKeyImageSyncStepAck(const MoneroKeyImageSyncStepAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      kis_(from.kis_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
}

void MoneroKeyImageSyncStepAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroKeyImageSyncStepAck_messages_2dmonero_2eproto.base);
}

MoneroKeyImageSyncStepAck::~MoneroKeyImageSyncStepAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  SharedDtor();
}

void MoneroKeyImageSyncStepAck::SharedDtor() {
}

void MoneroKeyImageSyncStepAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroKeyImageSyncStepAck& MoneroKeyImageSyncStepAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroKeyImageSyncStepAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroKeyImageSyncStepAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kis_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroKeyImageSyncStepAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroKeyImageSyncStepAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage kis = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage::_InternalParse;
          object = msg->add_kis();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroKeyImageSyncStepAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage kis = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_kis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroKeyImageSyncStepAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage kis = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kis_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->kis(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
}

::google::protobuf::uint8* MoneroKeyImageSyncStepAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage kis = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kis_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->kis(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  return target;
}

size_t MoneroKeyImageSyncStepAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.monero.MoneroKeyImageSyncStepAck.MoneroExportedKeyImage kis = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->kis_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->kis(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroKeyImageSyncStepAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroKeyImageSyncStepAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroKeyImageSyncStepAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
    MergeFrom(*source);
  }
}

void MoneroKeyImageSyncStepAck::MergeFrom(const MoneroKeyImageSyncStepAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kis_.MergeFrom(from.kis_);
}

void MoneroKeyImageSyncStepAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroKeyImageSyncStepAck::CopyFrom(const MoneroKeyImageSyncStepAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncStepAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroKeyImageSyncStepAck::IsInitialized() const {
  return true;
}

void MoneroKeyImageSyncStepAck::Swap(MoneroKeyImageSyncStepAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroKeyImageSyncStepAck::InternalSwap(MoneroKeyImageSyncStepAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&kis_)->InternalSwap(CastToBase(&other->kis_));
}

::google::protobuf::Metadata MoneroKeyImageSyncStepAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroKeyImageSyncFinalRequest::InitAsDefaultInstance() {
}
class MoneroKeyImageSyncFinalRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroKeyImageSyncFinalRequest::MoneroKeyImageSyncFinalRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
}
MoneroKeyImageSyncFinalRequest::MoneroKeyImageSyncFinalRequest(const MoneroKeyImageSyncFinalRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
}

void MoneroKeyImageSyncFinalRequest::SharedCtor() {
}

MoneroKeyImageSyncFinalRequest::~MoneroKeyImageSyncFinalRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  SharedDtor();
}

void MoneroKeyImageSyncFinalRequest::SharedDtor() {
}

void MoneroKeyImageSyncFinalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroKeyImageSyncFinalRequest& MoneroKeyImageSyncFinalRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroKeyImageSyncFinalRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroKeyImageSyncFinalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroKeyImageSyncFinalRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroKeyImageSyncFinalRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroKeyImageSyncFinalRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroKeyImageSyncFinalRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
}

::google::protobuf::uint8* MoneroKeyImageSyncFinalRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  return target;
}

size_t MoneroKeyImageSyncFinalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroKeyImageSyncFinalRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroKeyImageSyncFinalRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroKeyImageSyncFinalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
    MergeFrom(*source);
  }
}

void MoneroKeyImageSyncFinalRequest::MergeFrom(const MoneroKeyImageSyncFinalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MoneroKeyImageSyncFinalRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroKeyImageSyncFinalRequest::CopyFrom(const MoneroKeyImageSyncFinalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroKeyImageSyncFinalRequest::IsInitialized() const {
  return true;
}

void MoneroKeyImageSyncFinalRequest::Swap(MoneroKeyImageSyncFinalRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroKeyImageSyncFinalRequest::InternalSwap(MoneroKeyImageSyncFinalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata MoneroKeyImageSyncFinalRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroKeyImageSyncFinalAck::InitAsDefaultInstance() {
}
class MoneroKeyImageSyncFinalAck::HasBitSetters {
 public:
  static void set_has_enc_key(MoneroKeyImageSyncFinalAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroKeyImageSyncFinalAck::kEncKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroKeyImageSyncFinalAck::MoneroKeyImageSyncFinalAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
}
MoneroKeyImageSyncFinalAck::MoneroKeyImageSyncFinalAck(const MoneroKeyImageSyncFinalAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enc_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_enc_key()) {
    enc_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enc_key_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
}

void MoneroKeyImageSyncFinalAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroKeyImageSyncFinalAck_messages_2dmonero_2eproto.base);
  enc_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroKeyImageSyncFinalAck::~MoneroKeyImageSyncFinalAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  SharedDtor();
}

void MoneroKeyImageSyncFinalAck::SharedDtor() {
  enc_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroKeyImageSyncFinalAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroKeyImageSyncFinalAck& MoneroKeyImageSyncFinalAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroKeyImageSyncFinalAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroKeyImageSyncFinalAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enc_key_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroKeyImageSyncFinalAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroKeyImageSyncFinalAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes enc_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_enc_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroKeyImageSyncFinalAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes enc_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_enc_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroKeyImageSyncFinalAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes enc_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->enc_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
}

::google::protobuf::uint8* MoneroKeyImageSyncFinalAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes enc_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->enc_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  return target;
}

size_t MoneroKeyImageSyncFinalAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes enc_key = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->enc_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroKeyImageSyncFinalAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroKeyImageSyncFinalAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroKeyImageSyncFinalAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
    MergeFrom(*source);
  }
}

void MoneroKeyImageSyncFinalAck::MergeFrom(const MoneroKeyImageSyncFinalAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_enc_key()) {
    _has_bits_[0] |= 0x00000001u;
    enc_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enc_key_);
  }
}

void MoneroKeyImageSyncFinalAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroKeyImageSyncFinalAck::CopyFrom(const MoneroKeyImageSyncFinalAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroKeyImageSyncFinalAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroKeyImageSyncFinalAck::IsInitialized() const {
  return true;
}

void MoneroKeyImageSyncFinalAck::Swap(MoneroKeyImageSyncFinalAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroKeyImageSyncFinalAck::InternalSwap(MoneroKeyImageSyncFinalAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enc_key_.Swap(&other->enc_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroKeyImageSyncFinalAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroGetTxKeyRequest::InitAsDefaultInstance() {
}
class MoneroGetTxKeyRequest::HasBitSetters {
 public:
  static void set_has_network_type(MoneroGetTxKeyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_salt1(MoneroGetTxKeyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_salt2(MoneroGetTxKeyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_tx_enc_keys(MoneroGetTxKeyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_tx_prefix_hash(MoneroGetTxKeyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_reason(MoneroGetTxKeyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_view_public_key(MoneroGetTxKeyRequest* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroGetTxKeyRequest::kAddressNFieldNumber;
const int MoneroGetTxKeyRequest::kNetworkTypeFieldNumber;
const int MoneroGetTxKeyRequest::kSalt1FieldNumber;
const int MoneroGetTxKeyRequest::kSalt2FieldNumber;
const int MoneroGetTxKeyRequest::kTxEncKeysFieldNumber;
const int MoneroGetTxKeyRequest::kTxPrefixHashFieldNumber;
const int MoneroGetTxKeyRequest::kReasonFieldNumber;
const int MoneroGetTxKeyRequest::kViewPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroGetTxKeyRequest::MoneroGetTxKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
}
MoneroGetTxKeyRequest::MoneroGetTxKeyRequest(const MoneroGetTxKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  salt1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_salt1()) {
    salt1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt1_);
  }
  salt2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_salt2()) {
    salt2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt2_);
  }
  tx_enc_keys_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_enc_keys()) {
    tx_enc_keys_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_enc_keys_);
  }
  tx_prefix_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_prefix_hash()) {
    tx_prefix_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_prefix_hash_);
  }
  view_public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_view_public_key()) {
    view_public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_public_key_);
  }
  ::memcpy(&network_type_, &from.network_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&network_type_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
}

void MoneroGetTxKeyRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroGetTxKeyRequest_messages_2dmonero_2eproto.base);
  salt1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_enc_keys_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_prefix_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&network_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&network_type_)) + sizeof(reason_));
}

MoneroGetTxKeyRequest::~MoneroGetTxKeyRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  SharedDtor();
}

void MoneroGetTxKeyRequest::SharedDtor() {
  salt1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_enc_keys_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_prefix_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroGetTxKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroGetTxKeyRequest& MoneroGetTxKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroGetTxKeyRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroGetTxKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      salt1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      salt2_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      tx_enc_keys_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      tx_prefix_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      view_public_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000060u) {
    ::memset(&network_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reason_) -
        reinterpret_cast<char*>(&network_type_)) + sizeof(reason_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroGetTxKeyRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroGetTxKeyRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_address_n(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_address_n();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 network_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_network_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes salt1 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_salt1();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes salt2 = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_salt2();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes tx_enc_keys = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_tx_enc_keys();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes tx_prefix_hash = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_tx_prefix_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 reason = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_reason(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes view_public_key = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_view_public_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroGetTxKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 network_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_network_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes salt1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_salt1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes salt2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_salt2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_enc_keys = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_enc_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_prefix_hash = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_prefix_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 reason = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_reason(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes view_public_key = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_view_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroGetTxKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_type = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->network_type(), output);
  }

  // optional bytes salt1 = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->salt1(), output);
  }

  // optional bytes salt2 = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->salt2(), output);
  }

  // optional bytes tx_enc_keys = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->tx_enc_keys(), output);
  }

  // optional bytes tx_prefix_hash = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->tx_prefix_hash(), output);
  }

  // optional uint32 reason = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->reason(), output);
  }

  // optional bytes view_public_key = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->view_public_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
}

::google::protobuf::uint8* MoneroGetTxKeyRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_type = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->network_type(), target);
  }

  // optional bytes salt1 = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->salt1(), target);
  }

  // optional bytes salt2 = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->salt2(), target);
  }

  // optional bytes tx_enc_keys = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->tx_enc_keys(), target);
  }

  // optional bytes tx_prefix_hash = 6;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->tx_prefix_hash(), target);
  }

  // optional uint32 reason = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->reason(), target);
  }

  // optional bytes view_public_key = 8;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->view_public_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  return target;
}

size_t MoneroGetTxKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes salt1 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->salt1());
    }

    // optional bytes salt2 = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->salt2());
    }

    // optional bytes tx_enc_keys = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_enc_keys());
    }

    // optional bytes tx_prefix_hash = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_prefix_hash());
    }

    // optional bytes view_public_key = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->view_public_key());
    }

    // optional uint32 network_type = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_type());
    }

    // optional uint32 reason = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reason());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroGetTxKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroGetTxKeyRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroGetTxKeyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
    MergeFrom(*source);
  }
}

void MoneroGetTxKeyRequest::MergeFrom(const MoneroGetTxKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      salt1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt1_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      salt2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt2_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      tx_enc_keys_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_enc_keys_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      tx_prefix_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_prefix_hash_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      view_public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_public_key_);
    }
    if (cached_has_bits & 0x00000020u) {
      network_type_ = from.network_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      reason_ = from.reason_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MoneroGetTxKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroGetTxKeyRequest::CopyFrom(const MoneroGetTxKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroGetTxKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroGetTxKeyRequest::IsInitialized() const {
  return true;
}

void MoneroGetTxKeyRequest::Swap(MoneroGetTxKeyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroGetTxKeyRequest::InternalSwap(MoneroGetTxKeyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  address_n_.InternalSwap(&other->address_n_);
  salt1_.Swap(&other->salt1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  salt2_.Swap(&other->salt2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tx_enc_keys_.Swap(&other->tx_enc_keys_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tx_prefix_hash_.Swap(&other->tx_prefix_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  view_public_key_.Swap(&other->view_public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(network_type_, other->network_type_);
  swap(reason_, other->reason_);
}

::google::protobuf::Metadata MoneroGetTxKeyRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroGetTxKeyAck::InitAsDefaultInstance() {
}
class MoneroGetTxKeyAck::HasBitSetters {
 public:
  static void set_has_salt(MoneroGetTxKeyAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tx_keys(MoneroGetTxKeyAck* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_tx_derivations(MoneroGetTxKeyAck* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroGetTxKeyAck::kSaltFieldNumber;
const int MoneroGetTxKeyAck::kTxKeysFieldNumber;
const int MoneroGetTxKeyAck::kTxDerivationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroGetTxKeyAck::MoneroGetTxKeyAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroGetTxKeyAck)
}
MoneroGetTxKeyAck::MoneroGetTxKeyAck(const MoneroGetTxKeyAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_salt()) {
    salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
  }
  tx_keys_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_keys()) {
    tx_keys_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_keys_);
  }
  tx_derivations_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_derivations()) {
    tx_derivations_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_derivations_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroGetTxKeyAck)
}

void MoneroGetTxKeyAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroGetTxKeyAck_messages_2dmonero_2eproto.base);
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_keys_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_derivations_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroGetTxKeyAck::~MoneroGetTxKeyAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  SharedDtor();
}

void MoneroGetTxKeyAck::SharedDtor() {
  salt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_keys_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tx_derivations_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroGetTxKeyAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroGetTxKeyAck& MoneroGetTxKeyAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroGetTxKeyAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroGetTxKeyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      salt_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      tx_keys_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      tx_derivations_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroGetTxKeyAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroGetTxKeyAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes salt = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_salt();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes tx_keys = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_tx_keys();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes tx_derivations = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_tx_derivations();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroGetTxKeyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes salt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_salt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tx_derivations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_derivations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroGetTxKeyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes salt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->salt(), output);
  }

  // optional bytes tx_keys = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->tx_keys(), output);
  }

  // optional bytes tx_derivations = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->tx_derivations(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroGetTxKeyAck)
}

::google::protobuf::uint8* MoneroGetTxKeyAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes salt = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->salt(), target);
  }

  // optional bytes tx_keys = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->tx_keys(), target);
  }

  // optional bytes tx_derivations = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->tx_derivations(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  return target;
}

size_t MoneroGetTxKeyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes salt = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->salt());
    }

    // optional bytes tx_keys = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_keys());
    }

    // optional bytes tx_derivations = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_derivations());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroGetTxKeyAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroGetTxKeyAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroGetTxKeyAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroGetTxKeyAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroGetTxKeyAck)
    MergeFrom(*source);
  }
}

void MoneroGetTxKeyAck::MergeFrom(const MoneroGetTxKeyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      tx_keys_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_keys_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      tx_derivations_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_derivations_);
    }
  }
}

void MoneroGetTxKeyAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroGetTxKeyAck::CopyFrom(const MoneroGetTxKeyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroGetTxKeyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroGetTxKeyAck::IsInitialized() const {
  return true;
}

void MoneroGetTxKeyAck::Swap(MoneroGetTxKeyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroGetTxKeyAck::InternalSwap(MoneroGetTxKeyAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  salt_.Swap(&other->salt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tx_keys_.Swap(&other->tx_keys_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tx_derivations_.Swap(&other->tx_derivations_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroGetTxKeyAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroLiveRefreshStartRequest::InitAsDefaultInstance() {
}
class MoneroLiveRefreshStartRequest::HasBitSetters {
 public:
  static void set_has_network_type(MoneroLiveRefreshStartRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroLiveRefreshStartRequest::kAddressNFieldNumber;
const int MoneroLiveRefreshStartRequest::kNetworkTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroLiveRefreshStartRequest::MoneroLiveRefreshStartRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
}
MoneroLiveRefreshStartRequest::MoneroLiveRefreshStartRequest(const MoneroLiveRefreshStartRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_type_ = from.network_type_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
}

void MoneroLiveRefreshStartRequest::SharedCtor() {
  network_type_ = 0u;
}

MoneroLiveRefreshStartRequest::~MoneroLiveRefreshStartRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  SharedDtor();
}

void MoneroLiveRefreshStartRequest::SharedDtor() {
}

void MoneroLiveRefreshStartRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroLiveRefreshStartRequest& MoneroLiveRefreshStartRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroLiveRefreshStartRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroLiveRefreshStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  network_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroLiveRefreshStartRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroLiveRefreshStartRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_address_n(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_address_n();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 network_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_network_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroLiveRefreshStartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 network_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_network_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroLiveRefreshStartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->network_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
}

::google::protobuf::uint8* MoneroLiveRefreshStartRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_type = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->network_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  return target;
}

size_t MoneroLiveRefreshStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  // optional uint32 network_type = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->network_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroLiveRefreshStartRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroLiveRefreshStartRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroLiveRefreshStartRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
    MergeFrom(*source);
  }
}

void MoneroLiveRefreshStartRequest::MergeFrom(const MoneroLiveRefreshStartRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  if (from.has_network_type()) {
    set_network_type(from.network_type());
  }
}

void MoneroLiveRefreshStartRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroLiveRefreshStartRequest::CopyFrom(const MoneroLiveRefreshStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroLiveRefreshStartRequest::IsInitialized() const {
  return true;
}

void MoneroLiveRefreshStartRequest::Swap(MoneroLiveRefreshStartRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroLiveRefreshStartRequest::InternalSwap(MoneroLiveRefreshStartRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  address_n_.InternalSwap(&other->address_n_);
  swap(network_type_, other->network_type_);
}

::google::protobuf::Metadata MoneroLiveRefreshStartRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroLiveRefreshStartAck::InitAsDefaultInstance() {
}
class MoneroLiveRefreshStartAck::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroLiveRefreshStartAck::MoneroLiveRefreshStartAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
}
MoneroLiveRefreshStartAck::MoneroLiveRefreshStartAck(const MoneroLiveRefreshStartAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
}

void MoneroLiveRefreshStartAck::SharedCtor() {
}

MoneroLiveRefreshStartAck::~MoneroLiveRefreshStartAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  SharedDtor();
}

void MoneroLiveRefreshStartAck::SharedDtor() {
}

void MoneroLiveRefreshStartAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroLiveRefreshStartAck& MoneroLiveRefreshStartAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroLiveRefreshStartAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroLiveRefreshStartAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroLiveRefreshStartAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroLiveRefreshStartAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroLiveRefreshStartAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroLiveRefreshStartAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
}

::google::protobuf::uint8* MoneroLiveRefreshStartAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  return target;
}

size_t MoneroLiveRefreshStartAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroLiveRefreshStartAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroLiveRefreshStartAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroLiveRefreshStartAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
    MergeFrom(*source);
  }
}

void MoneroLiveRefreshStartAck::MergeFrom(const MoneroLiveRefreshStartAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MoneroLiveRefreshStartAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroLiveRefreshStartAck::CopyFrom(const MoneroLiveRefreshStartAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStartAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroLiveRefreshStartAck::IsInitialized() const {
  return true;
}

void MoneroLiveRefreshStartAck::Swap(MoneroLiveRefreshStartAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroLiveRefreshStartAck::InternalSwap(MoneroLiveRefreshStartAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata MoneroLiveRefreshStartAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroLiveRefreshStepRequest::InitAsDefaultInstance() {
}
class MoneroLiveRefreshStepRequest::HasBitSetters {
 public:
  static void set_has_out_key(MoneroLiveRefreshStepRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_recv_deriv(MoneroLiveRefreshStepRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_real_out_idx(MoneroLiveRefreshStepRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_sub_addr_major(MoneroLiveRefreshStepRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_sub_addr_minor(MoneroLiveRefreshStepRequest* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroLiveRefreshStepRequest::kOutKeyFieldNumber;
const int MoneroLiveRefreshStepRequest::kRecvDerivFieldNumber;
const int MoneroLiveRefreshStepRequest::kRealOutIdxFieldNumber;
const int MoneroLiveRefreshStepRequest::kSubAddrMajorFieldNumber;
const int MoneroLiveRefreshStepRequest::kSubAddrMinorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroLiveRefreshStepRequest::MoneroLiveRefreshStepRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
}
MoneroLiveRefreshStepRequest::MoneroLiveRefreshStepRequest(const MoneroLiveRefreshStepRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  out_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_out_key()) {
    out_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_key_);
  }
  recv_deriv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recv_deriv()) {
    recv_deriv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recv_deriv_);
  }
  ::memcpy(&real_out_idx_, &from.real_out_idx_,
    static_cast<size_t>(reinterpret_cast<char*>(&sub_addr_minor_) -
    reinterpret_cast<char*>(&real_out_idx_)) + sizeof(sub_addr_minor_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
}

void MoneroLiveRefreshStepRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroLiveRefreshStepRequest_messages_2dmonero_2eproto.base);
  out_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recv_deriv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&real_out_idx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sub_addr_minor_) -
      reinterpret_cast<char*>(&real_out_idx_)) + sizeof(sub_addr_minor_));
}

MoneroLiveRefreshStepRequest::~MoneroLiveRefreshStepRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  SharedDtor();
}

void MoneroLiveRefreshStepRequest::SharedDtor() {
  out_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recv_deriv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroLiveRefreshStepRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroLiveRefreshStepRequest& MoneroLiveRefreshStepRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroLiveRefreshStepRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroLiveRefreshStepRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      out_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      recv_deriv_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&real_out_idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sub_addr_minor_) -
        reinterpret_cast<char*>(&real_out_idx_)) + sizeof(sub_addr_minor_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroLiveRefreshStepRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroLiveRefreshStepRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes out_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_out_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes recv_deriv = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_recv_deriv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint64 real_out_idx = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_real_out_idx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 sub_addr_major = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_sub_addr_major(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 sub_addr_minor = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_sub_addr_minor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroLiveRefreshStepRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes out_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_out_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes recv_deriv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_recv_deriv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 real_out_idx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_real_out_idx(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &real_out_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sub_addr_major = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_sub_addr_major(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sub_addr_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sub_addr_minor = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_sub_addr_minor(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sub_addr_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroLiveRefreshStepRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes out_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->out_key(), output);
  }

  // optional bytes recv_deriv = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->recv_deriv(), output);
  }

  // optional uint64 real_out_idx = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->real_out_idx(), output);
  }

  // optional uint32 sub_addr_major = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sub_addr_major(), output);
  }

  // optional uint32 sub_addr_minor = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sub_addr_minor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
}

::google::protobuf::uint8* MoneroLiveRefreshStepRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes out_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->out_key(), target);
  }

  // optional bytes recv_deriv = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->recv_deriv(), target);
  }

  // optional uint64 real_out_idx = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->real_out_idx(), target);
  }

  // optional uint32 sub_addr_major = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sub_addr_major(), target);
  }

  // optional uint32 sub_addr_minor = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sub_addr_minor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  return target;
}

size_t MoneroLiveRefreshStepRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bytes out_key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->out_key());
    }

    // optional bytes recv_deriv = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->recv_deriv());
    }

    // optional uint64 real_out_idx = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->real_out_idx());
    }

    // optional uint32 sub_addr_major = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sub_addr_major());
    }

    // optional uint32 sub_addr_minor = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sub_addr_minor());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroLiveRefreshStepRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroLiveRefreshStepRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroLiveRefreshStepRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
    MergeFrom(*source);
  }
}

void MoneroLiveRefreshStepRequest::MergeFrom(const MoneroLiveRefreshStepRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      out_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.out_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      recv_deriv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recv_deriv_);
    }
    if (cached_has_bits & 0x00000004u) {
      real_out_idx_ = from.real_out_idx_;
    }
    if (cached_has_bits & 0x00000008u) {
      sub_addr_major_ = from.sub_addr_major_;
    }
    if (cached_has_bits & 0x00000010u) {
      sub_addr_minor_ = from.sub_addr_minor_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MoneroLiveRefreshStepRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroLiveRefreshStepRequest::CopyFrom(const MoneroLiveRefreshStepRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStepRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroLiveRefreshStepRequest::IsInitialized() const {
  return true;
}

void MoneroLiveRefreshStepRequest::Swap(MoneroLiveRefreshStepRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroLiveRefreshStepRequest::InternalSwap(MoneroLiveRefreshStepRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  out_key_.Swap(&other->out_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recv_deriv_.Swap(&other->recv_deriv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(real_out_idx_, other->real_out_idx_);
  swap(sub_addr_major_, other->sub_addr_major_);
  swap(sub_addr_minor_, other->sub_addr_minor_);
}

::google::protobuf::Metadata MoneroLiveRefreshStepRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroLiveRefreshStepAck::InitAsDefaultInstance() {
}
class MoneroLiveRefreshStepAck::HasBitSetters {
 public:
  static void set_has_salt(MoneroLiveRefreshStepAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_key_image(MoneroLiveRefreshStepAck* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneroLiveRefreshStepAck::kSaltFieldNumber;
const int MoneroLiveRefreshStepAck::kKeyImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroLiveRefreshStepAck::MoneroLiveRefreshStepAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
}
MoneroLiveRefreshStepAck::MoneroLiveRefreshStepAck(const MoneroLiveRefreshStepAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_salt()) {
    salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
  }
  key_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key_image()) {
    key_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_image_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
}

void MoneroLiveRefreshStepAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MoneroLiveRefreshStepAck_messages_2dmonero_2eproto.base);
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MoneroLiveRefreshStepAck::~MoneroLiveRefreshStepAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  SharedDtor();
}

void MoneroLiveRefreshStepAck::SharedDtor() {
  salt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MoneroLiveRefreshStepAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroLiveRefreshStepAck& MoneroLiveRefreshStepAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroLiveRefreshStepAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroLiveRefreshStepAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      salt_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      key_image_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroLiveRefreshStepAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroLiveRefreshStepAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes salt = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_salt();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes key_image = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key_image();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroLiveRefreshStepAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes salt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_salt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes key_image = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroLiveRefreshStepAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes salt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->salt(), output);
  }

  // optional bytes key_image = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key_image(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
}

::google::protobuf::uint8* MoneroLiveRefreshStepAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes salt = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->salt(), target);
  }

  // optional bytes key_image = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key_image(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  return target;
}

size_t MoneroLiveRefreshStepAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes salt = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->salt());
    }

    // optional bytes key_image = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key_image());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroLiveRefreshStepAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroLiveRefreshStepAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroLiveRefreshStepAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
    MergeFrom(*source);
  }
}

void MoneroLiveRefreshStepAck::MergeFrom(const MoneroLiveRefreshStepAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      key_image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_image_);
    }
  }
}

void MoneroLiveRefreshStepAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroLiveRefreshStepAck::CopyFrom(const MoneroLiveRefreshStepAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshStepAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroLiveRefreshStepAck::IsInitialized() const {
  return true;
}

void MoneroLiveRefreshStepAck::Swap(MoneroLiveRefreshStepAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroLiveRefreshStepAck::InternalSwap(MoneroLiveRefreshStepAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  salt_.Swap(&other->salt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_image_.Swap(&other->key_image_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MoneroLiveRefreshStepAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroLiveRefreshFinalRequest::InitAsDefaultInstance() {
}
class MoneroLiveRefreshFinalRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroLiveRefreshFinalRequest::MoneroLiveRefreshFinalRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
}
MoneroLiveRefreshFinalRequest::MoneroLiveRefreshFinalRequest(const MoneroLiveRefreshFinalRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
}

void MoneroLiveRefreshFinalRequest::SharedCtor() {
}

MoneroLiveRefreshFinalRequest::~MoneroLiveRefreshFinalRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  SharedDtor();
}

void MoneroLiveRefreshFinalRequest::SharedDtor() {
}

void MoneroLiveRefreshFinalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroLiveRefreshFinalRequest& MoneroLiveRefreshFinalRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroLiveRefreshFinalRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroLiveRefreshFinalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroLiveRefreshFinalRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroLiveRefreshFinalRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroLiveRefreshFinalRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroLiveRefreshFinalRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
}

::google::protobuf::uint8* MoneroLiveRefreshFinalRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  return target;
}

size_t MoneroLiveRefreshFinalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroLiveRefreshFinalRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroLiveRefreshFinalRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroLiveRefreshFinalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
    MergeFrom(*source);
  }
}

void MoneroLiveRefreshFinalRequest::MergeFrom(const MoneroLiveRefreshFinalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MoneroLiveRefreshFinalRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroLiveRefreshFinalRequest::CopyFrom(const MoneroLiveRefreshFinalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroLiveRefreshFinalRequest::IsInitialized() const {
  return true;
}

void MoneroLiveRefreshFinalRequest::Swap(MoneroLiveRefreshFinalRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroLiveRefreshFinalRequest::InternalSwap(MoneroLiveRefreshFinalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata MoneroLiveRefreshFinalRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MoneroLiveRefreshFinalAck::InitAsDefaultInstance() {
}
class MoneroLiveRefreshFinalAck::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneroLiveRefreshFinalAck::MoneroLiveRefreshFinalAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
}
MoneroLiveRefreshFinalAck::MoneroLiveRefreshFinalAck(const MoneroLiveRefreshFinalAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
}

void MoneroLiveRefreshFinalAck::SharedCtor() {
}

MoneroLiveRefreshFinalAck::~MoneroLiveRefreshFinalAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  SharedDtor();
}

void MoneroLiveRefreshFinalAck::SharedDtor() {
}

void MoneroLiveRefreshFinalAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MoneroLiveRefreshFinalAck& MoneroLiveRefreshFinalAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MoneroLiveRefreshFinalAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void MoneroLiveRefreshFinalAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MoneroLiveRefreshFinalAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MoneroLiveRefreshFinalAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MoneroLiveRefreshFinalAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MoneroLiveRefreshFinalAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
}

::google::protobuf::uint8* MoneroLiveRefreshFinalAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  return target;
}

size_t MoneroLiveRefreshFinalAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneroLiveRefreshFinalAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneroLiveRefreshFinalAck* source =
      ::google::protobuf::DynamicCastToGenerated<MoneroLiveRefreshFinalAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
    MergeFrom(*source);
  }
}

void MoneroLiveRefreshFinalAck::MergeFrom(const MoneroLiveRefreshFinalAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MoneroLiveRefreshFinalAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneroLiveRefreshFinalAck::CopyFrom(const MoneroLiveRefreshFinalAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.MoneroLiveRefreshFinalAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneroLiveRefreshFinalAck::IsInitialized() const {
  return true;
}

void MoneroLiveRefreshFinalAck::Swap(MoneroLiveRefreshFinalAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneroLiveRefreshFinalAck::InternalSwap(MoneroLiveRefreshFinalAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata MoneroLiveRefreshFinalAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DebugMoneroDiagRequest::InitAsDefaultInstance() {
}
class DebugMoneroDiagRequest::HasBitSetters {
 public:
  static void set_has_ins(DebugMoneroDiagRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_p1(DebugMoneroDiagRequest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_p2(DebugMoneroDiagRequest* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_data1(DebugMoneroDiagRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_data2(DebugMoneroDiagRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugMoneroDiagRequest::kInsFieldNumber;
const int DebugMoneroDiagRequest::kP1FieldNumber;
const int DebugMoneroDiagRequest::kP2FieldNumber;
const int DebugMoneroDiagRequest::kPdFieldNumber;
const int DebugMoneroDiagRequest::kData1FieldNumber;
const int DebugMoneroDiagRequest::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugMoneroDiagRequest::DebugMoneroDiagRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.DebugMoneroDiagRequest)
}
DebugMoneroDiagRequest::DebugMoneroDiagRequest(const DebugMoneroDiagRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      pd_(from.pd_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data1()) {
    data1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data1_);
  }
  data2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data2()) {
    data2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data2_);
  }
  ::memcpy(&ins_, &from.ins_,
    static_cast<size_t>(reinterpret_cast<char*>(&p2_) -
    reinterpret_cast<char*>(&ins_)) + sizeof(p2_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.DebugMoneroDiagRequest)
}

void DebugMoneroDiagRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DebugMoneroDiagRequest_messages_2dmonero_2eproto.base);
  data1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ins_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&p2_) -
      reinterpret_cast<char*>(&ins_)) + sizeof(p2_));
}

DebugMoneroDiagRequest::~DebugMoneroDiagRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  SharedDtor();
}

void DebugMoneroDiagRequest::SharedDtor() {
  data1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DebugMoneroDiagRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DebugMoneroDiagRequest& DebugMoneroDiagRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DebugMoneroDiagRequest_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void DebugMoneroDiagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pd_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      data1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      data2_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&ins_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&p2_) -
        reinterpret_cast<char*>(&ins_)) + sizeof(p2_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DebugMoneroDiagRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DebugMoneroDiagRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 ins = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ins(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 p1 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_p1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 p2 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_p2(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint64 pd = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 32) {
          do {
            msg->add_pd(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 32 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_pd();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional bytes data1 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data1();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes data2 = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data2();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DebugMoneroDiagRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ins = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_ins(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ins_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 p1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_p1(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &p1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 p2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_p2(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &p2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 pd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32u, input, this->mutable_pd())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_pd())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DebugMoneroDiagRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 ins = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ins(), output);
  }

  // optional uint64 p1 = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->p1(), output);
  }

  // optional uint64 p2 = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->p2(), output);
  }

  // repeated uint64 pd = 4;
  for (int i = 0, n = this->pd_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->pd(i), output);
  }

  // optional bytes data1 = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data1(), output);
  }

  // optional bytes data2 = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->data2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.DebugMoneroDiagRequest)
}

::google::protobuf::uint8* DebugMoneroDiagRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 ins = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ins(), target);
  }

  // optional uint64 p1 = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->p1(), target);
  }

  // optional uint64 p2 = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->p2(), target);
  }

  // repeated uint64 pd = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(4, this->pd_, target);

  // optional bytes data1 = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data1(), target);
  }

  // optional bytes data2 = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->data2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  return target;
}

size_t DebugMoneroDiagRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 pd = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->pd_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pd_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bytes data1 = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data1());
    }

    // optional bytes data2 = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data2());
    }

    // optional uint64 ins = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ins());
    }

    // optional uint64 p1 = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->p1());
    }

    // optional uint64 p2 = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->p2());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DebugMoneroDiagRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugMoneroDiagRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DebugMoneroDiagRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.DebugMoneroDiagRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.DebugMoneroDiagRequest)
    MergeFrom(*source);
  }
}

void DebugMoneroDiagRequest::MergeFrom(const DebugMoneroDiagRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pd_.MergeFrom(from.pd_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      data1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data1_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      data2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data2_);
    }
    if (cached_has_bits & 0x00000004u) {
      ins_ = from.ins_;
    }
    if (cached_has_bits & 0x00000008u) {
      p1_ = from.p1_;
    }
    if (cached_has_bits & 0x00000010u) {
      p2_ = from.p2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DebugMoneroDiagRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugMoneroDiagRequest::CopyFrom(const DebugMoneroDiagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.DebugMoneroDiagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugMoneroDiagRequest::IsInitialized() const {
  return true;
}

void DebugMoneroDiagRequest::Swap(DebugMoneroDiagRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugMoneroDiagRequest::InternalSwap(DebugMoneroDiagRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pd_.InternalSwap(&other->pd_);
  data1_.Swap(&other->data1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data2_.Swap(&other->data2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ins_, other->ins_);
  swap(p1_, other->p1_);
  swap(p2_, other->p2_);
}

::google::protobuf::Metadata DebugMoneroDiagRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DebugMoneroDiagAck::InitAsDefaultInstance() {
}
class DebugMoneroDiagAck::HasBitSetters {
 public:
  static void set_has_ins(DebugMoneroDiagAck* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_p1(DebugMoneroDiagAck* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_p2(DebugMoneroDiagAck* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_data1(DebugMoneroDiagAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_data2(DebugMoneroDiagAck* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugMoneroDiagAck::kInsFieldNumber;
const int DebugMoneroDiagAck::kP1FieldNumber;
const int DebugMoneroDiagAck::kP2FieldNumber;
const int DebugMoneroDiagAck::kPdFieldNumber;
const int DebugMoneroDiagAck::kData1FieldNumber;
const int DebugMoneroDiagAck::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugMoneroDiagAck::DebugMoneroDiagAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.monero.DebugMoneroDiagAck)
}
DebugMoneroDiagAck::DebugMoneroDiagAck(const DebugMoneroDiagAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      pd_(from.pd_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data1()) {
    data1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data1_);
  }
  data2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data2()) {
    data2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data2_);
  }
  ::memcpy(&ins_, &from.ins_,
    static_cast<size_t>(reinterpret_cast<char*>(&p2_) -
    reinterpret_cast<char*>(&ins_)) + sizeof(p2_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.monero.DebugMoneroDiagAck)
}

void DebugMoneroDiagAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DebugMoneroDiagAck_messages_2dmonero_2eproto.base);
  data1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ins_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&p2_) -
      reinterpret_cast<char*>(&ins_)) + sizeof(p2_));
}

DebugMoneroDiagAck::~DebugMoneroDiagAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.monero.DebugMoneroDiagAck)
  SharedDtor();
}

void DebugMoneroDiagAck::SharedDtor() {
  data1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DebugMoneroDiagAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DebugMoneroDiagAck& DebugMoneroDiagAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DebugMoneroDiagAck_messages_2dmonero_2eproto.base);
  return *internal_default_instance();
}


void DebugMoneroDiagAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.monero.DebugMoneroDiagAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pd_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      data1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      data2_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&ins_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&p2_) -
        reinterpret_cast<char*>(&ins_)) + sizeof(p2_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DebugMoneroDiagAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DebugMoneroDiagAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 ins = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ins(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 p1 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_p1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 p2 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_p2(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint64 pd = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 32) {
          do {
            msg->add_pd(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 32 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_pd();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional bytes data1 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data1();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes data2 = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data2();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DebugMoneroDiagAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.monero.DebugMoneroDiagAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ins = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_ins(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ins_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 p1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_p1(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &p1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 p2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_p2(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &p2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 pd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32u, input, this->mutable_pd())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_pd())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.monero.DebugMoneroDiagAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.monero.DebugMoneroDiagAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DebugMoneroDiagAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.monero.DebugMoneroDiagAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 ins = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ins(), output);
  }

  // optional uint64 p1 = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->p1(), output);
  }

  // optional uint64 p2 = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->p2(), output);
  }

  // repeated uint64 pd = 4;
  for (int i = 0, n = this->pd_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->pd(i), output);
  }

  // optional bytes data1 = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data1(), output);
  }

  // optional bytes data2 = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->data2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.monero.DebugMoneroDiagAck)
}

::google::protobuf::uint8* DebugMoneroDiagAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.monero.DebugMoneroDiagAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 ins = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ins(), target);
  }

  // optional uint64 p1 = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->p1(), target);
  }

  // optional uint64 p2 = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->p2(), target);
  }

  // repeated uint64 pd = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(4, this->pd_, target);

  // optional bytes data1 = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data1(), target);
  }

  // optional bytes data2 = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->data2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.monero.DebugMoneroDiagAck)
  return target;
}

size_t DebugMoneroDiagAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.monero.DebugMoneroDiagAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 pd = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->pd_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pd_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bytes data1 = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data1());
    }

    // optional bytes data2 = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data2());
    }

    // optional uint64 ins = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ins());
    }

    // optional uint64 p1 = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->p1());
    }

    // optional uint64 p2 = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->p2());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DebugMoneroDiagAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.monero.DebugMoneroDiagAck)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugMoneroDiagAck* source =
      ::google::protobuf::DynamicCastToGenerated<DebugMoneroDiagAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.monero.DebugMoneroDiagAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.monero.DebugMoneroDiagAck)
    MergeFrom(*source);
  }
}

void DebugMoneroDiagAck::MergeFrom(const DebugMoneroDiagAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.monero.DebugMoneroDiagAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pd_.MergeFrom(from.pd_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      data1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data1_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      data2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data2_);
    }
    if (cached_has_bits & 0x00000004u) {
      ins_ = from.ins_;
    }
    if (cached_has_bits & 0x00000008u) {
      p1_ = from.p1_;
    }
    if (cached_has_bits & 0x00000010u) {
      p2_ = from.p2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DebugMoneroDiagAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.monero.DebugMoneroDiagAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugMoneroDiagAck::CopyFrom(const DebugMoneroDiagAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.monero.DebugMoneroDiagAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugMoneroDiagAck::IsInitialized() const {
  return true;
}

void DebugMoneroDiagAck::Swap(DebugMoneroDiagAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugMoneroDiagAck::InternalSwap(DebugMoneroDiagAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pd_.InternalSwap(&other->pd_);
  data1_.Swap(&other->data1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data2_.Swap(&other->data2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ins_, other->ins_);
  swap(p1_, other->p1_);
  swap(p2_, other->p2_);
}

::google::protobuf::Metadata DebugMoneroDiagAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dmonero_2eproto);
  return ::file_level_metadata_messages_2dmonero_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace monero
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry_MoneroRctKeyPublic >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroOutputEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry_MoneroMultisigKLRki >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionSourceEntry* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionSourceEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry_MoneroAccountPublicAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionDestinationEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionRsigData* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionRsigData >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionRsigData >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroGetAddress* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroGetAddress >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroGetAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroAddress* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroAddress >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroGetWatchKey* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroGetWatchKey >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroGetWatchKey >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroWatchKey* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroWatchKey >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroWatchKey >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionInitRequest_MoneroTransactionData >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionInitRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionInitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionInitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionInitAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionInitAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionInitAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionSetInputRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionSetInputRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionSetInputRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionSetInputAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionSetInputAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionSetInputAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionInputsPermutationRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionInputsPermutationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionInputsPermutationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionInputsPermutationAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionInputsPermutationAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionInputsPermutationAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionInputViniRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionInputViniRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionInputViniRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionInputViniAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionInputViniAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionInputViniAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionAllInputsSetRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionAllInputsSetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionAllInputsSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionAllInputsSetAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionAllInputsSetAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionAllInputsSetAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionSetOutputRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionSetOutputRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionSetOutputRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionSetOutputAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionSetOutputAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionSetOutputAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionAllOutSetRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionAllOutSetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionAllOutSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck_MoneroRingCtSig >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionAllOutSetAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionSignInputRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionSignInputRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionSignInputRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionSignInputAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionSignInputAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionSignInputAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionFinalRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionFinalRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionFinalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroTransactionFinalAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroTransactionFinalAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroTransactionFinalAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest_MoneroSubAddressIndicesList >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroKeyImageExportInitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroKeyImageExportInitAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroKeyImageExportInitAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroKeyImageExportInitAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest_MoneroTransferDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroKeyImageSyncStepRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck_MoneroExportedKeyImage >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroKeyImageSyncStepAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroKeyImageSyncFinalRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroKeyImageSyncFinalRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroKeyImageSyncFinalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroKeyImageSyncFinalAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroKeyImageSyncFinalAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroKeyImageSyncFinalAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroGetTxKeyRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroGetTxKeyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroGetTxKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroGetTxKeyAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroGetTxKeyAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroGetTxKeyAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroLiveRefreshStartRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroLiveRefreshStartRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroLiveRefreshStartRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroLiveRefreshStartAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroLiveRefreshStartAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroLiveRefreshStartAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroLiveRefreshStepRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroLiveRefreshStepAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroLiveRefreshStepAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroLiveRefreshStepAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroLiveRefreshFinalRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroLiveRefreshFinalRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroLiveRefreshFinalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::MoneroLiveRefreshFinalAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::MoneroLiveRefreshFinalAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::MoneroLiveRefreshFinalAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::DebugMoneroDiagRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::DebugMoneroDiagRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::DebugMoneroDiagRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::monero::DebugMoneroDiagAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::monero::DebugMoneroDiagAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::monero::DebugMoneroDiagAck >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
