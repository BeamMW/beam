// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages-ontology.proto

#ifndef PROTOBUF_INCLUDED_messages_2dontology_2eproto
#define PROTOBUF_INCLUDED_messages_2dontology_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_messages_2dontology_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_messages_2dontology_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[19]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_messages_2dontology_2eproto();
class OntologyAddress;
class OntologyAddressDefaultTypeInternal;
extern OntologyAddressDefaultTypeInternal _OntologyAddress_default_instance_;
class OntologyGetAddress;
class OntologyGetAddressDefaultTypeInternal;
extern OntologyGetAddressDefaultTypeInternal _OntologyGetAddress_default_instance_;
class OntologyGetPublicKey;
class OntologyGetPublicKeyDefaultTypeInternal;
extern OntologyGetPublicKeyDefaultTypeInternal _OntologyGetPublicKey_default_instance_;
class OntologyPublicKey;
class OntologyPublicKeyDefaultTypeInternal;
extern OntologyPublicKeyDefaultTypeInternal _OntologyPublicKey_default_instance_;
class OntologySignOntIdAddAttributes;
class OntologySignOntIdAddAttributesDefaultTypeInternal;
extern OntologySignOntIdAddAttributesDefaultTypeInternal _OntologySignOntIdAddAttributes_default_instance_;
class OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes;
class OntologySignOntIdAddAttributes_OntologyOntIdAddAttributesDefaultTypeInternal;
extern OntologySignOntIdAddAttributes_OntologyOntIdAddAttributesDefaultTypeInternal _OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_default_instance_;
class OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute;
class OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttributeDefaultTypeInternal;
extern OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttributeDefaultTypeInternal _OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute_default_instance_;
class OntologySignOntIdRegister;
class OntologySignOntIdRegisterDefaultTypeInternal;
extern OntologySignOntIdRegisterDefaultTypeInternal _OntologySignOntIdRegister_default_instance_;
class OntologySignOntIdRegister_OntologyOntIdRegister;
class OntologySignOntIdRegister_OntologyOntIdRegisterDefaultTypeInternal;
extern OntologySignOntIdRegister_OntologyOntIdRegisterDefaultTypeInternal _OntologySignOntIdRegister_OntologyOntIdRegister_default_instance_;
class OntologySignTransfer;
class OntologySignTransferDefaultTypeInternal;
extern OntologySignTransferDefaultTypeInternal _OntologySignTransfer_default_instance_;
class OntologySignTransfer_OntologyTransfer;
class OntologySignTransfer_OntologyTransferDefaultTypeInternal;
extern OntologySignTransfer_OntologyTransferDefaultTypeInternal _OntologySignTransfer_OntologyTransfer_default_instance_;
class OntologySignWithdrawOng;
class OntologySignWithdrawOngDefaultTypeInternal;
extern OntologySignWithdrawOngDefaultTypeInternal _OntologySignWithdrawOng_default_instance_;
class OntologySignWithdrawOng_OntologyWithdrawOng;
class OntologySignWithdrawOng_OntologyWithdrawOngDefaultTypeInternal;
extern OntologySignWithdrawOng_OntologyWithdrawOngDefaultTypeInternal _OntologySignWithdrawOng_OntologyWithdrawOng_default_instance_;
class OntologySignedOntIdAddAttributes;
class OntologySignedOntIdAddAttributesDefaultTypeInternal;
extern OntologySignedOntIdAddAttributesDefaultTypeInternal _OntologySignedOntIdAddAttributes_default_instance_;
class OntologySignedOntIdRegister;
class OntologySignedOntIdRegisterDefaultTypeInternal;
extern OntologySignedOntIdRegisterDefaultTypeInternal _OntologySignedOntIdRegister_default_instance_;
class OntologySignedTransfer;
class OntologySignedTransferDefaultTypeInternal;
extern OntologySignedTransferDefaultTypeInternal _OntologySignedTransfer_default_instance_;
class OntologySignedWithdrawOng;
class OntologySignedWithdrawOngDefaultTypeInternal;
extern OntologySignedWithdrawOngDefaultTypeInternal _OntologySignedWithdrawOng_default_instance_;
class OntologyTransaction;
class OntologyTransactionDefaultTypeInternal;
extern OntologyTransactionDefaultTypeInternal _OntologyTransaction_default_instance_;
class OntologyTransaction_OntologyTxAttribute;
class OntologyTransaction_OntologyTxAttributeDefaultTypeInternal;
extern OntologyTransaction_OntologyTxAttributeDefaultTypeInternal _OntologyTransaction_OntologyTxAttribute_default_instance_;
namespace google {
namespace protobuf {
template<> ::OntologyAddress* Arena::CreateMaybeMessage<::OntologyAddress>(Arena*);
template<> ::OntologyGetAddress* Arena::CreateMaybeMessage<::OntologyGetAddress>(Arena*);
template<> ::OntologyGetPublicKey* Arena::CreateMaybeMessage<::OntologyGetPublicKey>(Arena*);
template<> ::OntologyPublicKey* Arena::CreateMaybeMessage<::OntologyPublicKey>(Arena*);
template<> ::OntologySignOntIdAddAttributes* Arena::CreateMaybeMessage<::OntologySignOntIdAddAttributes>(Arena*);
template<> ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* Arena::CreateMaybeMessage<::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes>(Arena*);
template<> ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute* Arena::CreateMaybeMessage<::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute>(Arena*);
template<> ::OntologySignOntIdRegister* Arena::CreateMaybeMessage<::OntologySignOntIdRegister>(Arena*);
template<> ::OntologySignOntIdRegister_OntologyOntIdRegister* Arena::CreateMaybeMessage<::OntologySignOntIdRegister_OntologyOntIdRegister>(Arena*);
template<> ::OntologySignTransfer* Arena::CreateMaybeMessage<::OntologySignTransfer>(Arena*);
template<> ::OntologySignTransfer_OntologyTransfer* Arena::CreateMaybeMessage<::OntologySignTransfer_OntologyTransfer>(Arena*);
template<> ::OntologySignWithdrawOng* Arena::CreateMaybeMessage<::OntologySignWithdrawOng>(Arena*);
template<> ::OntologySignWithdrawOng_OntologyWithdrawOng* Arena::CreateMaybeMessage<::OntologySignWithdrawOng_OntologyWithdrawOng>(Arena*);
template<> ::OntologySignedOntIdAddAttributes* Arena::CreateMaybeMessage<::OntologySignedOntIdAddAttributes>(Arena*);
template<> ::OntologySignedOntIdRegister* Arena::CreateMaybeMessage<::OntologySignedOntIdRegister>(Arena*);
template<> ::OntologySignedTransfer* Arena::CreateMaybeMessage<::OntologySignedTransfer>(Arena*);
template<> ::OntologySignedWithdrawOng* Arena::CreateMaybeMessage<::OntologySignedWithdrawOng>(Arena*);
template<> ::OntologyTransaction* Arena::CreateMaybeMessage<::OntologyTransaction>(Arena*);
template<> ::OntologyTransaction_OntologyTxAttribute* Arena::CreateMaybeMessage<::OntologyTransaction_OntologyTxAttribute>(Arena*);
}  // namespace protobuf
}  // namespace google

enum OntologySignTransfer_OntologyTransfer_OntologyAsset {
  OntologySignTransfer_OntologyTransfer_OntologyAsset_ONT = 1,
  OntologySignTransfer_OntologyTransfer_OntologyAsset_ONG = 2
};
bool OntologySignTransfer_OntologyTransfer_OntologyAsset_IsValid(int value);
const OntologySignTransfer_OntologyTransfer_OntologyAsset OntologySignTransfer_OntologyTransfer_OntologyAsset_OntologyAsset_MIN = OntologySignTransfer_OntologyTransfer_OntologyAsset_ONT;
const OntologySignTransfer_OntologyTransfer_OntologyAsset OntologySignTransfer_OntologyTransfer_OntologyAsset_OntologyAsset_MAX = OntologySignTransfer_OntologyTransfer_OntologyAsset_ONG;
const int OntologySignTransfer_OntologyTransfer_OntologyAsset_OntologyAsset_ARRAYSIZE = OntologySignTransfer_OntologyTransfer_OntologyAsset_OntologyAsset_MAX + 1;

const ::google::protobuf::EnumDescriptor* OntologySignTransfer_OntologyTransfer_OntologyAsset_descriptor();
inline const ::std::string& OntologySignTransfer_OntologyTransfer_OntologyAsset_Name(OntologySignTransfer_OntologyTransfer_OntologyAsset value) {
  return ::google::protobuf::internal::NameOfEnum(
    OntologySignTransfer_OntologyTransfer_OntologyAsset_descriptor(), value);
}
inline bool OntologySignTransfer_OntologyTransfer_OntologyAsset_Parse(
    const ::std::string& name, OntologySignTransfer_OntologyTransfer_OntologyAsset* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OntologySignTransfer_OntologyTransfer_OntologyAsset>(
    OntologySignTransfer_OntologyTransfer_OntologyAsset_descriptor(), name, value);
}
// ===================================================================

class OntologyTransaction_OntologyTxAttribute final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologyTransaction.OntologyTxAttribute) */ {
 public:
  OntologyTransaction_OntologyTxAttribute();
  virtual ~OntologyTransaction_OntologyTxAttribute();

  OntologyTransaction_OntologyTxAttribute(const OntologyTransaction_OntologyTxAttribute& from);

  inline OntologyTransaction_OntologyTxAttribute& operator=(const OntologyTransaction_OntologyTxAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologyTransaction_OntologyTxAttribute(OntologyTransaction_OntologyTxAttribute&& from) noexcept
    : OntologyTransaction_OntologyTxAttribute() {
    *this = ::std::move(from);
  }

  inline OntologyTransaction_OntologyTxAttribute& operator=(OntologyTransaction_OntologyTxAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologyTransaction_OntologyTxAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologyTransaction_OntologyTxAttribute* internal_default_instance() {
    return reinterpret_cast<const OntologyTransaction_OntologyTxAttribute*>(
               &_OntologyTransaction_OntologyTxAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(OntologyTransaction_OntologyTxAttribute* other);
  friend void swap(OntologyTransaction_OntologyTxAttribute& a, OntologyTransaction_OntologyTxAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologyTransaction_OntologyTxAttribute* New() const final {
    return CreateMaybeMessage<OntologyTransaction_OntologyTxAttribute>(nullptr);
  }

  OntologyTransaction_OntologyTxAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologyTransaction_OntologyTxAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologyTransaction_OntologyTxAttribute& from);
  void MergeFrom(const OntologyTransaction_OntologyTxAttribute& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologyTransaction_OntologyTxAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional uint32 usage = 1;
  bool has_usage() const;
  void clear_usage();
  static const int kUsageFieldNumber = 1;
  ::google::protobuf::uint32 usage() const;
  void set_usage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:OntologyTransaction.OntologyTxAttribute)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 usage_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologyTransaction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologyTransaction) */ {
 public:
  OntologyTransaction();
  virtual ~OntologyTransaction();

  OntologyTransaction(const OntologyTransaction& from);

  inline OntologyTransaction& operator=(const OntologyTransaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologyTransaction(OntologyTransaction&& from) noexcept
    : OntologyTransaction() {
    *this = ::std::move(from);
  }

  inline OntologyTransaction& operator=(OntologyTransaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologyTransaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologyTransaction* internal_default_instance() {
    return reinterpret_cast<const OntologyTransaction*>(
               &_OntologyTransaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(OntologyTransaction* other);
  friend void swap(OntologyTransaction& a, OntologyTransaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologyTransaction* New() const final {
    return CreateMaybeMessage<OntologyTransaction>(nullptr);
  }

  OntologyTransaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologyTransaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologyTransaction& from);
  void MergeFrom(const OntologyTransaction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologyTransaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OntologyTransaction_OntologyTxAttribute OntologyTxAttribute;

  // accessors -------------------------------------------------------

  // repeated .OntologyTransaction.OntologyTxAttribute tx_attributes = 7;
  int tx_attributes_size() const;
  void clear_tx_attributes();
  static const int kTxAttributesFieldNumber = 7;
  ::OntologyTransaction_OntologyTxAttribute* mutable_tx_attributes(int index);
  ::google::protobuf::RepeatedPtrField< ::OntologyTransaction_OntologyTxAttribute >*
      mutable_tx_attributes();
  const ::OntologyTransaction_OntologyTxAttribute& tx_attributes(int index) const;
  ::OntologyTransaction_OntologyTxAttribute* add_tx_attributes();
  const ::google::protobuf::RepeatedPtrField< ::OntologyTransaction_OntologyTxAttribute >&
      tx_attributes() const;

  // optional string payer = 6;
  bool has_payer() const;
  void clear_payer();
  static const int kPayerFieldNumber = 6;
  const ::std::string& payer() const;
  void set_payer(const ::std::string& value);
  #if LANG_CXX11
  void set_payer(::std::string&& value);
  #endif
  void set_payer(const char* value);
  void set_payer(const char* value, size_t size);
  ::std::string* mutable_payer();
  ::std::string* release_payer();
  void set_allocated_payer(::std::string* payer);

  // optional uint32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint64 gas_price = 4;
  bool has_gas_price() const;
  void clear_gas_price();
  static const int kGasPriceFieldNumber = 4;
  ::google::protobuf::uint64 gas_price() const;
  void set_gas_price(::google::protobuf::uint64 value);

  // optional uint64 gas_limit = 5;
  bool has_gas_limit() const;
  void clear_gas_limit();
  static const int kGasLimitFieldNumber = 5;
  ::google::protobuf::uint64 gas_limit() const;
  void set_gas_limit(::google::protobuf::uint64 value);

  // optional uint32 nonce = 3;
  bool has_nonce() const;
  void clear_nonce();
  static const int kNonceFieldNumber = 3;
  ::google::protobuf::uint32 nonce() const;
  void set_nonce(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:OntologyTransaction)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::OntologyTransaction_OntologyTxAttribute > tx_attributes_;
  ::google::protobuf::internal::ArenaStringPtr payer_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint64 gas_price_;
  ::google::protobuf::uint64 gas_limit_;
  ::google::protobuf::uint32 nonce_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologyGetPublicKey final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologyGetPublicKey) */ {
 public:
  OntologyGetPublicKey();
  virtual ~OntologyGetPublicKey();

  OntologyGetPublicKey(const OntologyGetPublicKey& from);

  inline OntologyGetPublicKey& operator=(const OntologyGetPublicKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologyGetPublicKey(OntologyGetPublicKey&& from) noexcept
    : OntologyGetPublicKey() {
    *this = ::std::move(from);
  }

  inline OntologyGetPublicKey& operator=(OntologyGetPublicKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologyGetPublicKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologyGetPublicKey* internal_default_instance() {
    return reinterpret_cast<const OntologyGetPublicKey*>(
               &_OntologyGetPublicKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(OntologyGetPublicKey* other);
  friend void swap(OntologyGetPublicKey& a, OntologyGetPublicKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologyGetPublicKey* New() const final {
    return CreateMaybeMessage<OntologyGetPublicKey>(nullptr);
  }

  OntologyGetPublicKey* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologyGetPublicKey>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologyGetPublicKey& from);
  void MergeFrom(const OntologyGetPublicKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologyGetPublicKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 address_n = 1;
  int address_n_size() const;
  void clear_address_n();
  static const int kAddressNFieldNumber = 1;
  ::google::protobuf::uint32 address_n(int index) const;
  void set_address_n(int index, ::google::protobuf::uint32 value);
  void add_address_n(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      address_n() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_address_n();

  // optional bool show_display = 2;
  bool has_show_display() const;
  void clear_show_display();
  static const int kShowDisplayFieldNumber = 2;
  bool show_display() const;
  void set_show_display(bool value);

  // @@protoc_insertion_point(class_scope:OntologyGetPublicKey)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;
  bool show_display_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologyPublicKey final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologyPublicKey) */ {
 public:
  OntologyPublicKey();
  virtual ~OntologyPublicKey();

  OntologyPublicKey(const OntologyPublicKey& from);

  inline OntologyPublicKey& operator=(const OntologyPublicKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologyPublicKey(OntologyPublicKey&& from) noexcept
    : OntologyPublicKey() {
    *this = ::std::move(from);
  }

  inline OntologyPublicKey& operator=(OntologyPublicKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologyPublicKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologyPublicKey* internal_default_instance() {
    return reinterpret_cast<const OntologyPublicKey*>(
               &_OntologyPublicKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(OntologyPublicKey* other);
  friend void swap(OntologyPublicKey& a, OntologyPublicKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologyPublicKey* New() const final {
    return CreateMaybeMessage<OntologyPublicKey>(nullptr);
  }

  OntologyPublicKey* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologyPublicKey>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologyPublicKey& from);
  void MergeFrom(const OntologyPublicKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologyPublicKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes public_key = 1;
  bool has_public_key() const;
  void clear_public_key();
  static const int kPublicKeyFieldNumber = 1;
  const ::std::string& public_key() const;
  void set_public_key(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key(::std::string&& value);
  #endif
  void set_public_key(const char* value);
  void set_public_key(const void* value, size_t size);
  ::std::string* mutable_public_key();
  ::std::string* release_public_key();
  void set_allocated_public_key(::std::string* public_key);

  // @@protoc_insertion_point(class_scope:OntologyPublicKey)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr public_key_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologyGetAddress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologyGetAddress) */ {
 public:
  OntologyGetAddress();
  virtual ~OntologyGetAddress();

  OntologyGetAddress(const OntologyGetAddress& from);

  inline OntologyGetAddress& operator=(const OntologyGetAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologyGetAddress(OntologyGetAddress&& from) noexcept
    : OntologyGetAddress() {
    *this = ::std::move(from);
  }

  inline OntologyGetAddress& operator=(OntologyGetAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologyGetAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologyGetAddress* internal_default_instance() {
    return reinterpret_cast<const OntologyGetAddress*>(
               &_OntologyGetAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(OntologyGetAddress* other);
  friend void swap(OntologyGetAddress& a, OntologyGetAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologyGetAddress* New() const final {
    return CreateMaybeMessage<OntologyGetAddress>(nullptr);
  }

  OntologyGetAddress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologyGetAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologyGetAddress& from);
  void MergeFrom(const OntologyGetAddress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologyGetAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 address_n = 1;
  int address_n_size() const;
  void clear_address_n();
  static const int kAddressNFieldNumber = 1;
  ::google::protobuf::uint32 address_n(int index) const;
  void set_address_n(int index, ::google::protobuf::uint32 value);
  void add_address_n(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      address_n() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_address_n();

  // optional bool show_display = 2;
  bool has_show_display() const;
  void clear_show_display();
  static const int kShowDisplayFieldNumber = 2;
  bool show_display() const;
  void set_show_display(bool value);

  // @@protoc_insertion_point(class_scope:OntologyGetAddress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;
  bool show_display_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologyAddress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologyAddress) */ {
 public:
  OntologyAddress();
  virtual ~OntologyAddress();

  OntologyAddress(const OntologyAddress& from);

  inline OntologyAddress& operator=(const OntologyAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologyAddress(OntologyAddress&& from) noexcept
    : OntologyAddress() {
    *this = ::std::move(from);
  }

  inline OntologyAddress& operator=(OntologyAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologyAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologyAddress* internal_default_instance() {
    return reinterpret_cast<const OntologyAddress*>(
               &_OntologyAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(OntologyAddress* other);
  friend void swap(OntologyAddress& a, OntologyAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologyAddress* New() const final {
    return CreateMaybeMessage<OntologyAddress>(nullptr);
  }

  OntologyAddress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologyAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologyAddress& from);
  void MergeFrom(const OntologyAddress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologyAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:OntologyAddress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignTransfer_OntologyTransfer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignTransfer.OntologyTransfer) */ {
 public:
  OntologySignTransfer_OntologyTransfer();
  virtual ~OntologySignTransfer_OntologyTransfer();

  OntologySignTransfer_OntologyTransfer(const OntologySignTransfer_OntologyTransfer& from);

  inline OntologySignTransfer_OntologyTransfer& operator=(const OntologySignTransfer_OntologyTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignTransfer_OntologyTransfer(OntologySignTransfer_OntologyTransfer&& from) noexcept
    : OntologySignTransfer_OntologyTransfer() {
    *this = ::std::move(from);
  }

  inline OntologySignTransfer_OntologyTransfer& operator=(OntologySignTransfer_OntologyTransfer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignTransfer_OntologyTransfer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignTransfer_OntologyTransfer* internal_default_instance() {
    return reinterpret_cast<const OntologySignTransfer_OntologyTransfer*>(
               &_OntologySignTransfer_OntologyTransfer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(OntologySignTransfer_OntologyTransfer* other);
  friend void swap(OntologySignTransfer_OntologyTransfer& a, OntologySignTransfer_OntologyTransfer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignTransfer_OntologyTransfer* New() const final {
    return CreateMaybeMessage<OntologySignTransfer_OntologyTransfer>(nullptr);
  }

  OntologySignTransfer_OntologyTransfer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignTransfer_OntologyTransfer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignTransfer_OntologyTransfer& from);
  void MergeFrom(const OntologySignTransfer_OntologyTransfer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignTransfer_OntologyTransfer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OntologySignTransfer_OntologyTransfer_OntologyAsset OntologyAsset;
  static const OntologyAsset ONT =
    OntologySignTransfer_OntologyTransfer_OntologyAsset_ONT;
  static const OntologyAsset ONG =
    OntologySignTransfer_OntologyTransfer_OntologyAsset_ONG;
  static inline bool OntologyAsset_IsValid(int value) {
    return OntologySignTransfer_OntologyTransfer_OntologyAsset_IsValid(value);
  }
  static const OntologyAsset OntologyAsset_MIN =
    OntologySignTransfer_OntologyTransfer_OntologyAsset_OntologyAsset_MIN;
  static const OntologyAsset OntologyAsset_MAX =
    OntologySignTransfer_OntologyTransfer_OntologyAsset_OntologyAsset_MAX;
  static const int OntologyAsset_ARRAYSIZE =
    OntologySignTransfer_OntologyTransfer_OntologyAsset_OntologyAsset_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OntologyAsset_descriptor() {
    return OntologySignTransfer_OntologyTransfer_OntologyAsset_descriptor();
  }
  static inline const ::std::string& OntologyAsset_Name(OntologyAsset value) {
    return OntologySignTransfer_OntologyTransfer_OntologyAsset_Name(value);
  }
  static inline bool OntologyAsset_Parse(const ::std::string& name,
      OntologyAsset* value) {
    return OntologySignTransfer_OntologyTransfer_OntologyAsset_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string from_address = 3;
  bool has_from_address() const;
  void clear_from_address();
  static const int kFromAddressFieldNumber = 3;
  const ::std::string& from_address() const;
  void set_from_address(const ::std::string& value);
  #if LANG_CXX11
  void set_from_address(::std::string&& value);
  #endif
  void set_from_address(const char* value);
  void set_from_address(const char* value, size_t size);
  ::std::string* mutable_from_address();
  ::std::string* release_from_address();
  void set_allocated_from_address(::std::string* from_address);

  // optional string to_address = 4;
  bool has_to_address() const;
  void clear_to_address();
  static const int kToAddressFieldNumber = 4;
  const ::std::string& to_address() const;
  void set_to_address(const ::std::string& value);
  #if LANG_CXX11
  void set_to_address(::std::string&& value);
  #endif
  void set_to_address(const char* value);
  void set_to_address(const char* value, size_t size);
  ::std::string* mutable_to_address();
  ::std::string* release_to_address();
  void set_allocated_to_address(::std::string* to_address);

  // optional uint64 amount = 2;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  ::google::protobuf::uint64 amount() const;
  void set_amount(::google::protobuf::uint64 value);

  // optional .OntologySignTransfer.OntologyTransfer.OntologyAsset asset = 1;
  bool has_asset() const;
  void clear_asset();
  static const int kAssetFieldNumber = 1;
  ::OntologySignTransfer_OntologyTransfer_OntologyAsset asset() const;
  void set_asset(::OntologySignTransfer_OntologyTransfer_OntologyAsset value);

  // @@protoc_insertion_point(class_scope:OntologySignTransfer.OntologyTransfer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr from_address_;
  ::google::protobuf::internal::ArenaStringPtr to_address_;
  ::google::protobuf::uint64 amount_;
  int asset_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignTransfer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignTransfer) */ {
 public:
  OntologySignTransfer();
  virtual ~OntologySignTransfer();

  OntologySignTransfer(const OntologySignTransfer& from);

  inline OntologySignTransfer& operator=(const OntologySignTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignTransfer(OntologySignTransfer&& from) noexcept
    : OntologySignTransfer() {
    *this = ::std::move(from);
  }

  inline OntologySignTransfer& operator=(OntologySignTransfer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignTransfer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignTransfer* internal_default_instance() {
    return reinterpret_cast<const OntologySignTransfer*>(
               &_OntologySignTransfer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(OntologySignTransfer* other);
  friend void swap(OntologySignTransfer& a, OntologySignTransfer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignTransfer* New() const final {
    return CreateMaybeMessage<OntologySignTransfer>(nullptr);
  }

  OntologySignTransfer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignTransfer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignTransfer& from);
  void MergeFrom(const OntologySignTransfer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignTransfer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OntologySignTransfer_OntologyTransfer OntologyTransfer;

  // accessors -------------------------------------------------------

  // repeated uint32 address_n = 1;
  int address_n_size() const;
  void clear_address_n();
  static const int kAddressNFieldNumber = 1;
  ::google::protobuf::uint32 address_n(int index) const;
  void set_address_n(int index, ::google::protobuf::uint32 value);
  void add_address_n(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      address_n() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_address_n();

  // optional .OntologyTransaction transaction = 2;
  bool has_transaction() const;
  void clear_transaction();
  static const int kTransactionFieldNumber = 2;
  const ::OntologyTransaction& transaction() const;
  ::OntologyTransaction* release_transaction();
  ::OntologyTransaction* mutable_transaction();
  void set_allocated_transaction(::OntologyTransaction* transaction);

  // optional .OntologySignTransfer.OntologyTransfer transfer = 3;
  bool has_transfer() const;
  void clear_transfer();
  static const int kTransferFieldNumber = 3;
  const ::OntologySignTransfer_OntologyTransfer& transfer() const;
  ::OntologySignTransfer_OntologyTransfer* release_transfer();
  ::OntologySignTransfer_OntologyTransfer* mutable_transfer();
  void set_allocated_transfer(::OntologySignTransfer_OntologyTransfer* transfer);

  // @@protoc_insertion_point(class_scope:OntologySignTransfer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;
  ::OntologyTransaction* transaction_;
  ::OntologySignTransfer_OntologyTransfer* transfer_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignedTransfer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignedTransfer) */ {
 public:
  OntologySignedTransfer();
  virtual ~OntologySignedTransfer();

  OntologySignedTransfer(const OntologySignedTransfer& from);

  inline OntologySignedTransfer& operator=(const OntologySignedTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignedTransfer(OntologySignedTransfer&& from) noexcept
    : OntologySignedTransfer() {
    *this = ::std::move(from);
  }

  inline OntologySignedTransfer& operator=(OntologySignedTransfer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignedTransfer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignedTransfer* internal_default_instance() {
    return reinterpret_cast<const OntologySignedTransfer*>(
               &_OntologySignedTransfer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(OntologySignedTransfer* other);
  friend void swap(OntologySignedTransfer& a, OntologySignedTransfer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignedTransfer* New() const final {
    return CreateMaybeMessage<OntologySignedTransfer>(nullptr);
  }

  OntologySignedTransfer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignedTransfer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignedTransfer& from);
  void MergeFrom(const OntologySignedTransfer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignedTransfer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes signature = 1;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional bytes payload = 2;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:OntologySignedTransfer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignWithdrawOng_OntologyWithdrawOng final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignWithdrawOng.OntologyWithdrawOng) */ {
 public:
  OntologySignWithdrawOng_OntologyWithdrawOng();
  virtual ~OntologySignWithdrawOng_OntologyWithdrawOng();

  OntologySignWithdrawOng_OntologyWithdrawOng(const OntologySignWithdrawOng_OntologyWithdrawOng& from);

  inline OntologySignWithdrawOng_OntologyWithdrawOng& operator=(const OntologySignWithdrawOng_OntologyWithdrawOng& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignWithdrawOng_OntologyWithdrawOng(OntologySignWithdrawOng_OntologyWithdrawOng&& from) noexcept
    : OntologySignWithdrawOng_OntologyWithdrawOng() {
    *this = ::std::move(from);
  }

  inline OntologySignWithdrawOng_OntologyWithdrawOng& operator=(OntologySignWithdrawOng_OntologyWithdrawOng&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignWithdrawOng_OntologyWithdrawOng& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignWithdrawOng_OntologyWithdrawOng* internal_default_instance() {
    return reinterpret_cast<const OntologySignWithdrawOng_OntologyWithdrawOng*>(
               &_OntologySignWithdrawOng_OntologyWithdrawOng_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(OntologySignWithdrawOng_OntologyWithdrawOng* other);
  friend void swap(OntologySignWithdrawOng_OntologyWithdrawOng& a, OntologySignWithdrawOng_OntologyWithdrawOng& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignWithdrawOng_OntologyWithdrawOng* New() const final {
    return CreateMaybeMessage<OntologySignWithdrawOng_OntologyWithdrawOng>(nullptr);
  }

  OntologySignWithdrawOng_OntologyWithdrawOng* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignWithdrawOng_OntologyWithdrawOng>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignWithdrawOng_OntologyWithdrawOng& from);
  void MergeFrom(const OntologySignWithdrawOng_OntologyWithdrawOng& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignWithdrawOng_OntologyWithdrawOng* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string from_address = 2;
  bool has_from_address() const;
  void clear_from_address();
  static const int kFromAddressFieldNumber = 2;
  const ::std::string& from_address() const;
  void set_from_address(const ::std::string& value);
  #if LANG_CXX11
  void set_from_address(::std::string&& value);
  #endif
  void set_from_address(const char* value);
  void set_from_address(const char* value, size_t size);
  ::std::string* mutable_from_address();
  ::std::string* release_from_address();
  void set_allocated_from_address(::std::string* from_address);

  // optional string to_address = 3;
  bool has_to_address() const;
  void clear_to_address();
  static const int kToAddressFieldNumber = 3;
  const ::std::string& to_address() const;
  void set_to_address(const ::std::string& value);
  #if LANG_CXX11
  void set_to_address(::std::string&& value);
  #endif
  void set_to_address(const char* value);
  void set_to_address(const char* value, size_t size);
  ::std::string* mutable_to_address();
  ::std::string* release_to_address();
  void set_allocated_to_address(::std::string* to_address);

  // optional uint64 amount = 1;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 1;
  ::google::protobuf::uint64 amount() const;
  void set_amount(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:OntologySignWithdrawOng.OntologyWithdrawOng)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr from_address_;
  ::google::protobuf::internal::ArenaStringPtr to_address_;
  ::google::protobuf::uint64 amount_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignWithdrawOng final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignWithdrawOng) */ {
 public:
  OntologySignWithdrawOng();
  virtual ~OntologySignWithdrawOng();

  OntologySignWithdrawOng(const OntologySignWithdrawOng& from);

  inline OntologySignWithdrawOng& operator=(const OntologySignWithdrawOng& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignWithdrawOng(OntologySignWithdrawOng&& from) noexcept
    : OntologySignWithdrawOng() {
    *this = ::std::move(from);
  }

  inline OntologySignWithdrawOng& operator=(OntologySignWithdrawOng&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignWithdrawOng& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignWithdrawOng* internal_default_instance() {
    return reinterpret_cast<const OntologySignWithdrawOng*>(
               &_OntologySignWithdrawOng_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(OntologySignWithdrawOng* other);
  friend void swap(OntologySignWithdrawOng& a, OntologySignWithdrawOng& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignWithdrawOng* New() const final {
    return CreateMaybeMessage<OntologySignWithdrawOng>(nullptr);
  }

  OntologySignWithdrawOng* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignWithdrawOng>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignWithdrawOng& from);
  void MergeFrom(const OntologySignWithdrawOng& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignWithdrawOng* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OntologySignWithdrawOng_OntologyWithdrawOng OntologyWithdrawOng;

  // accessors -------------------------------------------------------

  // repeated uint32 address_n = 1;
  int address_n_size() const;
  void clear_address_n();
  static const int kAddressNFieldNumber = 1;
  ::google::protobuf::uint32 address_n(int index) const;
  void set_address_n(int index, ::google::protobuf::uint32 value);
  void add_address_n(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      address_n() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_address_n();

  // optional .OntologyTransaction transaction = 2;
  bool has_transaction() const;
  void clear_transaction();
  static const int kTransactionFieldNumber = 2;
  const ::OntologyTransaction& transaction() const;
  ::OntologyTransaction* release_transaction();
  ::OntologyTransaction* mutable_transaction();
  void set_allocated_transaction(::OntologyTransaction* transaction);

  // optional .OntologySignWithdrawOng.OntologyWithdrawOng withdraw_ong = 3;
  bool has_withdraw_ong() const;
  void clear_withdraw_ong();
  static const int kWithdrawOngFieldNumber = 3;
  const ::OntologySignWithdrawOng_OntologyWithdrawOng& withdraw_ong() const;
  ::OntologySignWithdrawOng_OntologyWithdrawOng* release_withdraw_ong();
  ::OntologySignWithdrawOng_OntologyWithdrawOng* mutable_withdraw_ong();
  void set_allocated_withdraw_ong(::OntologySignWithdrawOng_OntologyWithdrawOng* withdraw_ong);

  // @@protoc_insertion_point(class_scope:OntologySignWithdrawOng)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;
  ::OntologyTransaction* transaction_;
  ::OntologySignWithdrawOng_OntologyWithdrawOng* withdraw_ong_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignedWithdrawOng final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignedWithdrawOng) */ {
 public:
  OntologySignedWithdrawOng();
  virtual ~OntologySignedWithdrawOng();

  OntologySignedWithdrawOng(const OntologySignedWithdrawOng& from);

  inline OntologySignedWithdrawOng& operator=(const OntologySignedWithdrawOng& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignedWithdrawOng(OntologySignedWithdrawOng&& from) noexcept
    : OntologySignedWithdrawOng() {
    *this = ::std::move(from);
  }

  inline OntologySignedWithdrawOng& operator=(OntologySignedWithdrawOng&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignedWithdrawOng& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignedWithdrawOng* internal_default_instance() {
    return reinterpret_cast<const OntologySignedWithdrawOng*>(
               &_OntologySignedWithdrawOng_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(OntologySignedWithdrawOng* other);
  friend void swap(OntologySignedWithdrawOng& a, OntologySignedWithdrawOng& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignedWithdrawOng* New() const final {
    return CreateMaybeMessage<OntologySignedWithdrawOng>(nullptr);
  }

  OntologySignedWithdrawOng* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignedWithdrawOng>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignedWithdrawOng& from);
  void MergeFrom(const OntologySignedWithdrawOng& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignedWithdrawOng* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes signature = 1;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional bytes payload = 2;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:OntologySignedWithdrawOng)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignOntIdRegister_OntologyOntIdRegister final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignOntIdRegister.OntologyOntIdRegister) */ {
 public:
  OntologySignOntIdRegister_OntologyOntIdRegister();
  virtual ~OntologySignOntIdRegister_OntologyOntIdRegister();

  OntologySignOntIdRegister_OntologyOntIdRegister(const OntologySignOntIdRegister_OntologyOntIdRegister& from);

  inline OntologySignOntIdRegister_OntologyOntIdRegister& operator=(const OntologySignOntIdRegister_OntologyOntIdRegister& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignOntIdRegister_OntologyOntIdRegister(OntologySignOntIdRegister_OntologyOntIdRegister&& from) noexcept
    : OntologySignOntIdRegister_OntologyOntIdRegister() {
    *this = ::std::move(from);
  }

  inline OntologySignOntIdRegister_OntologyOntIdRegister& operator=(OntologySignOntIdRegister_OntologyOntIdRegister&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignOntIdRegister_OntologyOntIdRegister& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignOntIdRegister_OntologyOntIdRegister* internal_default_instance() {
    return reinterpret_cast<const OntologySignOntIdRegister_OntologyOntIdRegister*>(
               &_OntologySignOntIdRegister_OntologyOntIdRegister_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(OntologySignOntIdRegister_OntologyOntIdRegister* other);
  friend void swap(OntologySignOntIdRegister_OntologyOntIdRegister& a, OntologySignOntIdRegister_OntologyOntIdRegister& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignOntIdRegister_OntologyOntIdRegister* New() const final {
    return CreateMaybeMessage<OntologySignOntIdRegister_OntologyOntIdRegister>(nullptr);
  }

  OntologySignOntIdRegister_OntologyOntIdRegister* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignOntIdRegister_OntologyOntIdRegister>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignOntIdRegister_OntologyOntIdRegister& from);
  void MergeFrom(const OntologySignOntIdRegister_OntologyOntIdRegister& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignOntIdRegister_OntologyOntIdRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ont_id = 1;
  bool has_ont_id() const;
  void clear_ont_id();
  static const int kOntIdFieldNumber = 1;
  const ::std::string& ont_id() const;
  void set_ont_id(const ::std::string& value);
  #if LANG_CXX11
  void set_ont_id(::std::string&& value);
  #endif
  void set_ont_id(const char* value);
  void set_ont_id(const char* value, size_t size);
  ::std::string* mutable_ont_id();
  ::std::string* release_ont_id();
  void set_allocated_ont_id(::std::string* ont_id);

  // optional bytes public_key = 2;
  bool has_public_key() const;
  void clear_public_key();
  static const int kPublicKeyFieldNumber = 2;
  const ::std::string& public_key() const;
  void set_public_key(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key(::std::string&& value);
  #endif
  void set_public_key(const char* value);
  void set_public_key(const void* value, size_t size);
  ::std::string* mutable_public_key();
  ::std::string* release_public_key();
  void set_allocated_public_key(::std::string* public_key);

  // @@protoc_insertion_point(class_scope:OntologySignOntIdRegister.OntologyOntIdRegister)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ont_id_;
  ::google::protobuf::internal::ArenaStringPtr public_key_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignOntIdRegister final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignOntIdRegister) */ {
 public:
  OntologySignOntIdRegister();
  virtual ~OntologySignOntIdRegister();

  OntologySignOntIdRegister(const OntologySignOntIdRegister& from);

  inline OntologySignOntIdRegister& operator=(const OntologySignOntIdRegister& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignOntIdRegister(OntologySignOntIdRegister&& from) noexcept
    : OntologySignOntIdRegister() {
    *this = ::std::move(from);
  }

  inline OntologySignOntIdRegister& operator=(OntologySignOntIdRegister&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignOntIdRegister& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignOntIdRegister* internal_default_instance() {
    return reinterpret_cast<const OntologySignOntIdRegister*>(
               &_OntologySignOntIdRegister_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(OntologySignOntIdRegister* other);
  friend void swap(OntologySignOntIdRegister& a, OntologySignOntIdRegister& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignOntIdRegister* New() const final {
    return CreateMaybeMessage<OntologySignOntIdRegister>(nullptr);
  }

  OntologySignOntIdRegister* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignOntIdRegister>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignOntIdRegister& from);
  void MergeFrom(const OntologySignOntIdRegister& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignOntIdRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OntologySignOntIdRegister_OntologyOntIdRegister OntologyOntIdRegister;

  // accessors -------------------------------------------------------

  // repeated uint32 address_n = 1;
  int address_n_size() const;
  void clear_address_n();
  static const int kAddressNFieldNumber = 1;
  ::google::protobuf::uint32 address_n(int index) const;
  void set_address_n(int index, ::google::protobuf::uint32 value);
  void add_address_n(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      address_n() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_address_n();

  // optional .OntologyTransaction transaction = 2;
  bool has_transaction() const;
  void clear_transaction();
  static const int kTransactionFieldNumber = 2;
  const ::OntologyTransaction& transaction() const;
  ::OntologyTransaction* release_transaction();
  ::OntologyTransaction* mutable_transaction();
  void set_allocated_transaction(::OntologyTransaction* transaction);

  // optional .OntologySignOntIdRegister.OntologyOntIdRegister ont_id_register = 3;
  bool has_ont_id_register() const;
  void clear_ont_id_register();
  static const int kOntIdRegisterFieldNumber = 3;
  const ::OntologySignOntIdRegister_OntologyOntIdRegister& ont_id_register() const;
  ::OntologySignOntIdRegister_OntologyOntIdRegister* release_ont_id_register();
  ::OntologySignOntIdRegister_OntologyOntIdRegister* mutable_ont_id_register();
  void set_allocated_ont_id_register(::OntologySignOntIdRegister_OntologyOntIdRegister* ont_id_register);

  // @@protoc_insertion_point(class_scope:OntologySignOntIdRegister)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;
  ::OntologyTransaction* transaction_;
  ::OntologySignOntIdRegister_OntologyOntIdRegister* ont_id_register_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignedOntIdRegister final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignedOntIdRegister) */ {
 public:
  OntologySignedOntIdRegister();
  virtual ~OntologySignedOntIdRegister();

  OntologySignedOntIdRegister(const OntologySignedOntIdRegister& from);

  inline OntologySignedOntIdRegister& operator=(const OntologySignedOntIdRegister& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignedOntIdRegister(OntologySignedOntIdRegister&& from) noexcept
    : OntologySignedOntIdRegister() {
    *this = ::std::move(from);
  }

  inline OntologySignedOntIdRegister& operator=(OntologySignedOntIdRegister&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignedOntIdRegister& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignedOntIdRegister* internal_default_instance() {
    return reinterpret_cast<const OntologySignedOntIdRegister*>(
               &_OntologySignedOntIdRegister_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(OntologySignedOntIdRegister* other);
  friend void swap(OntologySignedOntIdRegister& a, OntologySignedOntIdRegister& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignedOntIdRegister* New() const final {
    return CreateMaybeMessage<OntologySignedOntIdRegister>(nullptr);
  }

  OntologySignedOntIdRegister* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignedOntIdRegister>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignedOntIdRegister& from);
  void MergeFrom(const OntologySignedOntIdRegister& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignedOntIdRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes signature = 1;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional bytes payload = 2;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:OntologySignedOntIdRegister)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute) */ {
 public:
  OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute();
  virtual ~OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute();

  OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute(const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute& from);

  inline OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute& operator=(const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute(OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute&& from) noexcept
    : OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute() {
    *this = ::std::move(from);
  }

  inline OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute& operator=(OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute* internal_default_instance() {
    return reinterpret_cast<const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute*>(
               &_OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute* other);
  friend void swap(OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute& a, OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute* New() const final {
    return CreateMaybeMessage<OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute>(nullptr);
  }

  OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute& from);
  void MergeFrom(const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // optional string value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes) */ {
 public:
  OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes();
  virtual ~OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes();

  OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes(const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes& from);

  inline OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes& operator=(const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes(OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes&& from) noexcept
    : OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes() {
    *this = ::std::move(from);
  }

  inline OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes& operator=(OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* internal_default_instance() {
    return reinterpret_cast<const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes*>(
               &_OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* other);
  friend void swap(OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes& a, OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* New() const final {
    return CreateMaybeMessage<OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes>(nullptr);
  }

  OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes& from);
  void MergeFrom(const OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute OntologyOntIdAttribute;

  // accessors -------------------------------------------------------

  // repeated .OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute ont_id_attributes = 3;
  int ont_id_attributes_size() const;
  void clear_ont_id_attributes();
  static const int kOntIdAttributesFieldNumber = 3;
  ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute* mutable_ont_id_attributes(int index);
  ::google::protobuf::RepeatedPtrField< ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute >*
      mutable_ont_id_attributes();
  const ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute& ont_id_attributes(int index) const;
  ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute* add_ont_id_attributes();
  const ::google::protobuf::RepeatedPtrField< ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute >&
      ont_id_attributes() const;

  // optional string ont_id = 1;
  bool has_ont_id() const;
  void clear_ont_id();
  static const int kOntIdFieldNumber = 1;
  const ::std::string& ont_id() const;
  void set_ont_id(const ::std::string& value);
  #if LANG_CXX11
  void set_ont_id(::std::string&& value);
  #endif
  void set_ont_id(const char* value);
  void set_ont_id(const char* value, size_t size);
  ::std::string* mutable_ont_id();
  ::std::string* release_ont_id();
  void set_allocated_ont_id(::std::string* ont_id);

  // optional bytes public_key = 2;
  bool has_public_key() const;
  void clear_public_key();
  static const int kPublicKeyFieldNumber = 2;
  const ::std::string& public_key() const;
  void set_public_key(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key(::std::string&& value);
  #endif
  void set_public_key(const char* value);
  void set_public_key(const void* value, size_t size);
  ::std::string* mutable_public_key();
  ::std::string* release_public_key();
  void set_allocated_public_key(::std::string* public_key);

  // @@protoc_insertion_point(class_scope:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute > ont_id_attributes_;
  ::google::protobuf::internal::ArenaStringPtr ont_id_;
  ::google::protobuf::internal::ArenaStringPtr public_key_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignOntIdAddAttributes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignOntIdAddAttributes) */ {
 public:
  OntologySignOntIdAddAttributes();
  virtual ~OntologySignOntIdAddAttributes();

  OntologySignOntIdAddAttributes(const OntologySignOntIdAddAttributes& from);

  inline OntologySignOntIdAddAttributes& operator=(const OntologySignOntIdAddAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignOntIdAddAttributes(OntologySignOntIdAddAttributes&& from) noexcept
    : OntologySignOntIdAddAttributes() {
    *this = ::std::move(from);
  }

  inline OntologySignOntIdAddAttributes& operator=(OntologySignOntIdAddAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignOntIdAddAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignOntIdAddAttributes* internal_default_instance() {
    return reinterpret_cast<const OntologySignOntIdAddAttributes*>(
               &_OntologySignOntIdAddAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(OntologySignOntIdAddAttributes* other);
  friend void swap(OntologySignOntIdAddAttributes& a, OntologySignOntIdAddAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignOntIdAddAttributes* New() const final {
    return CreateMaybeMessage<OntologySignOntIdAddAttributes>(nullptr);
  }

  OntologySignOntIdAddAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignOntIdAddAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignOntIdAddAttributes& from);
  void MergeFrom(const OntologySignOntIdAddAttributes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignOntIdAddAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes OntologyOntIdAddAttributes;

  // accessors -------------------------------------------------------

  // repeated uint32 address_n = 1;
  int address_n_size() const;
  void clear_address_n();
  static const int kAddressNFieldNumber = 1;
  ::google::protobuf::uint32 address_n(int index) const;
  void set_address_n(int index, ::google::protobuf::uint32 value);
  void add_address_n(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      address_n() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_address_n();

  // optional .OntologyTransaction transaction = 2;
  bool has_transaction() const;
  void clear_transaction();
  static const int kTransactionFieldNumber = 2;
  const ::OntologyTransaction& transaction() const;
  ::OntologyTransaction* release_transaction();
  ::OntologyTransaction* mutable_transaction();
  void set_allocated_transaction(::OntologyTransaction* transaction);

  // optional .OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes ont_id_add_attributes = 3;
  bool has_ont_id_add_attributes() const;
  void clear_ont_id_add_attributes();
  static const int kOntIdAddAttributesFieldNumber = 3;
  const ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes& ont_id_add_attributes() const;
  ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* release_ont_id_add_attributes();
  ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* mutable_ont_id_add_attributes();
  void set_allocated_ont_id_add_attributes(::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* ont_id_add_attributes);

  // @@protoc_insertion_point(class_scope:OntologySignOntIdAddAttributes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > address_n_;
  ::OntologyTransaction* transaction_;
  ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* ont_id_add_attributes_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// -------------------------------------------------------------------

class OntologySignedOntIdAddAttributes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OntologySignedOntIdAddAttributes) */ {
 public:
  OntologySignedOntIdAddAttributes();
  virtual ~OntologySignedOntIdAddAttributes();

  OntologySignedOntIdAddAttributes(const OntologySignedOntIdAddAttributes& from);

  inline OntologySignedOntIdAddAttributes& operator=(const OntologySignedOntIdAddAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OntologySignedOntIdAddAttributes(OntologySignedOntIdAddAttributes&& from) noexcept
    : OntologySignedOntIdAddAttributes() {
    *this = ::std::move(from);
  }

  inline OntologySignedOntIdAddAttributes& operator=(OntologySignedOntIdAddAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OntologySignedOntIdAddAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OntologySignedOntIdAddAttributes* internal_default_instance() {
    return reinterpret_cast<const OntologySignedOntIdAddAttributes*>(
               &_OntologySignedOntIdAddAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(OntologySignedOntIdAddAttributes* other);
  friend void swap(OntologySignedOntIdAddAttributes& a, OntologySignedOntIdAddAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OntologySignedOntIdAddAttributes* New() const final {
    return CreateMaybeMessage<OntologySignedOntIdAddAttributes>(nullptr);
  }

  OntologySignedOntIdAddAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OntologySignedOntIdAddAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OntologySignedOntIdAddAttributes& from);
  void MergeFrom(const OntologySignedOntIdAddAttributes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OntologySignedOntIdAddAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes signature = 1;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional bytes payload = 2;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:OntologySignedOntIdAddAttributes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  friend struct ::TableStruct_messages_2dontology_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OntologyTransaction_OntologyTxAttribute

// optional uint32 usage = 1;
inline bool OntologyTransaction_OntologyTxAttribute::has_usage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologyTransaction_OntologyTxAttribute::clear_usage() {
  usage_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 OntologyTransaction_OntologyTxAttribute::usage() const {
  // @@protoc_insertion_point(field_get:OntologyTransaction.OntologyTxAttribute.usage)
  return usage_;
}
inline void OntologyTransaction_OntologyTxAttribute::set_usage(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  usage_ = value;
  // @@protoc_insertion_point(field_set:OntologyTransaction.OntologyTxAttribute.usage)
}

// optional bytes data = 2;
inline bool OntologyTransaction_OntologyTxAttribute::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologyTransaction_OntologyTxAttribute::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologyTransaction_OntologyTxAttribute::data() const {
  // @@protoc_insertion_point(field_get:OntologyTransaction.OntologyTxAttribute.data)
  return data_.GetNoArena();
}
inline void OntologyTransaction_OntologyTxAttribute::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologyTransaction.OntologyTxAttribute.data)
}
#if LANG_CXX11
inline void OntologyTransaction_OntologyTxAttribute::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologyTransaction.OntologyTxAttribute.data)
}
#endif
inline void OntologyTransaction_OntologyTxAttribute::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologyTransaction.OntologyTxAttribute.data)
}
inline void OntologyTransaction_OntologyTxAttribute::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologyTransaction.OntologyTxAttribute.data)
}
inline ::std::string* OntologyTransaction_OntologyTxAttribute::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologyTransaction.OntologyTxAttribute.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologyTransaction_OntologyTxAttribute::release_data() {
  // @@protoc_insertion_point(field_release:OntologyTransaction.OntologyTxAttribute.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologyTransaction_OntologyTxAttribute::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:OntologyTransaction.OntologyTxAttribute.data)
}

// -------------------------------------------------------------------

// OntologyTransaction

// optional uint32 version = 1;
inline bool OntologyTransaction::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologyTransaction::clear_version() {
  version_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 OntologyTransaction::version() const {
  // @@protoc_insertion_point(field_get:OntologyTransaction.version)
  return version_;
}
inline void OntologyTransaction::set_version(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  version_ = value;
  // @@protoc_insertion_point(field_set:OntologyTransaction.version)
}

// optional uint32 type = 2;
inline bool OntologyTransaction::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OntologyTransaction::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 OntologyTransaction::type() const {
  // @@protoc_insertion_point(field_get:OntologyTransaction.type)
  return type_;
}
inline void OntologyTransaction::set_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  type_ = value;
  // @@protoc_insertion_point(field_set:OntologyTransaction.type)
}

// optional uint32 nonce = 3;
inline bool OntologyTransaction::has_nonce() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OntologyTransaction::clear_nonce() {
  nonce_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 OntologyTransaction::nonce() const {
  // @@protoc_insertion_point(field_get:OntologyTransaction.nonce)
  return nonce_;
}
inline void OntologyTransaction::set_nonce(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  nonce_ = value;
  // @@protoc_insertion_point(field_set:OntologyTransaction.nonce)
}

// optional uint64 gas_price = 4;
inline bool OntologyTransaction::has_gas_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OntologyTransaction::clear_gas_price() {
  gas_price_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 OntologyTransaction::gas_price() const {
  // @@protoc_insertion_point(field_get:OntologyTransaction.gas_price)
  return gas_price_;
}
inline void OntologyTransaction::set_gas_price(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  gas_price_ = value;
  // @@protoc_insertion_point(field_set:OntologyTransaction.gas_price)
}

// optional uint64 gas_limit = 5;
inline bool OntologyTransaction::has_gas_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OntologyTransaction::clear_gas_limit() {
  gas_limit_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 OntologyTransaction::gas_limit() const {
  // @@protoc_insertion_point(field_get:OntologyTransaction.gas_limit)
  return gas_limit_;
}
inline void OntologyTransaction::set_gas_limit(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  gas_limit_ = value;
  // @@protoc_insertion_point(field_set:OntologyTransaction.gas_limit)
}

// optional string payer = 6;
inline bool OntologyTransaction::has_payer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologyTransaction::clear_payer() {
  payer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologyTransaction::payer() const {
  // @@protoc_insertion_point(field_get:OntologyTransaction.payer)
  return payer_.GetNoArena();
}
inline void OntologyTransaction::set_payer(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  payer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologyTransaction.payer)
}
#if LANG_CXX11
inline void OntologyTransaction::set_payer(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  payer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologyTransaction.payer)
}
#endif
inline void OntologyTransaction::set_payer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  payer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologyTransaction.payer)
}
inline void OntologyTransaction::set_payer(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  payer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologyTransaction.payer)
}
inline ::std::string* OntologyTransaction::mutable_payer() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologyTransaction.payer)
  return payer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologyTransaction::release_payer() {
  // @@protoc_insertion_point(field_release:OntologyTransaction.payer)
  if (!has_payer()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return payer_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologyTransaction::set_allocated_payer(::std::string* payer) {
  if (payer != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  payer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payer);
  // @@protoc_insertion_point(field_set_allocated:OntologyTransaction.payer)
}

// repeated .OntologyTransaction.OntologyTxAttribute tx_attributes = 7;
inline int OntologyTransaction::tx_attributes_size() const {
  return tx_attributes_.size();
}
inline void OntologyTransaction::clear_tx_attributes() {
  tx_attributes_.Clear();
}
inline ::OntologyTransaction_OntologyTxAttribute* OntologyTransaction::mutable_tx_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:OntologyTransaction.tx_attributes)
  return tx_attributes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::OntologyTransaction_OntologyTxAttribute >*
OntologyTransaction::mutable_tx_attributes() {
  // @@protoc_insertion_point(field_mutable_list:OntologyTransaction.tx_attributes)
  return &tx_attributes_;
}
inline const ::OntologyTransaction_OntologyTxAttribute& OntologyTransaction::tx_attributes(int index) const {
  // @@protoc_insertion_point(field_get:OntologyTransaction.tx_attributes)
  return tx_attributes_.Get(index);
}
inline ::OntologyTransaction_OntologyTxAttribute* OntologyTransaction::add_tx_attributes() {
  // @@protoc_insertion_point(field_add:OntologyTransaction.tx_attributes)
  return tx_attributes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OntologyTransaction_OntologyTxAttribute >&
OntologyTransaction::tx_attributes() const {
  // @@protoc_insertion_point(field_list:OntologyTransaction.tx_attributes)
  return tx_attributes_;
}

// -------------------------------------------------------------------

// OntologyGetPublicKey

// repeated uint32 address_n = 1;
inline int OntologyGetPublicKey::address_n_size() const {
  return address_n_.size();
}
inline void OntologyGetPublicKey::clear_address_n() {
  address_n_.Clear();
}
inline ::google::protobuf::uint32 OntologyGetPublicKey::address_n(int index) const {
  // @@protoc_insertion_point(field_get:OntologyGetPublicKey.address_n)
  return address_n_.Get(index);
}
inline void OntologyGetPublicKey::set_address_n(int index, ::google::protobuf::uint32 value) {
  address_n_.Set(index, value);
  // @@protoc_insertion_point(field_set:OntologyGetPublicKey.address_n)
}
inline void OntologyGetPublicKey::add_address_n(::google::protobuf::uint32 value) {
  address_n_.Add(value);
  // @@protoc_insertion_point(field_add:OntologyGetPublicKey.address_n)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OntologyGetPublicKey::address_n() const {
  // @@protoc_insertion_point(field_list:OntologyGetPublicKey.address_n)
  return address_n_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OntologyGetPublicKey::mutable_address_n() {
  // @@protoc_insertion_point(field_mutable_list:OntologyGetPublicKey.address_n)
  return &address_n_;
}

// optional bool show_display = 2;
inline bool OntologyGetPublicKey::has_show_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologyGetPublicKey::clear_show_display() {
  show_display_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool OntologyGetPublicKey::show_display() const {
  // @@protoc_insertion_point(field_get:OntologyGetPublicKey.show_display)
  return show_display_;
}
inline void OntologyGetPublicKey::set_show_display(bool value) {
  _has_bits_[0] |= 0x00000001u;
  show_display_ = value;
  // @@protoc_insertion_point(field_set:OntologyGetPublicKey.show_display)
}

// -------------------------------------------------------------------

// OntologyPublicKey

// optional bytes public_key = 1;
inline bool OntologyPublicKey::has_public_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologyPublicKey::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologyPublicKey::public_key() const {
  // @@protoc_insertion_point(field_get:OntologyPublicKey.public_key)
  return public_key_.GetNoArena();
}
inline void OntologyPublicKey::set_public_key(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologyPublicKey.public_key)
}
#if LANG_CXX11
inline void OntologyPublicKey::set_public_key(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologyPublicKey.public_key)
}
#endif
inline void OntologyPublicKey::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologyPublicKey.public_key)
}
inline void OntologyPublicKey::set_public_key(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologyPublicKey.public_key)
}
inline ::std::string* OntologyPublicKey::mutable_public_key() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologyPublicKey.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologyPublicKey::release_public_key() {
  // @@protoc_insertion_point(field_release:OntologyPublicKey.public_key)
  if (!has_public_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return public_key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologyPublicKey::set_allocated_public_key(::std::string* public_key) {
  if (public_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:OntologyPublicKey.public_key)
}

// -------------------------------------------------------------------

// OntologyGetAddress

// repeated uint32 address_n = 1;
inline int OntologyGetAddress::address_n_size() const {
  return address_n_.size();
}
inline void OntologyGetAddress::clear_address_n() {
  address_n_.Clear();
}
inline ::google::protobuf::uint32 OntologyGetAddress::address_n(int index) const {
  // @@protoc_insertion_point(field_get:OntologyGetAddress.address_n)
  return address_n_.Get(index);
}
inline void OntologyGetAddress::set_address_n(int index, ::google::protobuf::uint32 value) {
  address_n_.Set(index, value);
  // @@protoc_insertion_point(field_set:OntologyGetAddress.address_n)
}
inline void OntologyGetAddress::add_address_n(::google::protobuf::uint32 value) {
  address_n_.Add(value);
  // @@protoc_insertion_point(field_add:OntologyGetAddress.address_n)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OntologyGetAddress::address_n() const {
  // @@protoc_insertion_point(field_list:OntologyGetAddress.address_n)
  return address_n_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OntologyGetAddress::mutable_address_n() {
  // @@protoc_insertion_point(field_mutable_list:OntologyGetAddress.address_n)
  return &address_n_;
}

// optional bool show_display = 2;
inline bool OntologyGetAddress::has_show_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologyGetAddress::clear_show_display() {
  show_display_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool OntologyGetAddress::show_display() const {
  // @@protoc_insertion_point(field_get:OntologyGetAddress.show_display)
  return show_display_;
}
inline void OntologyGetAddress::set_show_display(bool value) {
  _has_bits_[0] |= 0x00000001u;
  show_display_ = value;
  // @@protoc_insertion_point(field_set:OntologyGetAddress.show_display)
}

// -------------------------------------------------------------------

// OntologyAddress

// optional string address = 1;
inline bool OntologyAddress::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologyAddress::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologyAddress::address() const {
  // @@protoc_insertion_point(field_get:OntologyAddress.address)
  return address_.GetNoArena();
}
inline void OntologyAddress::set_address(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologyAddress.address)
}
#if LANG_CXX11
inline void OntologyAddress::set_address(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologyAddress.address)
}
#endif
inline void OntologyAddress::set_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologyAddress.address)
}
inline void OntologyAddress::set_address(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologyAddress.address)
}
inline ::std::string* OntologyAddress::mutable_address() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologyAddress.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologyAddress::release_address() {
  // @@protoc_insertion_point(field_release:OntologyAddress.address)
  if (!has_address()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return address_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologyAddress::set_allocated_address(::std::string* address) {
  if (address != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:OntologyAddress.address)
}

// -------------------------------------------------------------------

// OntologySignTransfer_OntologyTransfer

// optional .OntologySignTransfer.OntologyTransfer.OntologyAsset asset = 1;
inline bool OntologySignTransfer_OntologyTransfer::has_asset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OntologySignTransfer_OntologyTransfer::clear_asset() {
  asset_ = 1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::OntologySignTransfer_OntologyTransfer_OntologyAsset OntologySignTransfer_OntologyTransfer::asset() const {
  // @@protoc_insertion_point(field_get:OntologySignTransfer.OntologyTransfer.asset)
  return static_cast< ::OntologySignTransfer_OntologyTransfer_OntologyAsset >(asset_);
}
inline void OntologySignTransfer_OntologyTransfer::set_asset(::OntologySignTransfer_OntologyTransfer_OntologyAsset value) {
  assert(::OntologySignTransfer_OntologyTransfer_OntologyAsset_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  asset_ = value;
  // @@protoc_insertion_point(field_set:OntologySignTransfer.OntologyTransfer.asset)
}

// optional uint64 amount = 2;
inline bool OntologySignTransfer_OntologyTransfer::has_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OntologySignTransfer_OntologyTransfer::clear_amount() {
  amount_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 OntologySignTransfer_OntologyTransfer::amount() const {
  // @@protoc_insertion_point(field_get:OntologySignTransfer.OntologyTransfer.amount)
  return amount_;
}
inline void OntologySignTransfer_OntologyTransfer::set_amount(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  amount_ = value;
  // @@protoc_insertion_point(field_set:OntologySignTransfer.OntologyTransfer.amount)
}

// optional string from_address = 3;
inline bool OntologySignTransfer_OntologyTransfer::has_from_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignTransfer_OntologyTransfer::clear_from_address() {
  from_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologySignTransfer_OntologyTransfer::from_address() const {
  // @@protoc_insertion_point(field_get:OntologySignTransfer.OntologyTransfer.from_address)
  return from_address_.GetNoArena();
}
inline void OntologySignTransfer_OntologyTransfer::set_from_address(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  from_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignTransfer.OntologyTransfer.from_address)
}
#if LANG_CXX11
inline void OntologySignTransfer_OntologyTransfer::set_from_address(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  from_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignTransfer.OntologyTransfer.from_address)
}
#endif
inline void OntologySignTransfer_OntologyTransfer::set_from_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  from_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignTransfer.OntologyTransfer.from_address)
}
inline void OntologySignTransfer_OntologyTransfer::set_from_address(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  from_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignTransfer.OntologyTransfer.from_address)
}
inline ::std::string* OntologySignTransfer_OntologyTransfer::mutable_from_address() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologySignTransfer.OntologyTransfer.from_address)
  return from_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignTransfer_OntologyTransfer::release_from_address() {
  // @@protoc_insertion_point(field_release:OntologySignTransfer.OntologyTransfer.from_address)
  if (!has_from_address()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return from_address_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignTransfer_OntologyTransfer::set_allocated_from_address(::std::string* from_address) {
  if (from_address != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  from_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_address);
  // @@protoc_insertion_point(field_set_allocated:OntologySignTransfer.OntologyTransfer.from_address)
}

// optional string to_address = 4;
inline bool OntologySignTransfer_OntologyTransfer::has_to_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignTransfer_OntologyTransfer::clear_to_address() {
  to_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& OntologySignTransfer_OntologyTransfer::to_address() const {
  // @@protoc_insertion_point(field_get:OntologySignTransfer.OntologyTransfer.to_address)
  return to_address_.GetNoArena();
}
inline void OntologySignTransfer_OntologyTransfer::set_to_address(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignTransfer.OntologyTransfer.to_address)
}
#if LANG_CXX11
inline void OntologySignTransfer_OntologyTransfer::set_to_address(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  to_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignTransfer.OntologyTransfer.to_address)
}
#endif
inline void OntologySignTransfer_OntologyTransfer::set_to_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignTransfer.OntologyTransfer.to_address)
}
inline void OntologySignTransfer_OntologyTransfer::set_to_address(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignTransfer.OntologyTransfer.to_address)
}
inline ::std::string* OntologySignTransfer_OntologyTransfer::mutable_to_address() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:OntologySignTransfer.OntologyTransfer.to_address)
  return to_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignTransfer_OntologyTransfer::release_to_address() {
  // @@protoc_insertion_point(field_release:OntologySignTransfer.OntologyTransfer.to_address)
  if (!has_to_address()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return to_address_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignTransfer_OntologyTransfer::set_allocated_to_address(::std::string* to_address) {
  if (to_address != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  to_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_address);
  // @@protoc_insertion_point(field_set_allocated:OntologySignTransfer.OntologyTransfer.to_address)
}

// -------------------------------------------------------------------

// OntologySignTransfer

// repeated uint32 address_n = 1;
inline int OntologySignTransfer::address_n_size() const {
  return address_n_.size();
}
inline void OntologySignTransfer::clear_address_n() {
  address_n_.Clear();
}
inline ::google::protobuf::uint32 OntologySignTransfer::address_n(int index) const {
  // @@protoc_insertion_point(field_get:OntologySignTransfer.address_n)
  return address_n_.Get(index);
}
inline void OntologySignTransfer::set_address_n(int index, ::google::protobuf::uint32 value) {
  address_n_.Set(index, value);
  // @@protoc_insertion_point(field_set:OntologySignTransfer.address_n)
}
inline void OntologySignTransfer::add_address_n(::google::protobuf::uint32 value) {
  address_n_.Add(value);
  // @@protoc_insertion_point(field_add:OntologySignTransfer.address_n)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OntologySignTransfer::address_n() const {
  // @@protoc_insertion_point(field_list:OntologySignTransfer.address_n)
  return address_n_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OntologySignTransfer::mutable_address_n() {
  // @@protoc_insertion_point(field_mutable_list:OntologySignTransfer.address_n)
  return &address_n_;
}

// optional .OntologyTransaction transaction = 2;
inline bool OntologySignTransfer::has_transaction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignTransfer::clear_transaction() {
  if (transaction_ != nullptr) transaction_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::OntologyTransaction& OntologySignTransfer::transaction() const {
  const ::OntologyTransaction* p = transaction_;
  // @@protoc_insertion_point(field_get:OntologySignTransfer.transaction)
  return p != nullptr ? *p : *reinterpret_cast<const ::OntologyTransaction*>(
      &::_OntologyTransaction_default_instance_);
}
inline ::OntologyTransaction* OntologySignTransfer::release_transaction() {
  // @@protoc_insertion_point(field_release:OntologySignTransfer.transaction)
  _has_bits_[0] &= ~0x00000001u;
  ::OntologyTransaction* temp = transaction_;
  transaction_ = nullptr;
  return temp;
}
inline ::OntologyTransaction* OntologySignTransfer::mutable_transaction() {
  _has_bits_[0] |= 0x00000001u;
  if (transaction_ == nullptr) {
    auto* p = CreateMaybeMessage<::OntologyTransaction>(GetArenaNoVirtual());
    transaction_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OntologySignTransfer.transaction)
  return transaction_;
}
inline void OntologySignTransfer::set_allocated_transaction(::OntologyTransaction* transaction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete transaction_;
  }
  if (transaction) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      transaction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transaction, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  transaction_ = transaction;
  // @@protoc_insertion_point(field_set_allocated:OntologySignTransfer.transaction)
}

// optional .OntologySignTransfer.OntologyTransfer transfer = 3;
inline bool OntologySignTransfer::has_transfer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignTransfer::clear_transfer() {
  if (transfer_ != nullptr) transfer_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::OntologySignTransfer_OntologyTransfer& OntologySignTransfer::transfer() const {
  const ::OntologySignTransfer_OntologyTransfer* p = transfer_;
  // @@protoc_insertion_point(field_get:OntologySignTransfer.transfer)
  return p != nullptr ? *p : *reinterpret_cast<const ::OntologySignTransfer_OntologyTransfer*>(
      &::_OntologySignTransfer_OntologyTransfer_default_instance_);
}
inline ::OntologySignTransfer_OntologyTransfer* OntologySignTransfer::release_transfer() {
  // @@protoc_insertion_point(field_release:OntologySignTransfer.transfer)
  _has_bits_[0] &= ~0x00000002u;
  ::OntologySignTransfer_OntologyTransfer* temp = transfer_;
  transfer_ = nullptr;
  return temp;
}
inline ::OntologySignTransfer_OntologyTransfer* OntologySignTransfer::mutable_transfer() {
  _has_bits_[0] |= 0x00000002u;
  if (transfer_ == nullptr) {
    auto* p = CreateMaybeMessage<::OntologySignTransfer_OntologyTransfer>(GetArenaNoVirtual());
    transfer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OntologySignTransfer.transfer)
  return transfer_;
}
inline void OntologySignTransfer::set_allocated_transfer(::OntologySignTransfer_OntologyTransfer* transfer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete transfer_;
  }
  if (transfer) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      transfer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transfer, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  transfer_ = transfer;
  // @@protoc_insertion_point(field_set_allocated:OntologySignTransfer.transfer)
}

// -------------------------------------------------------------------

// OntologySignedTransfer

// optional bytes signature = 1;
inline bool OntologySignedTransfer::has_signature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignedTransfer::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologySignedTransfer::signature() const {
  // @@protoc_insertion_point(field_get:OntologySignedTransfer.signature)
  return signature_.GetNoArena();
}
inline void OntologySignedTransfer::set_signature(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignedTransfer.signature)
}
#if LANG_CXX11
inline void OntologySignedTransfer::set_signature(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignedTransfer.signature)
}
#endif
inline void OntologySignedTransfer::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignedTransfer.signature)
}
inline void OntologySignedTransfer::set_signature(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignedTransfer.signature)
}
inline ::std::string* OntologySignedTransfer::mutable_signature() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologySignedTransfer.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignedTransfer::release_signature() {
  // @@protoc_insertion_point(field_release:OntologySignedTransfer.signature)
  if (!has_signature()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return signature_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignedTransfer::set_allocated_signature(::std::string* signature) {
  if (signature != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:OntologySignedTransfer.signature)
}

// optional bytes payload = 2;
inline bool OntologySignedTransfer::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignedTransfer::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& OntologySignedTransfer::payload() const {
  // @@protoc_insertion_point(field_get:OntologySignedTransfer.payload)
  return payload_.GetNoArena();
}
inline void OntologySignedTransfer::set_payload(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignedTransfer.payload)
}
#if LANG_CXX11
inline void OntologySignedTransfer::set_payload(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignedTransfer.payload)
}
#endif
inline void OntologySignedTransfer::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignedTransfer.payload)
}
inline void OntologySignedTransfer::set_payload(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignedTransfer.payload)
}
inline ::std::string* OntologySignedTransfer::mutable_payload() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:OntologySignedTransfer.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignedTransfer::release_payload() {
  // @@protoc_insertion_point(field_release:OntologySignedTransfer.payload)
  if (!has_payload()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return payload_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignedTransfer::set_allocated_payload(::std::string* payload) {
  if (payload != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:OntologySignedTransfer.payload)
}

// -------------------------------------------------------------------

// OntologySignWithdrawOng_OntologyWithdrawOng

// optional uint64 amount = 1;
inline bool OntologySignWithdrawOng_OntologyWithdrawOng::has_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OntologySignWithdrawOng_OntologyWithdrawOng::clear_amount() {
  amount_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 OntologySignWithdrawOng_OntologyWithdrawOng::amount() const {
  // @@protoc_insertion_point(field_get:OntologySignWithdrawOng.OntologyWithdrawOng.amount)
  return amount_;
}
inline void OntologySignWithdrawOng_OntologyWithdrawOng::set_amount(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  amount_ = value;
  // @@protoc_insertion_point(field_set:OntologySignWithdrawOng.OntologyWithdrawOng.amount)
}

// optional string from_address = 2;
inline bool OntologySignWithdrawOng_OntologyWithdrawOng::has_from_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignWithdrawOng_OntologyWithdrawOng::clear_from_address() {
  from_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologySignWithdrawOng_OntologyWithdrawOng::from_address() const {
  // @@protoc_insertion_point(field_get:OntologySignWithdrawOng.OntologyWithdrawOng.from_address)
  return from_address_.GetNoArena();
}
inline void OntologySignWithdrawOng_OntologyWithdrawOng::set_from_address(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  from_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignWithdrawOng.OntologyWithdrawOng.from_address)
}
#if LANG_CXX11
inline void OntologySignWithdrawOng_OntologyWithdrawOng::set_from_address(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  from_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignWithdrawOng.OntologyWithdrawOng.from_address)
}
#endif
inline void OntologySignWithdrawOng_OntologyWithdrawOng::set_from_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  from_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignWithdrawOng.OntologyWithdrawOng.from_address)
}
inline void OntologySignWithdrawOng_OntologyWithdrawOng::set_from_address(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  from_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignWithdrawOng.OntologyWithdrawOng.from_address)
}
inline ::std::string* OntologySignWithdrawOng_OntologyWithdrawOng::mutable_from_address() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologySignWithdrawOng.OntologyWithdrawOng.from_address)
  return from_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignWithdrawOng_OntologyWithdrawOng::release_from_address() {
  // @@protoc_insertion_point(field_release:OntologySignWithdrawOng.OntologyWithdrawOng.from_address)
  if (!has_from_address()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return from_address_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignWithdrawOng_OntologyWithdrawOng::set_allocated_from_address(::std::string* from_address) {
  if (from_address != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  from_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_address);
  // @@protoc_insertion_point(field_set_allocated:OntologySignWithdrawOng.OntologyWithdrawOng.from_address)
}

// optional string to_address = 3;
inline bool OntologySignWithdrawOng_OntologyWithdrawOng::has_to_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignWithdrawOng_OntologyWithdrawOng::clear_to_address() {
  to_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& OntologySignWithdrawOng_OntologyWithdrawOng::to_address() const {
  // @@protoc_insertion_point(field_get:OntologySignWithdrawOng.OntologyWithdrawOng.to_address)
  return to_address_.GetNoArena();
}
inline void OntologySignWithdrawOng_OntologyWithdrawOng::set_to_address(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignWithdrawOng.OntologyWithdrawOng.to_address)
}
#if LANG_CXX11
inline void OntologySignWithdrawOng_OntologyWithdrawOng::set_to_address(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  to_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignWithdrawOng.OntologyWithdrawOng.to_address)
}
#endif
inline void OntologySignWithdrawOng_OntologyWithdrawOng::set_to_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignWithdrawOng.OntologyWithdrawOng.to_address)
}
inline void OntologySignWithdrawOng_OntologyWithdrawOng::set_to_address(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  to_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignWithdrawOng.OntologyWithdrawOng.to_address)
}
inline ::std::string* OntologySignWithdrawOng_OntologyWithdrawOng::mutable_to_address() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:OntologySignWithdrawOng.OntologyWithdrawOng.to_address)
  return to_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignWithdrawOng_OntologyWithdrawOng::release_to_address() {
  // @@protoc_insertion_point(field_release:OntologySignWithdrawOng.OntologyWithdrawOng.to_address)
  if (!has_to_address()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return to_address_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignWithdrawOng_OntologyWithdrawOng::set_allocated_to_address(::std::string* to_address) {
  if (to_address != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  to_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_address);
  // @@protoc_insertion_point(field_set_allocated:OntologySignWithdrawOng.OntologyWithdrawOng.to_address)
}

// -------------------------------------------------------------------

// OntologySignWithdrawOng

// repeated uint32 address_n = 1;
inline int OntologySignWithdrawOng::address_n_size() const {
  return address_n_.size();
}
inline void OntologySignWithdrawOng::clear_address_n() {
  address_n_.Clear();
}
inline ::google::protobuf::uint32 OntologySignWithdrawOng::address_n(int index) const {
  // @@protoc_insertion_point(field_get:OntologySignWithdrawOng.address_n)
  return address_n_.Get(index);
}
inline void OntologySignWithdrawOng::set_address_n(int index, ::google::protobuf::uint32 value) {
  address_n_.Set(index, value);
  // @@protoc_insertion_point(field_set:OntologySignWithdrawOng.address_n)
}
inline void OntologySignWithdrawOng::add_address_n(::google::protobuf::uint32 value) {
  address_n_.Add(value);
  // @@protoc_insertion_point(field_add:OntologySignWithdrawOng.address_n)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OntologySignWithdrawOng::address_n() const {
  // @@protoc_insertion_point(field_list:OntologySignWithdrawOng.address_n)
  return address_n_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OntologySignWithdrawOng::mutable_address_n() {
  // @@protoc_insertion_point(field_mutable_list:OntologySignWithdrawOng.address_n)
  return &address_n_;
}

// optional .OntologyTransaction transaction = 2;
inline bool OntologySignWithdrawOng::has_transaction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignWithdrawOng::clear_transaction() {
  if (transaction_ != nullptr) transaction_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::OntologyTransaction& OntologySignWithdrawOng::transaction() const {
  const ::OntologyTransaction* p = transaction_;
  // @@protoc_insertion_point(field_get:OntologySignWithdrawOng.transaction)
  return p != nullptr ? *p : *reinterpret_cast<const ::OntologyTransaction*>(
      &::_OntologyTransaction_default_instance_);
}
inline ::OntologyTransaction* OntologySignWithdrawOng::release_transaction() {
  // @@protoc_insertion_point(field_release:OntologySignWithdrawOng.transaction)
  _has_bits_[0] &= ~0x00000001u;
  ::OntologyTransaction* temp = transaction_;
  transaction_ = nullptr;
  return temp;
}
inline ::OntologyTransaction* OntologySignWithdrawOng::mutable_transaction() {
  _has_bits_[0] |= 0x00000001u;
  if (transaction_ == nullptr) {
    auto* p = CreateMaybeMessage<::OntologyTransaction>(GetArenaNoVirtual());
    transaction_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OntologySignWithdrawOng.transaction)
  return transaction_;
}
inline void OntologySignWithdrawOng::set_allocated_transaction(::OntologyTransaction* transaction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete transaction_;
  }
  if (transaction) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      transaction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transaction, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  transaction_ = transaction;
  // @@protoc_insertion_point(field_set_allocated:OntologySignWithdrawOng.transaction)
}

// optional .OntologySignWithdrawOng.OntologyWithdrawOng withdraw_ong = 3;
inline bool OntologySignWithdrawOng::has_withdraw_ong() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignWithdrawOng::clear_withdraw_ong() {
  if (withdraw_ong_ != nullptr) withdraw_ong_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::OntologySignWithdrawOng_OntologyWithdrawOng& OntologySignWithdrawOng::withdraw_ong() const {
  const ::OntologySignWithdrawOng_OntologyWithdrawOng* p = withdraw_ong_;
  // @@protoc_insertion_point(field_get:OntologySignWithdrawOng.withdraw_ong)
  return p != nullptr ? *p : *reinterpret_cast<const ::OntologySignWithdrawOng_OntologyWithdrawOng*>(
      &::_OntologySignWithdrawOng_OntologyWithdrawOng_default_instance_);
}
inline ::OntologySignWithdrawOng_OntologyWithdrawOng* OntologySignWithdrawOng::release_withdraw_ong() {
  // @@protoc_insertion_point(field_release:OntologySignWithdrawOng.withdraw_ong)
  _has_bits_[0] &= ~0x00000002u;
  ::OntologySignWithdrawOng_OntologyWithdrawOng* temp = withdraw_ong_;
  withdraw_ong_ = nullptr;
  return temp;
}
inline ::OntologySignWithdrawOng_OntologyWithdrawOng* OntologySignWithdrawOng::mutable_withdraw_ong() {
  _has_bits_[0] |= 0x00000002u;
  if (withdraw_ong_ == nullptr) {
    auto* p = CreateMaybeMessage<::OntologySignWithdrawOng_OntologyWithdrawOng>(GetArenaNoVirtual());
    withdraw_ong_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OntologySignWithdrawOng.withdraw_ong)
  return withdraw_ong_;
}
inline void OntologySignWithdrawOng::set_allocated_withdraw_ong(::OntologySignWithdrawOng_OntologyWithdrawOng* withdraw_ong) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete withdraw_ong_;
  }
  if (withdraw_ong) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      withdraw_ong = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, withdraw_ong, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  withdraw_ong_ = withdraw_ong;
  // @@protoc_insertion_point(field_set_allocated:OntologySignWithdrawOng.withdraw_ong)
}

// -------------------------------------------------------------------

// OntologySignedWithdrawOng

// optional bytes signature = 1;
inline bool OntologySignedWithdrawOng::has_signature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignedWithdrawOng::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologySignedWithdrawOng::signature() const {
  // @@protoc_insertion_point(field_get:OntologySignedWithdrawOng.signature)
  return signature_.GetNoArena();
}
inline void OntologySignedWithdrawOng::set_signature(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignedWithdrawOng.signature)
}
#if LANG_CXX11
inline void OntologySignedWithdrawOng::set_signature(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignedWithdrawOng.signature)
}
#endif
inline void OntologySignedWithdrawOng::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignedWithdrawOng.signature)
}
inline void OntologySignedWithdrawOng::set_signature(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignedWithdrawOng.signature)
}
inline ::std::string* OntologySignedWithdrawOng::mutable_signature() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologySignedWithdrawOng.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignedWithdrawOng::release_signature() {
  // @@protoc_insertion_point(field_release:OntologySignedWithdrawOng.signature)
  if (!has_signature()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return signature_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignedWithdrawOng::set_allocated_signature(::std::string* signature) {
  if (signature != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:OntologySignedWithdrawOng.signature)
}

// optional bytes payload = 2;
inline bool OntologySignedWithdrawOng::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignedWithdrawOng::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& OntologySignedWithdrawOng::payload() const {
  // @@protoc_insertion_point(field_get:OntologySignedWithdrawOng.payload)
  return payload_.GetNoArena();
}
inline void OntologySignedWithdrawOng::set_payload(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignedWithdrawOng.payload)
}
#if LANG_CXX11
inline void OntologySignedWithdrawOng::set_payload(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignedWithdrawOng.payload)
}
#endif
inline void OntologySignedWithdrawOng::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignedWithdrawOng.payload)
}
inline void OntologySignedWithdrawOng::set_payload(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignedWithdrawOng.payload)
}
inline ::std::string* OntologySignedWithdrawOng::mutable_payload() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:OntologySignedWithdrawOng.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignedWithdrawOng::release_payload() {
  // @@protoc_insertion_point(field_release:OntologySignedWithdrawOng.payload)
  if (!has_payload()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return payload_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignedWithdrawOng::set_allocated_payload(::std::string* payload) {
  if (payload != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:OntologySignedWithdrawOng.payload)
}

// -------------------------------------------------------------------

// OntologySignOntIdRegister_OntologyOntIdRegister

// optional string ont_id = 1;
inline bool OntologySignOntIdRegister_OntologyOntIdRegister::has_ont_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignOntIdRegister_OntologyOntIdRegister::clear_ont_id() {
  ont_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologySignOntIdRegister_OntologyOntIdRegister::ont_id() const {
  // @@protoc_insertion_point(field_get:OntologySignOntIdRegister.OntologyOntIdRegister.ont_id)
  return ont_id_.GetNoArena();
}
inline void OntologySignOntIdRegister_OntologyOntIdRegister::set_ont_id(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  ont_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignOntIdRegister.OntologyOntIdRegister.ont_id)
}
#if LANG_CXX11
inline void OntologySignOntIdRegister_OntologyOntIdRegister::set_ont_id(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  ont_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignOntIdRegister.OntologyOntIdRegister.ont_id)
}
#endif
inline void OntologySignOntIdRegister_OntologyOntIdRegister::set_ont_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  ont_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignOntIdRegister.OntologyOntIdRegister.ont_id)
}
inline void OntologySignOntIdRegister_OntologyOntIdRegister::set_ont_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  ont_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignOntIdRegister.OntologyOntIdRegister.ont_id)
}
inline ::std::string* OntologySignOntIdRegister_OntologyOntIdRegister::mutable_ont_id() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdRegister.OntologyOntIdRegister.ont_id)
  return ont_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignOntIdRegister_OntologyOntIdRegister::release_ont_id() {
  // @@protoc_insertion_point(field_release:OntologySignOntIdRegister.OntologyOntIdRegister.ont_id)
  if (!has_ont_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return ont_id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignOntIdRegister_OntologyOntIdRegister::set_allocated_ont_id(::std::string* ont_id) {
  if (ont_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ont_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ont_id);
  // @@protoc_insertion_point(field_set_allocated:OntologySignOntIdRegister.OntologyOntIdRegister.ont_id)
}

// optional bytes public_key = 2;
inline bool OntologySignOntIdRegister_OntologyOntIdRegister::has_public_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignOntIdRegister_OntologyOntIdRegister::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& OntologySignOntIdRegister_OntologyOntIdRegister::public_key() const {
  // @@protoc_insertion_point(field_get:OntologySignOntIdRegister.OntologyOntIdRegister.public_key)
  return public_key_.GetNoArena();
}
inline void OntologySignOntIdRegister_OntologyOntIdRegister::set_public_key(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignOntIdRegister.OntologyOntIdRegister.public_key)
}
#if LANG_CXX11
inline void OntologySignOntIdRegister_OntologyOntIdRegister::set_public_key(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignOntIdRegister.OntologyOntIdRegister.public_key)
}
#endif
inline void OntologySignOntIdRegister_OntologyOntIdRegister::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignOntIdRegister.OntologyOntIdRegister.public_key)
}
inline void OntologySignOntIdRegister_OntologyOntIdRegister::set_public_key(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignOntIdRegister.OntologyOntIdRegister.public_key)
}
inline ::std::string* OntologySignOntIdRegister_OntologyOntIdRegister::mutable_public_key() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdRegister.OntologyOntIdRegister.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignOntIdRegister_OntologyOntIdRegister::release_public_key() {
  // @@protoc_insertion_point(field_release:OntologySignOntIdRegister.OntologyOntIdRegister.public_key)
  if (!has_public_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return public_key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignOntIdRegister_OntologyOntIdRegister::set_allocated_public_key(::std::string* public_key) {
  if (public_key != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:OntologySignOntIdRegister.OntologyOntIdRegister.public_key)
}

// -------------------------------------------------------------------

// OntologySignOntIdRegister

// repeated uint32 address_n = 1;
inline int OntologySignOntIdRegister::address_n_size() const {
  return address_n_.size();
}
inline void OntologySignOntIdRegister::clear_address_n() {
  address_n_.Clear();
}
inline ::google::protobuf::uint32 OntologySignOntIdRegister::address_n(int index) const {
  // @@protoc_insertion_point(field_get:OntologySignOntIdRegister.address_n)
  return address_n_.Get(index);
}
inline void OntologySignOntIdRegister::set_address_n(int index, ::google::protobuf::uint32 value) {
  address_n_.Set(index, value);
  // @@protoc_insertion_point(field_set:OntologySignOntIdRegister.address_n)
}
inline void OntologySignOntIdRegister::add_address_n(::google::protobuf::uint32 value) {
  address_n_.Add(value);
  // @@protoc_insertion_point(field_add:OntologySignOntIdRegister.address_n)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OntologySignOntIdRegister::address_n() const {
  // @@protoc_insertion_point(field_list:OntologySignOntIdRegister.address_n)
  return address_n_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OntologySignOntIdRegister::mutable_address_n() {
  // @@protoc_insertion_point(field_mutable_list:OntologySignOntIdRegister.address_n)
  return &address_n_;
}

// optional .OntologyTransaction transaction = 2;
inline bool OntologySignOntIdRegister::has_transaction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignOntIdRegister::clear_transaction() {
  if (transaction_ != nullptr) transaction_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::OntologyTransaction& OntologySignOntIdRegister::transaction() const {
  const ::OntologyTransaction* p = transaction_;
  // @@protoc_insertion_point(field_get:OntologySignOntIdRegister.transaction)
  return p != nullptr ? *p : *reinterpret_cast<const ::OntologyTransaction*>(
      &::_OntologyTransaction_default_instance_);
}
inline ::OntologyTransaction* OntologySignOntIdRegister::release_transaction() {
  // @@protoc_insertion_point(field_release:OntologySignOntIdRegister.transaction)
  _has_bits_[0] &= ~0x00000001u;
  ::OntologyTransaction* temp = transaction_;
  transaction_ = nullptr;
  return temp;
}
inline ::OntologyTransaction* OntologySignOntIdRegister::mutable_transaction() {
  _has_bits_[0] |= 0x00000001u;
  if (transaction_ == nullptr) {
    auto* p = CreateMaybeMessage<::OntologyTransaction>(GetArenaNoVirtual());
    transaction_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdRegister.transaction)
  return transaction_;
}
inline void OntologySignOntIdRegister::set_allocated_transaction(::OntologyTransaction* transaction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete transaction_;
  }
  if (transaction) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      transaction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transaction, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  transaction_ = transaction;
  // @@protoc_insertion_point(field_set_allocated:OntologySignOntIdRegister.transaction)
}

// optional .OntologySignOntIdRegister.OntologyOntIdRegister ont_id_register = 3;
inline bool OntologySignOntIdRegister::has_ont_id_register() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignOntIdRegister::clear_ont_id_register() {
  if (ont_id_register_ != nullptr) ont_id_register_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::OntologySignOntIdRegister_OntologyOntIdRegister& OntologySignOntIdRegister::ont_id_register() const {
  const ::OntologySignOntIdRegister_OntologyOntIdRegister* p = ont_id_register_;
  // @@protoc_insertion_point(field_get:OntologySignOntIdRegister.ont_id_register)
  return p != nullptr ? *p : *reinterpret_cast<const ::OntologySignOntIdRegister_OntologyOntIdRegister*>(
      &::_OntologySignOntIdRegister_OntologyOntIdRegister_default_instance_);
}
inline ::OntologySignOntIdRegister_OntologyOntIdRegister* OntologySignOntIdRegister::release_ont_id_register() {
  // @@protoc_insertion_point(field_release:OntologySignOntIdRegister.ont_id_register)
  _has_bits_[0] &= ~0x00000002u;
  ::OntologySignOntIdRegister_OntologyOntIdRegister* temp = ont_id_register_;
  ont_id_register_ = nullptr;
  return temp;
}
inline ::OntologySignOntIdRegister_OntologyOntIdRegister* OntologySignOntIdRegister::mutable_ont_id_register() {
  _has_bits_[0] |= 0x00000002u;
  if (ont_id_register_ == nullptr) {
    auto* p = CreateMaybeMessage<::OntologySignOntIdRegister_OntologyOntIdRegister>(GetArenaNoVirtual());
    ont_id_register_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdRegister.ont_id_register)
  return ont_id_register_;
}
inline void OntologySignOntIdRegister::set_allocated_ont_id_register(::OntologySignOntIdRegister_OntologyOntIdRegister* ont_id_register) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ont_id_register_;
  }
  if (ont_id_register) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ont_id_register = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ont_id_register, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  ont_id_register_ = ont_id_register;
  // @@protoc_insertion_point(field_set_allocated:OntologySignOntIdRegister.ont_id_register)
}

// -------------------------------------------------------------------

// OntologySignedOntIdRegister

// optional bytes signature = 1;
inline bool OntologySignedOntIdRegister::has_signature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignedOntIdRegister::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologySignedOntIdRegister::signature() const {
  // @@protoc_insertion_point(field_get:OntologySignedOntIdRegister.signature)
  return signature_.GetNoArena();
}
inline void OntologySignedOntIdRegister::set_signature(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignedOntIdRegister.signature)
}
#if LANG_CXX11
inline void OntologySignedOntIdRegister::set_signature(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignedOntIdRegister.signature)
}
#endif
inline void OntologySignedOntIdRegister::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignedOntIdRegister.signature)
}
inline void OntologySignedOntIdRegister::set_signature(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignedOntIdRegister.signature)
}
inline ::std::string* OntologySignedOntIdRegister::mutable_signature() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologySignedOntIdRegister.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignedOntIdRegister::release_signature() {
  // @@protoc_insertion_point(field_release:OntologySignedOntIdRegister.signature)
  if (!has_signature()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return signature_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignedOntIdRegister::set_allocated_signature(::std::string* signature) {
  if (signature != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:OntologySignedOntIdRegister.signature)
}

// optional bytes payload = 2;
inline bool OntologySignedOntIdRegister::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignedOntIdRegister::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& OntologySignedOntIdRegister::payload() const {
  // @@protoc_insertion_point(field_get:OntologySignedOntIdRegister.payload)
  return payload_.GetNoArena();
}
inline void OntologySignedOntIdRegister::set_payload(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignedOntIdRegister.payload)
}
#if LANG_CXX11
inline void OntologySignedOntIdRegister::set_payload(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignedOntIdRegister.payload)
}
#endif
inline void OntologySignedOntIdRegister::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignedOntIdRegister.payload)
}
inline void OntologySignedOntIdRegister::set_payload(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignedOntIdRegister.payload)
}
inline ::std::string* OntologySignedOntIdRegister::mutable_payload() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:OntologySignedOntIdRegister.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignedOntIdRegister::release_payload() {
  // @@protoc_insertion_point(field_release:OntologySignedOntIdRegister.payload)
  if (!has_payload()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return payload_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignedOntIdRegister::set_allocated_payload(::std::string* payload) {
  if (payload != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:OntologySignedOntIdRegister.payload)
}

// -------------------------------------------------------------------

// OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute

// optional string key = 1;
inline bool OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::key() const {
  // @@protoc_insertion_point(field_get:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.key)
  return key_.GetNoArena();
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_key(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.key)
}
#if LANG_CXX11
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_key(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.key)
}
#endif
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.key)
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_key(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.key)
}
inline ::std::string* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::mutable_key() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::release_key() {
  // @@protoc_insertion_point(field_release:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.key)
  if (!has_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.key)
}

// optional string type = 2;
inline bool OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::type() const {
  // @@protoc_insertion_point(field_get:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.type)
  return type_.GetNoArena();
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_type(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.type)
}
#if LANG_CXX11
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_type(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.type)
}
#endif
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.type)
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_type(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.type)
}
inline ::std::string* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::mutable_type() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::release_type() {
  // @@protoc_insertion_point(field_release:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.type)
  if (!has_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return type_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_allocated_type(::std::string* type) {
  if (type != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.type)
}

// optional string value = 3;
inline bool OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::value() const {
  // @@protoc_insertion_point(field_get:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.value)
  return value_.GetNoArena();
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.value)
}
#if LANG_CXX11
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.value)
}
#endif
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.value)
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.value)
}
inline ::std::string* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::mutable_value() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::release_value() {
  // @@protoc_insertion_point(field_release:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute.value)
}

// -------------------------------------------------------------------

// OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes

// optional string ont_id = 1;
inline bool OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::has_ont_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::clear_ont_id() {
  ont_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::ont_id() const {
  // @@protoc_insertion_point(field_get:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id)
  return ont_id_.GetNoArena();
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::set_ont_id(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  ont_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id)
}
#if LANG_CXX11
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::set_ont_id(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  ont_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id)
}
#endif
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::set_ont_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  ont_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id)
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::set_ont_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  ont_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id)
}
inline ::std::string* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::mutable_ont_id() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id)
  return ont_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::release_ont_id() {
  // @@protoc_insertion_point(field_release:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id)
  if (!has_ont_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return ont_id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::set_allocated_ont_id(::std::string* ont_id) {
  if (ont_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ont_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ont_id);
  // @@protoc_insertion_point(field_set_allocated:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id)
}

// optional bytes public_key = 2;
inline bool OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::has_public_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::public_key() const {
  // @@protoc_insertion_point(field_get:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.public_key)
  return public_key_.GetNoArena();
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::set_public_key(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.public_key)
}
#if LANG_CXX11
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::set_public_key(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.public_key)
}
#endif
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.public_key)
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::set_public_key(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.public_key)
}
inline ::std::string* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::mutable_public_key() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::release_public_key() {
  // @@protoc_insertion_point(field_release:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.public_key)
  if (!has_public_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return public_key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::set_allocated_public_key(::std::string* public_key) {
  if (public_key != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.public_key)
}

// repeated .OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.OntologyOntIdAttribute ont_id_attributes = 3;
inline int OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::ont_id_attributes_size() const {
  return ont_id_attributes_.size();
}
inline void OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::clear_ont_id_attributes() {
  ont_id_attributes_.Clear();
}
inline ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::mutable_ont_id_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id_attributes)
  return ont_id_attributes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute >*
OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::mutable_ont_id_attributes() {
  // @@protoc_insertion_point(field_mutable_list:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id_attributes)
  return &ont_id_attributes_;
}
inline const ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute& OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::ont_id_attributes(int index) const {
  // @@protoc_insertion_point(field_get:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id_attributes)
  return ont_id_attributes_.Get(index);
}
inline ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute* OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::add_ont_id_attributes() {
  // @@protoc_insertion_point(field_add:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id_attributes)
  return ont_id_attributes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_OntologyOntIdAttribute >&
OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes::ont_id_attributes() const {
  // @@protoc_insertion_point(field_list:OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes.ont_id_attributes)
  return ont_id_attributes_;
}

// -------------------------------------------------------------------

// OntologySignOntIdAddAttributes

// repeated uint32 address_n = 1;
inline int OntologySignOntIdAddAttributes::address_n_size() const {
  return address_n_.size();
}
inline void OntologySignOntIdAddAttributes::clear_address_n() {
  address_n_.Clear();
}
inline ::google::protobuf::uint32 OntologySignOntIdAddAttributes::address_n(int index) const {
  // @@protoc_insertion_point(field_get:OntologySignOntIdAddAttributes.address_n)
  return address_n_.Get(index);
}
inline void OntologySignOntIdAddAttributes::set_address_n(int index, ::google::protobuf::uint32 value) {
  address_n_.Set(index, value);
  // @@protoc_insertion_point(field_set:OntologySignOntIdAddAttributes.address_n)
}
inline void OntologySignOntIdAddAttributes::add_address_n(::google::protobuf::uint32 value) {
  address_n_.Add(value);
  // @@protoc_insertion_point(field_add:OntologySignOntIdAddAttributes.address_n)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OntologySignOntIdAddAttributes::address_n() const {
  // @@protoc_insertion_point(field_list:OntologySignOntIdAddAttributes.address_n)
  return address_n_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OntologySignOntIdAddAttributes::mutable_address_n() {
  // @@protoc_insertion_point(field_mutable_list:OntologySignOntIdAddAttributes.address_n)
  return &address_n_;
}

// optional .OntologyTransaction transaction = 2;
inline bool OntologySignOntIdAddAttributes::has_transaction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignOntIdAddAttributes::clear_transaction() {
  if (transaction_ != nullptr) transaction_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::OntologyTransaction& OntologySignOntIdAddAttributes::transaction() const {
  const ::OntologyTransaction* p = transaction_;
  // @@protoc_insertion_point(field_get:OntologySignOntIdAddAttributes.transaction)
  return p != nullptr ? *p : *reinterpret_cast<const ::OntologyTransaction*>(
      &::_OntologyTransaction_default_instance_);
}
inline ::OntologyTransaction* OntologySignOntIdAddAttributes::release_transaction() {
  // @@protoc_insertion_point(field_release:OntologySignOntIdAddAttributes.transaction)
  _has_bits_[0] &= ~0x00000001u;
  ::OntologyTransaction* temp = transaction_;
  transaction_ = nullptr;
  return temp;
}
inline ::OntologyTransaction* OntologySignOntIdAddAttributes::mutable_transaction() {
  _has_bits_[0] |= 0x00000001u;
  if (transaction_ == nullptr) {
    auto* p = CreateMaybeMessage<::OntologyTransaction>(GetArenaNoVirtual());
    transaction_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdAddAttributes.transaction)
  return transaction_;
}
inline void OntologySignOntIdAddAttributes::set_allocated_transaction(::OntologyTransaction* transaction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete transaction_;
  }
  if (transaction) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      transaction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transaction, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  transaction_ = transaction;
  // @@protoc_insertion_point(field_set_allocated:OntologySignOntIdAddAttributes.transaction)
}

// optional .OntologySignOntIdAddAttributes.OntologyOntIdAddAttributes ont_id_add_attributes = 3;
inline bool OntologySignOntIdAddAttributes::has_ont_id_add_attributes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignOntIdAddAttributes::clear_ont_id_add_attributes() {
  if (ont_id_add_attributes_ != nullptr) ont_id_add_attributes_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes& OntologySignOntIdAddAttributes::ont_id_add_attributes() const {
  const ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* p = ont_id_add_attributes_;
  // @@protoc_insertion_point(field_get:OntologySignOntIdAddAttributes.ont_id_add_attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes*>(
      &::_OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes_default_instance_);
}
inline ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* OntologySignOntIdAddAttributes::release_ont_id_add_attributes() {
  // @@protoc_insertion_point(field_release:OntologySignOntIdAddAttributes.ont_id_add_attributes)
  _has_bits_[0] &= ~0x00000002u;
  ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* temp = ont_id_add_attributes_;
  ont_id_add_attributes_ = nullptr;
  return temp;
}
inline ::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* OntologySignOntIdAddAttributes::mutable_ont_id_add_attributes() {
  _has_bits_[0] |= 0x00000002u;
  if (ont_id_add_attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes>(GetArenaNoVirtual());
    ont_id_add_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:OntologySignOntIdAddAttributes.ont_id_add_attributes)
  return ont_id_add_attributes_;
}
inline void OntologySignOntIdAddAttributes::set_allocated_ont_id_add_attributes(::OntologySignOntIdAddAttributes_OntologyOntIdAddAttributes* ont_id_add_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ont_id_add_attributes_;
  }
  if (ont_id_add_attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ont_id_add_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ont_id_add_attributes, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  ont_id_add_attributes_ = ont_id_add_attributes;
  // @@protoc_insertion_point(field_set_allocated:OntologySignOntIdAddAttributes.ont_id_add_attributes)
}

// -------------------------------------------------------------------

// OntologySignedOntIdAddAttributes

// optional bytes signature = 1;
inline bool OntologySignedOntIdAddAttributes::has_signature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OntologySignedOntIdAddAttributes::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& OntologySignedOntIdAddAttributes::signature() const {
  // @@protoc_insertion_point(field_get:OntologySignedOntIdAddAttributes.signature)
  return signature_.GetNoArena();
}
inline void OntologySignedOntIdAddAttributes::set_signature(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignedOntIdAddAttributes.signature)
}
#if LANG_CXX11
inline void OntologySignedOntIdAddAttributes::set_signature(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignedOntIdAddAttributes.signature)
}
#endif
inline void OntologySignedOntIdAddAttributes::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignedOntIdAddAttributes.signature)
}
inline void OntologySignedOntIdAddAttributes::set_signature(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignedOntIdAddAttributes.signature)
}
inline ::std::string* OntologySignedOntIdAddAttributes::mutable_signature() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:OntologySignedOntIdAddAttributes.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignedOntIdAddAttributes::release_signature() {
  // @@protoc_insertion_point(field_release:OntologySignedOntIdAddAttributes.signature)
  if (!has_signature()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return signature_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignedOntIdAddAttributes::set_allocated_signature(::std::string* signature) {
  if (signature != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:OntologySignedOntIdAddAttributes.signature)
}

// optional bytes payload = 2;
inline bool OntologySignedOntIdAddAttributes::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OntologySignedOntIdAddAttributes::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& OntologySignedOntIdAddAttributes::payload() const {
  // @@protoc_insertion_point(field_get:OntologySignedOntIdAddAttributes.payload)
  return payload_.GetNoArena();
}
inline void OntologySignedOntIdAddAttributes::set_payload(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OntologySignedOntIdAddAttributes.payload)
}
#if LANG_CXX11
inline void OntologySignedOntIdAddAttributes::set_payload(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OntologySignedOntIdAddAttributes.payload)
}
#endif
inline void OntologySignedOntIdAddAttributes::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OntologySignedOntIdAddAttributes.payload)
}
inline void OntologySignedOntIdAddAttributes::set_payload(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OntologySignedOntIdAddAttributes.payload)
}
inline ::std::string* OntologySignedOntIdAddAttributes::mutable_payload() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:OntologySignedOntIdAddAttributes.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OntologySignedOntIdAddAttributes::release_payload() {
  // @@protoc_insertion_point(field_release:OntologySignedOntIdAddAttributes.payload)
  if (!has_payload()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return payload_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OntologySignedOntIdAddAttributes::set_allocated_payload(::std::string* payload) {
  if (payload != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:OntologySignedOntIdAddAttributes.payload)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::OntologySignTransfer_OntologyTransfer_OntologyAsset> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OntologySignTransfer_OntologyTransfer_OntologyAsset>() {
  return ::OntologySignTransfer_OntologyTransfer_OntologyAsset_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_messages_2dontology_2eproto
