// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages-stellar.proto

#include "messages-stellar.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_messages_2dstellar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StellarAssetType_messages_2dstellar_2eproto;
namespace hw {
namespace trezor {
namespace messages {
namespace stellar {
class StellarAssetTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarAssetType> _instance;
} _StellarAssetType_default_instance_;
class StellarGetAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarGetAddress> _instance;
} _StellarGetAddress_default_instance_;
class StellarAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarAddress> _instance;
} _StellarAddress_default_instance_;
class StellarSignTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarSignTx> _instance;
} _StellarSignTx_default_instance_;
class StellarTxOpRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarTxOpRequest> _instance;
} _StellarTxOpRequest_default_instance_;
class StellarPaymentOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarPaymentOp> _instance;
} _StellarPaymentOp_default_instance_;
class StellarCreateAccountOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarCreateAccountOp> _instance;
} _StellarCreateAccountOp_default_instance_;
class StellarPathPaymentOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarPathPaymentOp> _instance;
} _StellarPathPaymentOp_default_instance_;
class StellarManageOfferOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarManageOfferOp> _instance;
} _StellarManageOfferOp_default_instance_;
class StellarCreatePassiveOfferOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarCreatePassiveOfferOp> _instance;
} _StellarCreatePassiveOfferOp_default_instance_;
class StellarSetOptionsOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarSetOptionsOp> _instance;
} _StellarSetOptionsOp_default_instance_;
class StellarChangeTrustOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarChangeTrustOp> _instance;
} _StellarChangeTrustOp_default_instance_;
class StellarAllowTrustOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarAllowTrustOp> _instance;
} _StellarAllowTrustOp_default_instance_;
class StellarAccountMergeOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarAccountMergeOp> _instance;
} _StellarAccountMergeOp_default_instance_;
class StellarManageDataOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarManageDataOp> _instance;
} _StellarManageDataOp_default_instance_;
class StellarBumpSequenceOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarBumpSequenceOp> _instance;
} _StellarBumpSequenceOp_default_instance_;
class StellarSignedTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StellarSignedTx> _instance;
} _StellarSignedTx_default_instance_;
}  // namespace stellar
}  // namespace messages
}  // namespace trezor
}  // namespace hw
static void InitDefaultsStellarAssetType_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarAssetType_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarAssetType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarAssetType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarAssetType_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarAssetType_messages_2dstellar_2eproto}, {}};

static void InitDefaultsStellarGetAddress_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarGetAddress_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarGetAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarGetAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarGetAddress_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarGetAddress_messages_2dstellar_2eproto}, {}};

static void InitDefaultsStellarAddress_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarAddress_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarAddress_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarAddress_messages_2dstellar_2eproto}, {}};

static void InitDefaultsStellarSignTx_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarSignTx_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarSignTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarSignTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarSignTx_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarSignTx_messages_2dstellar_2eproto}, {}};

static void InitDefaultsStellarTxOpRequest_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarTxOpRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarTxOpRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarTxOpRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarTxOpRequest_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarTxOpRequest_messages_2dstellar_2eproto}, {}};

static void InitDefaultsStellarPaymentOp_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarPaymentOp_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarPaymentOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarPaymentOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StellarPaymentOp_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStellarPaymentOp_messages_2dstellar_2eproto}, {
      &scc_info_StellarAssetType_messages_2dstellar_2eproto.base,}};

static void InitDefaultsStellarCreateAccountOp_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarCreateAccountOp_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarCreateAccountOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarCreateAccountOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarCreateAccountOp_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarCreateAccountOp_messages_2dstellar_2eproto}, {}};

static void InitDefaultsStellarPathPaymentOp_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarPathPaymentOp_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarPathPaymentOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarPathPaymentOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StellarPathPaymentOp_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStellarPathPaymentOp_messages_2dstellar_2eproto}, {
      &scc_info_StellarAssetType_messages_2dstellar_2eproto.base,}};

static void InitDefaultsStellarManageOfferOp_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarManageOfferOp_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarManageOfferOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarManageOfferOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StellarManageOfferOp_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStellarManageOfferOp_messages_2dstellar_2eproto}, {
      &scc_info_StellarAssetType_messages_2dstellar_2eproto.base,}};

static void InitDefaultsStellarCreatePassiveOfferOp_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarCreatePassiveOfferOp_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StellarCreatePassiveOfferOp_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStellarCreatePassiveOfferOp_messages_2dstellar_2eproto}, {
      &scc_info_StellarAssetType_messages_2dstellar_2eproto.base,}};

static void InitDefaultsStellarSetOptionsOp_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarSetOptionsOp_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarSetOptionsOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarSetOptionsOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarSetOptionsOp_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarSetOptionsOp_messages_2dstellar_2eproto}, {}};

static void InitDefaultsStellarChangeTrustOp_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarChangeTrustOp_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarChangeTrustOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarChangeTrustOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StellarChangeTrustOp_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStellarChangeTrustOp_messages_2dstellar_2eproto}, {
      &scc_info_StellarAssetType_messages_2dstellar_2eproto.base,}};

static void InitDefaultsStellarAllowTrustOp_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarAllowTrustOp_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarAllowTrustOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarAllowTrustOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarAllowTrustOp_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarAllowTrustOp_messages_2dstellar_2eproto}, {}};

static void InitDefaultsStellarAccountMergeOp_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarAccountMergeOp_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarAccountMergeOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarAccountMergeOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarAccountMergeOp_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarAccountMergeOp_messages_2dstellar_2eproto}, {}};

static void InitDefaultsStellarManageDataOp_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarManageDataOp_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarManageDataOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarManageDataOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarManageDataOp_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarManageDataOp_messages_2dstellar_2eproto}, {}};

static void InitDefaultsStellarBumpSequenceOp_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarBumpSequenceOp_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarBumpSequenceOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarBumpSequenceOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarBumpSequenceOp_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarBumpSequenceOp_messages_2dstellar_2eproto}, {}};

static void InitDefaultsStellarSignedTx_messages_2dstellar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::stellar::_StellarSignedTx_default_instance_;
    new (ptr) ::hw::trezor::messages::stellar::StellarSignedTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::stellar::StellarSignedTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StellarSignedTx_messages_2dstellar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStellarSignedTx_messages_2dstellar_2eproto}, {}};

void InitDefaults_messages_2dstellar_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_StellarAssetType_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarGetAddress_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarAddress_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarSignTx_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarTxOpRequest_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarPaymentOp_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarCreateAccountOp_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarPathPaymentOp_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarManageOfferOp_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarCreatePassiveOfferOp_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarSetOptionsOp_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarChangeTrustOp_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarAllowTrustOp_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarAccountMergeOp_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarManageDataOp_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarBumpSequenceOp_messages_2dstellar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StellarSignedTx_messages_2dstellar_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_messages_2dstellar_2eproto[17];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_messages_2dstellar_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_messages_2dstellar_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_messages_2dstellar_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAssetType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAssetType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAssetType, type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAssetType, code_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAssetType, issuer_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarGetAddress, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarGetAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarGetAddress, address_n_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarGetAddress, show_display_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAddress, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAddress, address_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, address_n_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, network_passphrase_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, fee_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, sequence_number_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, timebounds_start_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, timebounds_end_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, memo_type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, memo_text_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, memo_id_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, memo_hash_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignTx, num_operations_),
  ~0u,
  0,
  1,
  5,
  4,
  6,
  7,
  8,
  2,
  9,
  3,
  10,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarTxOpRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarTxOpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPaymentOp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPaymentOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPaymentOp, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPaymentOp, destination_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPaymentOp, asset_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPaymentOp, amount_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreateAccountOp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreateAccountOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreateAccountOp, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreateAccountOp, new_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreateAccountOp, starting_balance_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPathPaymentOp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPathPaymentOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPathPaymentOp, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPathPaymentOp, send_asset_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPathPaymentOp, send_max_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPathPaymentOp, destination_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPathPaymentOp, destination_asset_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPathPaymentOp, destination_amount_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarPathPaymentOp, paths_),
  0,
  2,
  4,
  1,
  3,
  5,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageOfferOp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageOfferOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageOfferOp, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageOfferOp, selling_asset_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageOfferOp, buying_asset_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageOfferOp, amount_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageOfferOp, price_n_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageOfferOp, price_d_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageOfferOp, offer_id_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp, selling_asset_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp, buying_asset_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp, amount_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp, price_n_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp, price_d_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, inflation_destination_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, clear_flags_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, set_flags_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, master_weight_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, low_threshold_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, medium_threshold_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, high_threshold_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, home_domain_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, signer_type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, signer_key_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSetOptionsOp, signer_weight_),
  0,
  1,
  4,
  5,
  6,
  7,
  8,
  9,
  2,
  10,
  3,
  11,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarChangeTrustOp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarChangeTrustOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarChangeTrustOp, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarChangeTrustOp, asset_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarChangeTrustOp, limit_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAllowTrustOp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAllowTrustOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAllowTrustOp, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAllowTrustOp, trusted_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAllowTrustOp, asset_type_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAllowTrustOp, asset_code_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAllowTrustOp, is_authorized_),
  0,
  1,
  3,
  2,
  4,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAccountMergeOp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAccountMergeOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAccountMergeOp, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarAccountMergeOp, destination_account_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageDataOp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageDataOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageDataOp, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageDataOp, key_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarManageDataOp, value_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarBumpSequenceOp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarBumpSequenceOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarBumpSequenceOp, source_account_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarBumpSequenceOp, bump_to_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignedTx, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignedTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignedTx, public_key_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::stellar::StellarSignedTx, signature_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::hw::trezor::messages::stellar::StellarAssetType)},
  { 11, 18, sizeof(::hw::trezor::messages::stellar::StellarGetAddress)},
  { 20, 26, sizeof(::hw::trezor::messages::stellar::StellarAddress)},
  { 27, 44, sizeof(::hw::trezor::messages::stellar::StellarSignTx)},
  { 56, 61, sizeof(::hw::trezor::messages::stellar::StellarTxOpRequest)},
  { 61, 70, sizeof(::hw::trezor::messages::stellar::StellarPaymentOp)},
  { 74, 82, sizeof(::hw::trezor::messages::stellar::StellarCreateAccountOp)},
  { 85, 97, sizeof(::hw::trezor::messages::stellar::StellarPathPaymentOp)},
  { 104, 116, sizeof(::hw::trezor::messages::stellar::StellarManageOfferOp)},
  { 123, 134, sizeof(::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp)},
  { 140, 157, sizeof(::hw::trezor::messages::stellar::StellarSetOptionsOp)},
  { 169, 177, sizeof(::hw::trezor::messages::stellar::StellarChangeTrustOp)},
  { 180, 190, sizeof(::hw::trezor::messages::stellar::StellarAllowTrustOp)},
  { 195, 202, sizeof(::hw::trezor::messages::stellar::StellarAccountMergeOp)},
  { 204, 212, sizeof(::hw::trezor::messages::stellar::StellarManageDataOp)},
  { 215, 222, sizeof(::hw::trezor::messages::stellar::StellarBumpSequenceOp)},
  { 224, 231, sizeof(::hw::trezor::messages::stellar::StellarSignedTx)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarAssetType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarGetAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarSignTx_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarTxOpRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarPaymentOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarCreateAccountOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarPathPaymentOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarManageOfferOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarCreatePassiveOfferOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarSetOptionsOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarChangeTrustOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarAllowTrustOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarAccountMergeOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarManageDataOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarBumpSequenceOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::stellar::_StellarSignedTx_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_messages_2dstellar_2eproto = {
  {}, AddDescriptors_messages_2dstellar_2eproto, "messages-stellar.proto", schemas,
  file_default_instances, TableStruct_messages_2dstellar_2eproto::offsets,
  file_level_metadata_messages_2dstellar_2eproto, 17, file_level_enum_descriptors_messages_2dstellar_2eproto, file_level_service_descriptors_messages_2dstellar_2eproto,
};

const char descriptor_table_protodef_messages_2dstellar_2eproto[] =
  "\n\026messages-stellar.proto\022\032hw.trezor.mess"
  "ages.stellar\">\n\020StellarAssetType\022\014\n\004type"
  "\030\001 \001(\r\022\014\n\004code\030\002 \001(\t\022\016\n\006issuer\030\003 \001(\t\"<\n\021"
  "StellarGetAddress\022\021\n\taddress_n\030\001 \003(\r\022\024\n\014"
  "show_display\030\002 \001(\010\"!\n\016StellarAddress\022\017\n\007"
  "address\030\001 \001(\t\"\220\002\n\rStellarSignTx\022\021\n\taddre"
  "ss_n\030\002 \003(\r\022\032\n\022network_passphrase\030\003 \001(\t\022\026"
  "\n\016source_account\030\004 \001(\t\022\013\n\003fee\030\005 \001(\r\022\027\n\017s"
  "equence_number\030\006 \001(\004\022\030\n\020timebounds_start"
  "\030\010 \001(\r\022\026\n\016timebounds_end\030\t \001(\r\022\021\n\tmemo_t"
  "ype\030\n \001(\r\022\021\n\tmemo_text\030\013 \001(\t\022\017\n\007memo_id\030"
  "\014 \001(\004\022\021\n\tmemo_hash\030\r \001(\014\022\026\n\016num_operatio"
  "ns\030\016 \001(\r\"\024\n\022StellarTxOpRequest\"\224\001\n\020Stell"
  "arPaymentOp\022\026\n\016source_account\030\001 \001(\t\022\033\n\023d"
  "estination_account\030\002 \001(\t\022;\n\005asset\030\003 \001(\0132"
  ",.hw.trezor.messages.stellar.StellarAsse"
  "tType\022\016\n\006amount\030\004 \001(\022\"_\n\026StellarCreateAc"
  "countOp\022\026\n\016source_account\030\001 \001(\t\022\023\n\013new_a"
  "ccount\030\002 \001(\t\022\030\n\020starting_balance\030\003 \001(\022\"\301"
  "\002\n\024StellarPathPaymentOp\022\026\n\016source_accoun"
  "t\030\001 \001(\t\022@\n\nsend_asset\030\002 \001(\0132,.hw.trezor."
  "messages.stellar.StellarAssetType\022\020\n\010sen"
  "d_max\030\003 \001(\022\022\033\n\023destination_account\030\004 \001(\t"
  "\022G\n\021destination_asset\030\005 \001(\0132,.hw.trezor."
  "messages.stellar.StellarAssetType\022\032\n\022des"
  "tination_amount\030\006 \001(\022\022;\n\005paths\030\007 \003(\0132,.h"
  "w.trezor.messages.stellar.StellarAssetTy"
  "pe\"\373\001\n\024StellarManageOfferOp\022\026\n\016source_ac"
  "count\030\001 \001(\t\022C\n\rselling_asset\030\002 \001(\0132,.hw."
  "trezor.messages.stellar.StellarAssetType"
  "\022B\n\014buying_asset\030\003 \001(\0132,.hw.trezor.messa"
  "ges.stellar.StellarAssetType\022\016\n\006amount\030\004"
  " \001(\022\022\017\n\007price_n\030\005 \001(\r\022\017\n\007price_d\030\006 \001(\r\022\020"
  "\n\010offer_id\030\007 \001(\004\"\360\001\n\033StellarCreatePassiv"
  "eOfferOp\022\026\n\016source_account\030\001 \001(\t\022C\n\rsell"
  "ing_asset\030\002 \001(\0132,.hw.trezor.messages.ste"
  "llar.StellarAssetType\022B\n\014buying_asset\030\003 "
  "\001(\0132,.hw.trezor.messages.stellar.Stellar"
  "AssetType\022\016\n\006amount\030\004 \001(\022\022\017\n\007price_n\030\005 \001"
  "(\r\022\017\n\007price_d\030\006 \001(\r\"\261\002\n\023StellarSetOption"
  "sOp\022\026\n\016source_account\030\001 \001(\t\022%\n\035inflation"
  "_destination_account\030\002 \001(\t\022\023\n\013clear_flag"
  "s\030\003 \001(\r\022\021\n\tset_flags\030\004 \001(\r\022\025\n\rmaster_wei"
  "ght\030\005 \001(\r\022\025\n\rlow_threshold\030\006 \001(\r\022\030\n\020medi"
  "um_threshold\030\007 \001(\r\022\026\n\016high_threshold\030\010 \001"
  "(\r\022\023\n\013home_domain\030\t \001(\t\022\023\n\013signer_type\030\n"
  " \001(\r\022\022\n\nsigner_key\030\013 \001(\014\022\025\n\rsigner_weigh"
  "t\030\014 \001(\r\"z\n\024StellarChangeTrustOp\022\026\n\016sourc"
  "e_account\030\001 \001(\t\022;\n\005asset\030\002 \001(\0132,.hw.trez"
  "or.messages.stellar.StellarAssetType\022\r\n\005"
  "limit\030\003 \001(\004\"\205\001\n\023StellarAllowTrustOp\022\026\n\016s"
  "ource_account\030\001 \001(\t\022\027\n\017trusted_account\030\002"
  " \001(\t\022\022\n\nasset_type\030\003 \001(\r\022\022\n\nasset_code\030\004"
  " \001(\t\022\025\n\ris_authorized\030\005 \001(\r\"L\n\025StellarAc"
  "countMergeOp\022\026\n\016source_account\030\001 \001(\t\022\033\n\023"
  "destination_account\030\002 \001(\t\"I\n\023StellarMana"
  "geDataOp\022\026\n\016source_account\030\001 \001(\t\022\013\n\003key\030"
  "\002 \001(\t\022\r\n\005value\030\003 \001(\014\"@\n\025StellarBumpSeque"
  "nceOp\022\026\n\016source_account\030\001 \001(\t\022\017\n\007bump_to"
  "\030\002 \001(\004\"8\n\017StellarSignedTx\022\022\n\npublic_key\030"
  "\001 \001(\014\022\021\n\tsignature\030\002 \001(\014B;\n#com.satoshil"
  "abs.trezor.lib.protobufB\024TrezorMessageSt"
  "ellar"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_messages_2dstellar_2eproto = {
  false, InitDefaults_messages_2dstellar_2eproto, 
  descriptor_table_protodef_messages_2dstellar_2eproto,
  "messages-stellar.proto", &assign_descriptors_table_messages_2dstellar_2eproto, 2485,
};

void AddDescriptors_messages_2dstellar_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_messages_2dstellar_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messages_2dstellar_2eproto = []() { AddDescriptors_messages_2dstellar_2eproto(); return true; }();
namespace hw {
namespace trezor {
namespace messages {
namespace stellar {

// ===================================================================

void StellarAssetType::InitAsDefaultInstance() {
}
class StellarAssetType::HasBitSetters {
 public:
  static void set_has_type(StellarAssetType* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_code(StellarAssetType* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_issuer(StellarAssetType* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarAssetType::kTypeFieldNumber;
const int StellarAssetType::kCodeFieldNumber;
const int StellarAssetType::kIssuerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarAssetType::StellarAssetType()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarAssetType)
}
StellarAssetType::StellarAssetType(const StellarAssetType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_issuer()) {
    issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarAssetType)
}

void StellarAssetType::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarAssetType_messages_2dstellar_2eproto.base);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0u;
}

StellarAssetType::~StellarAssetType() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarAssetType)
  SharedDtor();
}

void StellarAssetType::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issuer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StellarAssetType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarAssetType& StellarAssetType::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarAssetType_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarAssetType::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarAssetType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      code_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      issuer_.ClearNonDefaultToEmptyNoArena();
    }
  }
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarAssetType::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarAssetType*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string code = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarAssetType.code");
        object = msg->mutable_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string issuer = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarAssetType.issuer");
        object = msg->mutable_issuer();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarAssetType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarAssetType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarAssetType.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string issuer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->issuer().data(), static_cast<int>(this->issuer().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarAssetType.issuer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarAssetType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarAssetType)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarAssetType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarAssetType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional string code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAssetType.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // optional string issuer = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAssetType.issuer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->issuer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarAssetType)
}

::google::protobuf::uint8* StellarAssetType::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarAssetType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional string code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAssetType.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // optional string issuer = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAssetType.issuer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->issuer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarAssetType)
  return target;
}

size_t StellarAssetType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarAssetType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string code = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional string issuer = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->issuer());
    }

    // optional uint32 type = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarAssetType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarAssetType)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarAssetType* source =
      ::google::protobuf::DynamicCastToGenerated<StellarAssetType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarAssetType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarAssetType)
    MergeFrom(*source);
  }
}

void StellarAssetType::MergeFrom(const StellarAssetType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarAssetType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StellarAssetType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarAssetType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarAssetType::CopyFrom(const StellarAssetType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarAssetType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarAssetType::IsInitialized() const {
  return true;
}

void StellarAssetType::Swap(StellarAssetType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarAssetType::InternalSwap(StellarAssetType* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  issuer_.Swap(&other->issuer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
}

::google::protobuf::Metadata StellarAssetType::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarGetAddress::InitAsDefaultInstance() {
}
class StellarGetAddress::HasBitSetters {
 public:
  static void set_has_show_display(StellarGetAddress* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarGetAddress::kAddressNFieldNumber;
const int StellarGetAddress::kShowDisplayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarGetAddress::StellarGetAddress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarGetAddress)
}
StellarGetAddress::StellarGetAddress(const StellarGetAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  show_display_ = from.show_display_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarGetAddress)
}

void StellarGetAddress::SharedCtor() {
  show_display_ = false;
}

StellarGetAddress::~StellarGetAddress() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarGetAddress)
  SharedDtor();
}

void StellarGetAddress::SharedDtor() {
}

void StellarGetAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarGetAddress& StellarGetAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarGetAddress_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarGetAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  show_display_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarGetAddress::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarGetAddress*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_address_n(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_address_n();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional bool show_display = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_show_display(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarGetAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarGetAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_address_n())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_display = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_show_display(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_display_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarGetAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarGetAddress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarGetAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->show_display(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarGetAddress)
}

::google::protobuf::uint8* StellarGetAddress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarGetAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional bool show_display = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->show_display(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarGetAddress)
  return target;
}

size_t StellarGetAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarGetAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 address_n = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  // optional bool show_display = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarGetAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarGetAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarGetAddress* source =
      ::google::protobuf::DynamicCastToGenerated<StellarGetAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarGetAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarGetAddress)
    MergeFrom(*source);
  }
}

void StellarGetAddress::MergeFrom(const StellarGetAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarGetAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  if (from.has_show_display()) {
    set_show_display(from.show_display());
  }
}

void StellarGetAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarGetAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarGetAddress::CopyFrom(const StellarGetAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarGetAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarGetAddress::IsInitialized() const {
  return true;
}

void StellarGetAddress::Swap(StellarGetAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarGetAddress::InternalSwap(StellarGetAddress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  address_n_.InternalSwap(&other->address_n_);
  swap(show_display_, other->show_display_);
}

::google::protobuf::Metadata StellarGetAddress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarAddress::InitAsDefaultInstance() {
}
class StellarAddress::HasBitSetters {
 public:
  static void set_has_address(StellarAddress* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarAddress::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarAddress::StellarAddress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarAddress)
}
StellarAddress::StellarAddress(const StellarAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_address()) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarAddress)
}

void StellarAddress::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarAddress_messages_2dstellar_2eproto.base);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StellarAddress::~StellarAddress() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarAddress)
  SharedDtor();
}

void StellarAddress::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StellarAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarAddress& StellarAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarAddress_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    address_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarAddress::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarAddress*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarAddress.address");
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarAddress.address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarAddress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAddress.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarAddress)
}

::google::protobuf::uint8* StellarAddress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAddress.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarAddress)
  return target;
}

size_t StellarAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string address = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarAddress* source =
      ::google::protobuf::DynamicCastToGenerated<StellarAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarAddress)
    MergeFrom(*source);
  }
}

void StellarAddress::MergeFrom(const StellarAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    _has_bits_[0] |= 0x00000001u;
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void StellarAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarAddress::CopyFrom(const StellarAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarAddress::IsInitialized() const {
  return true;
}

void StellarAddress::Swap(StellarAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarAddress::InternalSwap(StellarAddress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StellarAddress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarSignTx::InitAsDefaultInstance() {
}
class StellarSignTx::HasBitSetters {
 public:
  static void set_has_network_passphrase(StellarSignTx* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_source_account(StellarSignTx* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_fee(StellarSignTx* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_sequence_number(StellarSignTx* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_timebounds_start(StellarSignTx* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_timebounds_end(StellarSignTx* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_memo_type(StellarSignTx* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_memo_text(StellarSignTx* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_memo_id(StellarSignTx* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_memo_hash(StellarSignTx* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_num_operations(StellarSignTx* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarSignTx::kAddressNFieldNumber;
const int StellarSignTx::kNetworkPassphraseFieldNumber;
const int StellarSignTx::kSourceAccountFieldNumber;
const int StellarSignTx::kFeeFieldNumber;
const int StellarSignTx::kSequenceNumberFieldNumber;
const int StellarSignTx::kTimeboundsStartFieldNumber;
const int StellarSignTx::kTimeboundsEndFieldNumber;
const int StellarSignTx::kMemoTypeFieldNumber;
const int StellarSignTx::kMemoTextFieldNumber;
const int StellarSignTx::kMemoIdFieldNumber;
const int StellarSignTx::kMemoHashFieldNumber;
const int StellarSignTx::kNumOperationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarSignTx::StellarSignTx()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarSignTx)
}
StellarSignTx::StellarSignTx(const StellarSignTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      address_n_(from.address_n_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_network_passphrase()) {
    network_passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_passphrase_);
  }
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  memo_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_memo_text()) {
    memo_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_text_);
  }
  memo_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_memo_hash()) {
    memo_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_hash_);
  }
  ::memcpy(&sequence_number_, &from.sequence_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_operations_) -
    reinterpret_cast<char*>(&sequence_number_)) + sizeof(num_operations_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarSignTx)
}

void StellarSignTx::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarSignTx_messages_2dstellar_2eproto.base);
  network_passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sequence_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_operations_) -
      reinterpret_cast<char*>(&sequence_number_)) + sizeof(num_operations_));
}

StellarSignTx::~StellarSignTx() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarSignTx)
  SharedDtor();
}

void StellarSignTx::SharedDtor() {
  network_passphrase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StellarSignTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarSignTx& StellarSignTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarSignTx_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarSignTx::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarSignTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_n_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      network_passphrase_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      source_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      memo_text_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      memo_hash_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&sequence_number_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timebounds_end_) -
        reinterpret_cast<char*>(&sequence_number_)) + sizeof(timebounds_end_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&memo_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_operations_) -
        reinterpret_cast<char*>(&memo_type_)) + sizeof(num_operations_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarSignTx::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarSignTx*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 address_n = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_address_n(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_address_n();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional string network_passphrase = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarSignTx.network_passphrase");
        object = msg->mutable_network_passphrase();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string source_account = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarSignTx.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 fee = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_fee(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 sequence_number = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_sequence_number(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 timebounds_start = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_timebounds_start(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 timebounds_end = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_timebounds_end(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 memo_type = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_memo_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string memo_text = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarSignTx.memo_text");
        object = msg->mutable_memo_text();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint64 memo_id = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_memo_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes memo_hash = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_memo_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 num_operations = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        msg->set_num_operations(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarSignTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarSignTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 address_n = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_address_n())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_address_n())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string network_passphrase = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network_passphrase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->network_passphrase().data(), static_cast<int>(this->network_passphrase().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarSignTx.network_passphrase");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string source_account = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarSignTx.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 fee = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_fee(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 sequence_number = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_sequence_number(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timebounds_start = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_timebounds_start(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timebounds_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timebounds_end = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_timebounds_end(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timebounds_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 memo_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_memo_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &memo_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string memo_text = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->memo_text().data(), static_cast<int>(this->memo_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarSignTx.memo_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 memo_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          HasBitSetters::set_has_memo_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &memo_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes memo_hash = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_memo_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_operations = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {
          HasBitSetters::set_has_num_operations(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_operations_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarSignTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarSignTx)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarSignTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarSignTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 2;
  for (int i = 0, n = this->address_n_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->address_n(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string network_passphrase = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->network_passphrase().data(), static_cast<int>(this->network_passphrase().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSignTx.network_passphrase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->network_passphrase(), output);
  }

  // optional string source_account = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSignTx.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->source_account(), output);
  }

  // optional uint32 fee = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->fee(), output);
  }

  // optional uint64 sequence_number = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->sequence_number(), output);
  }

  // optional uint32 timebounds_start = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->timebounds_start(), output);
  }

  // optional uint32 timebounds_end = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timebounds_end(), output);
  }

  // optional uint32 memo_type = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->memo_type(), output);
  }

  // optional string memo_text = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->memo_text().data(), static_cast<int>(this->memo_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSignTx.memo_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->memo_text(), output);
  }

  // optional uint64 memo_id = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->memo_id(), output);
  }

  // optional bytes memo_hash = 13;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->memo_hash(), output);
  }

  // optional uint32 num_operations = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->num_operations(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarSignTx)
}

::google::protobuf::uint8* StellarSignTx::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarSignTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 address_n = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->address_n_, target);

  cached_has_bits = _has_bits_[0];
  // optional string network_passphrase = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->network_passphrase().data(), static_cast<int>(this->network_passphrase().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSignTx.network_passphrase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->network_passphrase(), target);
  }

  // optional string source_account = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSignTx.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->source_account(), target);
  }

  // optional uint32 fee = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->fee(), target);
  }

  // optional uint64 sequence_number = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->sequence_number(), target);
  }

  // optional uint32 timebounds_start = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->timebounds_start(), target);
  }

  // optional uint32 timebounds_end = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timebounds_end(), target);
  }

  // optional uint32 memo_type = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->memo_type(), target);
  }

  // optional string memo_text = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->memo_text().data(), static_cast<int>(this->memo_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSignTx.memo_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->memo_text(), target);
  }

  // optional uint64 memo_id = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->memo_id(), target);
  }

  // optional bytes memo_hash = 13;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->memo_hash(), target);
  }

  // optional uint32 num_operations = 14;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->num_operations(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarSignTx)
  return target;
}

size_t StellarSignTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarSignTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 address_n = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->address_n_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->address_n_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string network_passphrase = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->network_passphrase());
    }

    // optional string source_account = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional string memo_text = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->memo_text());
    }

    // optional bytes memo_hash = 13;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->memo_hash());
    }

    // optional uint64 sequence_number = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sequence_number());
    }

    // optional uint32 fee = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fee());
    }

    // optional uint32 timebounds_start = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timebounds_start());
    }

    // optional uint32 timebounds_end = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timebounds_end());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional uint32 memo_type = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->memo_type());
    }

    // optional uint64 memo_id = 12;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->memo_id());
    }

    // optional uint32 num_operations = 14;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_operations());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarSignTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarSignTx)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarSignTx* source =
      ::google::protobuf::DynamicCastToGenerated<StellarSignTx>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarSignTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarSignTx)
    MergeFrom(*source);
  }
}

void StellarSignTx::MergeFrom(const StellarSignTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarSignTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_n_.MergeFrom(from.address_n_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      network_passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.network_passphrase_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      memo_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_text_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      memo_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_hash_);
    }
    if (cached_has_bits & 0x00000010u) {
      sequence_number_ = from.sequence_number_;
    }
    if (cached_has_bits & 0x00000020u) {
      fee_ = from.fee_;
    }
    if (cached_has_bits & 0x00000040u) {
      timebounds_start_ = from.timebounds_start_;
    }
    if (cached_has_bits & 0x00000080u) {
      timebounds_end_ = from.timebounds_end_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      memo_type_ = from.memo_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      memo_id_ = from.memo_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      num_operations_ = from.num_operations_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StellarSignTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarSignTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarSignTx::CopyFrom(const StellarSignTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarSignTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarSignTx::IsInitialized() const {
  return true;
}

void StellarSignTx::Swap(StellarSignTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarSignTx::InternalSwap(StellarSignTx* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  address_n_.InternalSwap(&other->address_n_);
  network_passphrase_.Swap(&other->network_passphrase_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  memo_text_.Swap(&other->memo_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  memo_hash_.Swap(&other->memo_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sequence_number_, other->sequence_number_);
  swap(fee_, other->fee_);
  swap(timebounds_start_, other->timebounds_start_);
  swap(timebounds_end_, other->timebounds_end_);
  swap(memo_type_, other->memo_type_);
  swap(memo_id_, other->memo_id_);
  swap(num_operations_, other->num_operations_);
}

::google::protobuf::Metadata StellarSignTx::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarTxOpRequest::InitAsDefaultInstance() {
}
class StellarTxOpRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarTxOpRequest::StellarTxOpRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarTxOpRequest)
}
StellarTxOpRequest::StellarTxOpRequest(const StellarTxOpRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarTxOpRequest)
}

void StellarTxOpRequest::SharedCtor() {
}

StellarTxOpRequest::~StellarTxOpRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarTxOpRequest)
  SharedDtor();
}

void StellarTxOpRequest::SharedDtor() {
}

void StellarTxOpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarTxOpRequest& StellarTxOpRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarTxOpRequest_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarTxOpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarTxOpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarTxOpRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarTxOpRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarTxOpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarTxOpRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarTxOpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarTxOpRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarTxOpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarTxOpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarTxOpRequest)
}

::google::protobuf::uint8* StellarTxOpRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarTxOpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarTxOpRequest)
  return target;
}

size_t StellarTxOpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarTxOpRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarTxOpRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarTxOpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarTxOpRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StellarTxOpRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarTxOpRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarTxOpRequest)
    MergeFrom(*source);
  }
}

void StellarTxOpRequest::MergeFrom(const StellarTxOpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarTxOpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StellarTxOpRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarTxOpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarTxOpRequest::CopyFrom(const StellarTxOpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarTxOpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarTxOpRequest::IsInitialized() const {
  return true;
}

void StellarTxOpRequest::Swap(StellarTxOpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarTxOpRequest::InternalSwap(StellarTxOpRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata StellarTxOpRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarPaymentOp::InitAsDefaultInstance() {
  ::hw::trezor::messages::stellar::_StellarPaymentOp_default_instance_._instance.get_mutable()->asset_ = const_cast< ::hw::trezor::messages::stellar::StellarAssetType*>(
      ::hw::trezor::messages::stellar::StellarAssetType::internal_default_instance());
}
class StellarPaymentOp::HasBitSetters {
 public:
  static void set_has_source_account(StellarPaymentOp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_destination_account(StellarPaymentOp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::hw::trezor::messages::stellar::StellarAssetType& asset(const StellarPaymentOp* msg);
  static void set_has_asset(StellarPaymentOp* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_amount(StellarPaymentOp* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

const ::hw::trezor::messages::stellar::StellarAssetType&
StellarPaymentOp::HasBitSetters::asset(const StellarPaymentOp* msg) {
  return *msg->asset_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarPaymentOp::kSourceAccountFieldNumber;
const int StellarPaymentOp::kDestinationAccountFieldNumber;
const int StellarPaymentOp::kAssetFieldNumber;
const int StellarPaymentOp::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarPaymentOp::StellarPaymentOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarPaymentOp)
}
StellarPaymentOp::StellarPaymentOp(const StellarPaymentOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  destination_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_destination_account()) {
    destination_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_account_);
  }
  if (from.has_asset()) {
    asset_ = new ::hw::trezor::messages::stellar::StellarAssetType(*from.asset_);
  } else {
    asset_ = nullptr;
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarPaymentOp)
}

void StellarPaymentOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarPaymentOp_messages_2dstellar_2eproto.base);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&asset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&asset_)) + sizeof(amount_));
}

StellarPaymentOp::~StellarPaymentOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarPaymentOp)
  SharedDtor();
}

void StellarPaymentOp::SharedDtor() {
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete asset_;
}

void StellarPaymentOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarPaymentOp& StellarPaymentOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarPaymentOp_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarPaymentOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarPaymentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      source_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      destination_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(asset_ != nullptr);
      asset_->Clear();
    }
  }
  amount_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarPaymentOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarPaymentOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarPaymentOp.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string destination_account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarPaymentOp.destination_account");
        object = msg->mutable_destination_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .hw.trezor.messages.stellar.StellarAssetType asset = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::stellar::StellarAssetType::_InternalParse;
        object = msg->mutable_asset();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional sint64 amount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_amount(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarPaymentOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarPaymentOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarPaymentOp.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string destination_account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->destination_account().data(), static_cast<int>(this->destination_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarPaymentOp.destination_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.stellar.StellarAssetType asset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarPaymentOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarPaymentOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarPaymentOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarPaymentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarPaymentOp.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_account(), output);
  }

  // optional string destination_account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_account().data(), static_cast<int>(this->destination_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarPaymentOp.destination_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->destination_account(), output);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType asset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::asset(this), output);
  }

  // optional sint64 amount = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(4, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarPaymentOp)
}

::google::protobuf::uint8* StellarPaymentOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarPaymentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarPaymentOp.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_account(), target);
  }

  // optional string destination_account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_account().data(), static_cast<int>(this->destination_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarPaymentOp.destination_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->destination_account(), target);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType asset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::asset(this), target);
  }

  // optional sint64 amount = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(4, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarPaymentOp)
  return target;
}

size_t StellarPaymentOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarPaymentOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string source_account = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional string destination_account = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destination_account());
    }

    // optional .hw.trezor.messages.stellar.StellarAssetType asset = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *asset_);
    }

    // optional sint64 amount = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->amount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarPaymentOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarPaymentOp)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarPaymentOp* source =
      ::google::protobuf::DynamicCastToGenerated<StellarPaymentOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarPaymentOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarPaymentOp)
    MergeFrom(*source);
  }
}

void StellarPaymentOp::MergeFrom(const StellarPaymentOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarPaymentOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      destination_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_account_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_asset()->::hw::trezor::messages::stellar::StellarAssetType::MergeFrom(from.asset());
    }
    if (cached_has_bits & 0x00000008u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StellarPaymentOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarPaymentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarPaymentOp::CopyFrom(const StellarPaymentOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarPaymentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarPaymentOp::IsInitialized() const {
  return true;
}

void StellarPaymentOp::Swap(StellarPaymentOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarPaymentOp::InternalSwap(StellarPaymentOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destination_account_.Swap(&other->destination_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(asset_, other->asset_);
  swap(amount_, other->amount_);
}

::google::protobuf::Metadata StellarPaymentOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarCreateAccountOp::InitAsDefaultInstance() {
}
class StellarCreateAccountOp::HasBitSetters {
 public:
  static void set_has_source_account(StellarCreateAccountOp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_new_account(StellarCreateAccountOp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_starting_balance(StellarCreateAccountOp* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarCreateAccountOp::kSourceAccountFieldNumber;
const int StellarCreateAccountOp::kNewAccountFieldNumber;
const int StellarCreateAccountOp::kStartingBalanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarCreateAccountOp::StellarCreateAccountOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarCreateAccountOp)
}
StellarCreateAccountOp::StellarCreateAccountOp(const StellarCreateAccountOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  new_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_new_account()) {
    new_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_account_);
  }
  starting_balance_ = from.starting_balance_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarCreateAccountOp)
}

void StellarCreateAccountOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarCreateAccountOp_messages_2dstellar_2eproto.base);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  starting_balance_ = PROTOBUF_LONGLONG(0);
}

StellarCreateAccountOp::~StellarCreateAccountOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarCreateAccountOp)
  SharedDtor();
}

void StellarCreateAccountOp::SharedDtor() {
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StellarCreateAccountOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarCreateAccountOp& StellarCreateAccountOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarCreateAccountOp_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarCreateAccountOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarCreateAccountOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      source_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      new_account_.ClearNonDefaultToEmptyNoArena();
    }
  }
  starting_balance_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarCreateAccountOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarCreateAccountOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarCreateAccountOp.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string new_account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarCreateAccountOp.new_account");
        object = msg->mutable_new_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional sint64 starting_balance = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_starting_balance(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarCreateAccountOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarCreateAccountOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarCreateAccountOp.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string new_account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_account().data(), static_cast<int>(this->new_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarCreateAccountOp.new_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 starting_balance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_starting_balance(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &starting_balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarCreateAccountOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarCreateAccountOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarCreateAccountOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarCreateAccountOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarCreateAccountOp.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_account(), output);
  }

  // optional string new_account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_account().data(), static_cast<int>(this->new_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarCreateAccountOp.new_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->new_account(), output);
  }

  // optional sint64 starting_balance = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->starting_balance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarCreateAccountOp)
}

::google::protobuf::uint8* StellarCreateAccountOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarCreateAccountOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarCreateAccountOp.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_account(), target);
  }

  // optional string new_account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_account().data(), static_cast<int>(this->new_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarCreateAccountOp.new_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->new_account(), target);
  }

  // optional sint64 starting_balance = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->starting_balance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarCreateAccountOp)
  return target;
}

size_t StellarCreateAccountOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarCreateAccountOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string source_account = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional string new_account = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->new_account());
    }

    // optional sint64 starting_balance = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->starting_balance());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarCreateAccountOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarCreateAccountOp)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarCreateAccountOp* source =
      ::google::protobuf::DynamicCastToGenerated<StellarCreateAccountOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarCreateAccountOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarCreateAccountOp)
    MergeFrom(*source);
  }
}

void StellarCreateAccountOp::MergeFrom(const StellarCreateAccountOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarCreateAccountOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      new_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_account_);
    }
    if (cached_has_bits & 0x00000004u) {
      starting_balance_ = from.starting_balance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StellarCreateAccountOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarCreateAccountOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarCreateAccountOp::CopyFrom(const StellarCreateAccountOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarCreateAccountOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarCreateAccountOp::IsInitialized() const {
  return true;
}

void StellarCreateAccountOp::Swap(StellarCreateAccountOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarCreateAccountOp::InternalSwap(StellarCreateAccountOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  new_account_.Swap(&other->new_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(starting_balance_, other->starting_balance_);
}

::google::protobuf::Metadata StellarCreateAccountOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarPathPaymentOp::InitAsDefaultInstance() {
  ::hw::trezor::messages::stellar::_StellarPathPaymentOp_default_instance_._instance.get_mutable()->send_asset_ = const_cast< ::hw::trezor::messages::stellar::StellarAssetType*>(
      ::hw::trezor::messages::stellar::StellarAssetType::internal_default_instance());
  ::hw::trezor::messages::stellar::_StellarPathPaymentOp_default_instance_._instance.get_mutable()->destination_asset_ = const_cast< ::hw::trezor::messages::stellar::StellarAssetType*>(
      ::hw::trezor::messages::stellar::StellarAssetType::internal_default_instance());
}
class StellarPathPaymentOp::HasBitSetters {
 public:
  static void set_has_source_account(StellarPathPaymentOp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::hw::trezor::messages::stellar::StellarAssetType& send_asset(const StellarPathPaymentOp* msg);
  static void set_has_send_asset(StellarPathPaymentOp* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_send_max(StellarPathPaymentOp* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_destination_account(StellarPathPaymentOp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::hw::trezor::messages::stellar::StellarAssetType& destination_asset(const StellarPathPaymentOp* msg);
  static void set_has_destination_asset(StellarPathPaymentOp* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_destination_amount(StellarPathPaymentOp* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

const ::hw::trezor::messages::stellar::StellarAssetType&
StellarPathPaymentOp::HasBitSetters::send_asset(const StellarPathPaymentOp* msg) {
  return *msg->send_asset_;
}
const ::hw::trezor::messages::stellar::StellarAssetType&
StellarPathPaymentOp::HasBitSetters::destination_asset(const StellarPathPaymentOp* msg) {
  return *msg->destination_asset_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarPathPaymentOp::kSourceAccountFieldNumber;
const int StellarPathPaymentOp::kSendAssetFieldNumber;
const int StellarPathPaymentOp::kSendMaxFieldNumber;
const int StellarPathPaymentOp::kDestinationAccountFieldNumber;
const int StellarPathPaymentOp::kDestinationAssetFieldNumber;
const int StellarPathPaymentOp::kDestinationAmountFieldNumber;
const int StellarPathPaymentOp::kPathsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarPathPaymentOp::StellarPathPaymentOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarPathPaymentOp)
}
StellarPathPaymentOp::StellarPathPaymentOp(const StellarPathPaymentOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      paths_(from.paths_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  destination_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_destination_account()) {
    destination_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_account_);
  }
  if (from.has_send_asset()) {
    send_asset_ = new ::hw::trezor::messages::stellar::StellarAssetType(*from.send_asset_);
  } else {
    send_asset_ = nullptr;
  }
  if (from.has_destination_asset()) {
    destination_asset_ = new ::hw::trezor::messages::stellar::StellarAssetType(*from.destination_asset_);
  } else {
    destination_asset_ = nullptr;
  }
  ::memcpy(&send_max_, &from.send_max_,
    static_cast<size_t>(reinterpret_cast<char*>(&destination_amount_) -
    reinterpret_cast<char*>(&send_max_)) + sizeof(destination_amount_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarPathPaymentOp)
}

void StellarPathPaymentOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarPathPaymentOp_messages_2dstellar_2eproto.base);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&send_asset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destination_amount_) -
      reinterpret_cast<char*>(&send_asset_)) + sizeof(destination_amount_));
}

StellarPathPaymentOp::~StellarPathPaymentOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarPathPaymentOp)
  SharedDtor();
}

void StellarPathPaymentOp::SharedDtor() {
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete send_asset_;
  if (this != internal_default_instance()) delete destination_asset_;
}

void StellarPathPaymentOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarPathPaymentOp& StellarPathPaymentOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarPathPaymentOp_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarPathPaymentOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarPathPaymentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paths_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      source_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      destination_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(send_asset_ != nullptr);
      send_asset_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(destination_asset_ != nullptr);
      destination_asset_->Clear();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&send_max_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&destination_amount_) -
        reinterpret_cast<char*>(&send_max_)) + sizeof(destination_amount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarPathPaymentOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarPathPaymentOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarPathPaymentOp.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .hw.trezor.messages.stellar.StellarAssetType send_asset = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::stellar::StellarAssetType::_InternalParse;
        object = msg->mutable_send_asset();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional sint64 send_max = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_send_max(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string destination_account = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account");
        object = msg->mutable_destination_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .hw.trezor.messages.stellar.StellarAssetType destination_asset = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::stellar::StellarAssetType::_InternalParse;
        object = msg->mutable_destination_asset();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional sint64 destination_amount = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_destination_amount(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .hw.trezor.messages.stellar.StellarAssetType paths = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::hw::trezor::messages::stellar::StellarAssetType::_InternalParse;
          object = msg->add_paths();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarPathPaymentOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarPathPaymentOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarPathPaymentOp.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.stellar.StellarAssetType send_asset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_send_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 send_max = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_send_max(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &send_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string destination_account = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->destination_account().data(), static_cast<int>(this->destination_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.stellar.StellarAssetType destination_asset = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 destination_amount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_destination_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &destination_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hw.trezor.messages.stellar.StellarAssetType paths = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_paths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarPathPaymentOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarPathPaymentOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarPathPaymentOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarPathPaymentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarPathPaymentOp.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_account(), output);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType send_asset = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::send_asset(this), output);
  }

  // optional sint64 send_max = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->send_max(), output);
  }

  // optional string destination_account = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_account().data(), static_cast<int>(this->destination_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->destination_account(), output);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType destination_asset = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::destination_asset(this), output);
  }

  // optional sint64 destination_amount = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->destination_amount(), output);
  }

  // repeated .hw.trezor.messages.stellar.StellarAssetType paths = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paths_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->paths(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarPathPaymentOp)
}

::google::protobuf::uint8* StellarPathPaymentOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarPathPaymentOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarPathPaymentOp.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_account(), target);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType send_asset = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::send_asset(this), target);
  }

  // optional sint64 send_max = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->send_max(), target);
  }

  // optional string destination_account = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_account().data(), static_cast<int>(this->destination_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarPathPaymentOp.destination_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->destination_account(), target);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType destination_asset = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::destination_asset(this), target);
  }

  // optional sint64 destination_amount = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->destination_amount(), target);
  }

  // repeated .hw.trezor.messages.stellar.StellarAssetType paths = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paths_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->paths(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarPathPaymentOp)
  return target;
}

size_t StellarPathPaymentOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarPathPaymentOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .hw.trezor.messages.stellar.StellarAssetType paths = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->paths_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->paths(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string source_account = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional string destination_account = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destination_account());
    }

    // optional .hw.trezor.messages.stellar.StellarAssetType send_asset = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *send_asset_);
    }

    // optional .hw.trezor.messages.stellar.StellarAssetType destination_asset = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *destination_asset_);
    }

    // optional sint64 send_max = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->send_max());
    }

    // optional sint64 destination_amount = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->destination_amount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarPathPaymentOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarPathPaymentOp)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarPathPaymentOp* source =
      ::google::protobuf::DynamicCastToGenerated<StellarPathPaymentOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarPathPaymentOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarPathPaymentOp)
    MergeFrom(*source);
  }
}

void StellarPathPaymentOp::MergeFrom(const StellarPathPaymentOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarPathPaymentOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paths_.MergeFrom(from.paths_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      destination_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_account_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_send_asset()->::hw::trezor::messages::stellar::StellarAssetType::MergeFrom(from.send_asset());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_destination_asset()->::hw::trezor::messages::stellar::StellarAssetType::MergeFrom(from.destination_asset());
    }
    if (cached_has_bits & 0x00000010u) {
      send_max_ = from.send_max_;
    }
    if (cached_has_bits & 0x00000020u) {
      destination_amount_ = from.destination_amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StellarPathPaymentOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarPathPaymentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarPathPaymentOp::CopyFrom(const StellarPathPaymentOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarPathPaymentOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarPathPaymentOp::IsInitialized() const {
  return true;
}

void StellarPathPaymentOp::Swap(StellarPathPaymentOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarPathPaymentOp::InternalSwap(StellarPathPaymentOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&paths_)->InternalSwap(CastToBase(&other->paths_));
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destination_account_.Swap(&other->destination_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(send_asset_, other->send_asset_);
  swap(destination_asset_, other->destination_asset_);
  swap(send_max_, other->send_max_);
  swap(destination_amount_, other->destination_amount_);
}

::google::protobuf::Metadata StellarPathPaymentOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarManageOfferOp::InitAsDefaultInstance() {
  ::hw::trezor::messages::stellar::_StellarManageOfferOp_default_instance_._instance.get_mutable()->selling_asset_ = const_cast< ::hw::trezor::messages::stellar::StellarAssetType*>(
      ::hw::trezor::messages::stellar::StellarAssetType::internal_default_instance());
  ::hw::trezor::messages::stellar::_StellarManageOfferOp_default_instance_._instance.get_mutable()->buying_asset_ = const_cast< ::hw::trezor::messages::stellar::StellarAssetType*>(
      ::hw::trezor::messages::stellar::StellarAssetType::internal_default_instance());
}
class StellarManageOfferOp::HasBitSetters {
 public:
  static void set_has_source_account(StellarManageOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::hw::trezor::messages::stellar::StellarAssetType& selling_asset(const StellarManageOfferOp* msg);
  static void set_has_selling_asset(StellarManageOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::hw::trezor::messages::stellar::StellarAssetType& buying_asset(const StellarManageOfferOp* msg);
  static void set_has_buying_asset(StellarManageOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_amount(StellarManageOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_price_n(StellarManageOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_price_d(StellarManageOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_offer_id(StellarManageOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

const ::hw::trezor::messages::stellar::StellarAssetType&
StellarManageOfferOp::HasBitSetters::selling_asset(const StellarManageOfferOp* msg) {
  return *msg->selling_asset_;
}
const ::hw::trezor::messages::stellar::StellarAssetType&
StellarManageOfferOp::HasBitSetters::buying_asset(const StellarManageOfferOp* msg) {
  return *msg->buying_asset_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarManageOfferOp::kSourceAccountFieldNumber;
const int StellarManageOfferOp::kSellingAssetFieldNumber;
const int StellarManageOfferOp::kBuyingAssetFieldNumber;
const int StellarManageOfferOp::kAmountFieldNumber;
const int StellarManageOfferOp::kPriceNFieldNumber;
const int StellarManageOfferOp::kPriceDFieldNumber;
const int StellarManageOfferOp::kOfferIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarManageOfferOp::StellarManageOfferOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarManageOfferOp)
}
StellarManageOfferOp::StellarManageOfferOp(const StellarManageOfferOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  if (from.has_selling_asset()) {
    selling_asset_ = new ::hw::trezor::messages::stellar::StellarAssetType(*from.selling_asset_);
  } else {
    selling_asset_ = nullptr;
  }
  if (from.has_buying_asset()) {
    buying_asset_ = new ::hw::trezor::messages::stellar::StellarAssetType(*from.buying_asset_);
  } else {
    buying_asset_ = nullptr;
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&offer_id_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(offer_id_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarManageOfferOp)
}

void StellarManageOfferOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarManageOfferOp_messages_2dstellar_2eproto.base);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&selling_asset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offer_id_) -
      reinterpret_cast<char*>(&selling_asset_)) + sizeof(offer_id_));
}

StellarManageOfferOp::~StellarManageOfferOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarManageOfferOp)
  SharedDtor();
}

void StellarManageOfferOp::SharedDtor() {
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete selling_asset_;
  if (this != internal_default_instance()) delete buying_asset_;
}

void StellarManageOfferOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarManageOfferOp& StellarManageOfferOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarManageOfferOp_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarManageOfferOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarManageOfferOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      source_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(selling_asset_ != nullptr);
      selling_asset_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(buying_asset_ != nullptr);
      buying_asset_->Clear();
    }
  }
  if (cached_has_bits & 0x00000078u) {
    ::memset(&amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offer_id_) -
        reinterpret_cast<char*>(&amount_)) + sizeof(offer_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarManageOfferOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarManageOfferOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarManageOfferOp.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::stellar::StellarAssetType::_InternalParse;
        object = msg->mutable_selling_asset();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::stellar::StellarAssetType::_InternalParse;
        object = msg->mutable_buying_asset();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional sint64 amount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_amount(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 price_n = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_price_n(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 price_d = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_price_d(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 offer_id = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_offer_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarManageOfferOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarManageOfferOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarManageOfferOp.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_selling_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_buying_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 price_n = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_price_n(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 price_d = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_price_d(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offer_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_offer_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarManageOfferOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarManageOfferOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarManageOfferOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarManageOfferOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarManageOfferOp.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_account(), output);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::selling_asset(this), output);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::buying_asset(this), output);
  }

  // optional sint64 amount = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(4, this->amount(), output);
  }

  // optional uint32 price_n = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->price_n(), output);
  }

  // optional uint32 price_d = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->price_d(), output);
  }

  // optional uint64 offer_id = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->offer_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarManageOfferOp)
}

::google::protobuf::uint8* StellarManageOfferOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarManageOfferOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarManageOfferOp.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_account(), target);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::selling_asset(this), target);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::buying_asset(this), target);
  }

  // optional sint64 amount = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(4, this->amount(), target);
  }

  // optional uint32 price_n = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->price_n(), target);
  }

  // optional uint32 price_d = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->price_d(), target);
  }

  // optional uint64 offer_id = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->offer_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarManageOfferOp)
  return target;
}

size_t StellarManageOfferOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarManageOfferOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string source_account = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *selling_asset_);
    }

    // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *buying_asset_);
    }

    // optional sint64 amount = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->amount());
    }

    // optional uint32 price_n = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_n());
    }

    // optional uint32 price_d = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_d());
    }

    // optional uint64 offer_id = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offer_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarManageOfferOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarManageOfferOp)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarManageOfferOp* source =
      ::google::protobuf::DynamicCastToGenerated<StellarManageOfferOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarManageOfferOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarManageOfferOp)
    MergeFrom(*source);
  }
}

void StellarManageOfferOp::MergeFrom(const StellarManageOfferOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarManageOfferOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_selling_asset()->::hw::trezor::messages::stellar::StellarAssetType::MergeFrom(from.selling_asset());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_buying_asset()->::hw::trezor::messages::stellar::StellarAssetType::MergeFrom(from.buying_asset());
    }
    if (cached_has_bits & 0x00000008u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000010u) {
      price_n_ = from.price_n_;
    }
    if (cached_has_bits & 0x00000020u) {
      price_d_ = from.price_d_;
    }
    if (cached_has_bits & 0x00000040u) {
      offer_id_ = from.offer_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StellarManageOfferOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarManageOfferOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarManageOfferOp::CopyFrom(const StellarManageOfferOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarManageOfferOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarManageOfferOp::IsInitialized() const {
  return true;
}

void StellarManageOfferOp::Swap(StellarManageOfferOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarManageOfferOp::InternalSwap(StellarManageOfferOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(selling_asset_, other->selling_asset_);
  swap(buying_asset_, other->buying_asset_);
  swap(amount_, other->amount_);
  swap(price_n_, other->price_n_);
  swap(price_d_, other->price_d_);
  swap(offer_id_, other->offer_id_);
}

::google::protobuf::Metadata StellarManageOfferOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarCreatePassiveOfferOp::InitAsDefaultInstance() {
  ::hw::trezor::messages::stellar::_StellarCreatePassiveOfferOp_default_instance_._instance.get_mutable()->selling_asset_ = const_cast< ::hw::trezor::messages::stellar::StellarAssetType*>(
      ::hw::trezor::messages::stellar::StellarAssetType::internal_default_instance());
  ::hw::trezor::messages::stellar::_StellarCreatePassiveOfferOp_default_instance_._instance.get_mutable()->buying_asset_ = const_cast< ::hw::trezor::messages::stellar::StellarAssetType*>(
      ::hw::trezor::messages::stellar::StellarAssetType::internal_default_instance());
}
class StellarCreatePassiveOfferOp::HasBitSetters {
 public:
  static void set_has_source_account(StellarCreatePassiveOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::hw::trezor::messages::stellar::StellarAssetType& selling_asset(const StellarCreatePassiveOfferOp* msg);
  static void set_has_selling_asset(StellarCreatePassiveOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::hw::trezor::messages::stellar::StellarAssetType& buying_asset(const StellarCreatePassiveOfferOp* msg);
  static void set_has_buying_asset(StellarCreatePassiveOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_amount(StellarCreatePassiveOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_price_n(StellarCreatePassiveOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_price_d(StellarCreatePassiveOfferOp* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

const ::hw::trezor::messages::stellar::StellarAssetType&
StellarCreatePassiveOfferOp::HasBitSetters::selling_asset(const StellarCreatePassiveOfferOp* msg) {
  return *msg->selling_asset_;
}
const ::hw::trezor::messages::stellar::StellarAssetType&
StellarCreatePassiveOfferOp::HasBitSetters::buying_asset(const StellarCreatePassiveOfferOp* msg) {
  return *msg->buying_asset_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarCreatePassiveOfferOp::kSourceAccountFieldNumber;
const int StellarCreatePassiveOfferOp::kSellingAssetFieldNumber;
const int StellarCreatePassiveOfferOp::kBuyingAssetFieldNumber;
const int StellarCreatePassiveOfferOp::kAmountFieldNumber;
const int StellarCreatePassiveOfferOp::kPriceNFieldNumber;
const int StellarCreatePassiveOfferOp::kPriceDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarCreatePassiveOfferOp::StellarCreatePassiveOfferOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
}
StellarCreatePassiveOfferOp::StellarCreatePassiveOfferOp(const StellarCreatePassiveOfferOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  if (from.has_selling_asset()) {
    selling_asset_ = new ::hw::trezor::messages::stellar::StellarAssetType(*from.selling_asset_);
  } else {
    selling_asset_ = nullptr;
  }
  if (from.has_buying_asset()) {
    buying_asset_ = new ::hw::trezor::messages::stellar::StellarAssetType(*from.buying_asset_);
  } else {
    buying_asset_ = nullptr;
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_d_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(price_d_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
}

void StellarCreatePassiveOfferOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarCreatePassiveOfferOp_messages_2dstellar_2eproto.base);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&selling_asset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_d_) -
      reinterpret_cast<char*>(&selling_asset_)) + sizeof(price_d_));
}

StellarCreatePassiveOfferOp::~StellarCreatePassiveOfferOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  SharedDtor();
}

void StellarCreatePassiveOfferOp::SharedDtor() {
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete selling_asset_;
  if (this != internal_default_instance()) delete buying_asset_;
}

void StellarCreatePassiveOfferOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarCreatePassiveOfferOp& StellarCreatePassiveOfferOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarCreatePassiveOfferOp_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarCreatePassiveOfferOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      source_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(selling_asset_ != nullptr);
      selling_asset_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(buying_asset_ != nullptr);
      buying_asset_->Clear();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&price_d_) -
        reinterpret_cast<char*>(&amount_)) + sizeof(price_d_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarCreatePassiveOfferOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarCreatePassiveOfferOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::stellar::StellarAssetType::_InternalParse;
        object = msg->mutable_selling_asset();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::stellar::StellarAssetType::_InternalParse;
        object = msg->mutable_buying_asset();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional sint64 amount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_amount(::google::protobuf::internal::ReadVarintZigZag64(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 price_n = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_price_n(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 price_d = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_price_d(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarCreatePassiveOfferOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_selling_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_buying_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_amount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 price_n = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_price_n(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 price_d = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_price_d(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarCreatePassiveOfferOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_account(), output);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::selling_asset(this), output);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::buying_asset(this), output);
  }

  // optional sint64 amount = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(4, this->amount(), output);
  }

  // optional uint32 price_n = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->price_n(), output);
  }

  // optional uint32 price_d = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->price_d(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
}

::google::protobuf::uint8* StellarCreatePassiveOfferOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarCreatePassiveOfferOp.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_account(), target);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::selling_asset(this), target);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::buying_asset(this), target);
  }

  // optional sint64 amount = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(4, this->amount(), target);
  }

  // optional uint32 price_n = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->price_n(), target);
  }

  // optional uint32 price_d = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->price_d(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  return target;
}

size_t StellarCreatePassiveOfferOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string source_account = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional .hw.trezor.messages.stellar.StellarAssetType selling_asset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *selling_asset_);
    }

    // optional .hw.trezor.messages.stellar.StellarAssetType buying_asset = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *buying_asset_);
    }

    // optional sint64 amount = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->amount());
    }

    // optional uint32 price_n = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_n());
    }

    // optional uint32 price_d = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_d());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarCreatePassiveOfferOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarCreatePassiveOfferOp* source =
      ::google::protobuf::DynamicCastToGenerated<StellarCreatePassiveOfferOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
    MergeFrom(*source);
  }
}

void StellarCreatePassiveOfferOp::MergeFrom(const StellarCreatePassiveOfferOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_selling_asset()->::hw::trezor::messages::stellar::StellarAssetType::MergeFrom(from.selling_asset());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_buying_asset()->::hw::trezor::messages::stellar::StellarAssetType::MergeFrom(from.buying_asset());
    }
    if (cached_has_bits & 0x00000008u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000010u) {
      price_n_ = from.price_n_;
    }
    if (cached_has_bits & 0x00000020u) {
      price_d_ = from.price_d_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StellarCreatePassiveOfferOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarCreatePassiveOfferOp::CopyFrom(const StellarCreatePassiveOfferOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarCreatePassiveOfferOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarCreatePassiveOfferOp::IsInitialized() const {
  return true;
}

void StellarCreatePassiveOfferOp::Swap(StellarCreatePassiveOfferOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarCreatePassiveOfferOp::InternalSwap(StellarCreatePassiveOfferOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(selling_asset_, other->selling_asset_);
  swap(buying_asset_, other->buying_asset_);
  swap(amount_, other->amount_);
  swap(price_n_, other->price_n_);
  swap(price_d_, other->price_d_);
}

::google::protobuf::Metadata StellarCreatePassiveOfferOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarSetOptionsOp::InitAsDefaultInstance() {
}
class StellarSetOptionsOp::HasBitSetters {
 public:
  static void set_has_source_account(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_inflation_destination_account(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_clear_flags(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_set_flags(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_master_weight(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_low_threshold(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_medium_threshold(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_high_threshold(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_home_domain(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_signer_type(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
  static void set_has_signer_key(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_signer_weight(StellarSetOptionsOp* msg) {
    msg->_has_bits_[0] |= 0x00000800u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarSetOptionsOp::kSourceAccountFieldNumber;
const int StellarSetOptionsOp::kInflationDestinationAccountFieldNumber;
const int StellarSetOptionsOp::kClearFlagsFieldNumber;
const int StellarSetOptionsOp::kSetFlagsFieldNumber;
const int StellarSetOptionsOp::kMasterWeightFieldNumber;
const int StellarSetOptionsOp::kLowThresholdFieldNumber;
const int StellarSetOptionsOp::kMediumThresholdFieldNumber;
const int StellarSetOptionsOp::kHighThresholdFieldNumber;
const int StellarSetOptionsOp::kHomeDomainFieldNumber;
const int StellarSetOptionsOp::kSignerTypeFieldNumber;
const int StellarSetOptionsOp::kSignerKeyFieldNumber;
const int StellarSetOptionsOp::kSignerWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarSetOptionsOp::StellarSetOptionsOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarSetOptionsOp)
}
StellarSetOptionsOp::StellarSetOptionsOp(const StellarSetOptionsOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  inflation_destination_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_inflation_destination_account()) {
    inflation_destination_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inflation_destination_account_);
  }
  home_domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_home_domain()) {
    home_domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.home_domain_);
  }
  signer_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signer_key()) {
    signer_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signer_key_);
  }
  ::memcpy(&clear_flags_, &from.clear_flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&signer_weight_) -
    reinterpret_cast<char*>(&clear_flags_)) + sizeof(signer_weight_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarSetOptionsOp)
}

void StellarSetOptionsOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarSetOptionsOp_messages_2dstellar_2eproto.base);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inflation_destination_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  home_domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signer_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clear_flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signer_weight_) -
      reinterpret_cast<char*>(&clear_flags_)) + sizeof(signer_weight_));
}

StellarSetOptionsOp::~StellarSetOptionsOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarSetOptionsOp)
  SharedDtor();
}

void StellarSetOptionsOp::SharedDtor() {
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inflation_destination_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  home_domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signer_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StellarSetOptionsOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarSetOptionsOp& StellarSetOptionsOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarSetOptionsOp_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarSetOptionsOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarSetOptionsOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      source_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      inflation_destination_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      home_domain_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      signer_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&clear_flags_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&low_threshold_) -
        reinterpret_cast<char*>(&clear_flags_)) + sizeof(low_threshold_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&medium_threshold_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&signer_weight_) -
        reinterpret_cast<char*>(&medium_threshold_)) + sizeof(signer_weight_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarSetOptionsOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarSetOptionsOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarSetOptionsOp.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string inflation_destination_account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account");
        object = msg->mutable_inflation_destination_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 clear_flags = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_clear_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 set_flags = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 master_weight = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_master_weight(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 low_threshold = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_low_threshold(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 medium_threshold = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_medium_threshold(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 high_threshold = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_high_threshold(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string home_domain = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain");
        object = msg->mutable_home_domain();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 signer_type = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_signer_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes signer_key = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signer_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 signer_weight = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_signer_weight(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarSetOptionsOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarSetOptionsOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarSetOptionsOp.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string inflation_destination_account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inflation_destination_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->inflation_destination_account().data(), static_cast<int>(this->inflation_destination_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 clear_flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_clear_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clear_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 set_flags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_set_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &set_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 master_weight = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_master_weight(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &master_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 low_threshold = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_low_threshold(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &low_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 medium_threshold = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_medium_threshold(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &medium_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 high_threshold = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_high_threshold(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &high_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string home_domain = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_home_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->home_domain().data(), static_cast<int>(this->home_domain().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 signer_type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_signer_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signer_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signer_key = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signer_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 signer_weight = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          HasBitSetters::set_has_signer_weight(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signer_weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarSetOptionsOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarSetOptionsOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarSetOptionsOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarSetOptionsOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSetOptionsOp.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_account(), output);
  }

  // optional string inflation_destination_account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inflation_destination_account().data(), static_cast<int>(this->inflation_destination_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->inflation_destination_account(), output);
  }

  // optional uint32 clear_flags = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->clear_flags(), output);
  }

  // optional uint32 set_flags = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->set_flags(), output);
  }

  // optional uint32 master_weight = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->master_weight(), output);
  }

  // optional uint32 low_threshold = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->low_threshold(), output);
  }

  // optional uint32 medium_threshold = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->medium_threshold(), output);
  }

  // optional uint32 high_threshold = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->high_threshold(), output);
  }

  // optional string home_domain = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->home_domain().data(), static_cast<int>(this->home_domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->home_domain(), output);
  }

  // optional uint32 signer_type = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->signer_type(), output);
  }

  // optional bytes signer_key = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->signer_key(), output);
  }

  // optional uint32 signer_weight = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->signer_weight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarSetOptionsOp)
}

::google::protobuf::uint8* StellarSetOptionsOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarSetOptionsOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSetOptionsOp.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_account(), target);
  }

  // optional string inflation_destination_account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inflation_destination_account().data(), static_cast<int>(this->inflation_destination_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSetOptionsOp.inflation_destination_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->inflation_destination_account(), target);
  }

  // optional uint32 clear_flags = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->clear_flags(), target);
  }

  // optional uint32 set_flags = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->set_flags(), target);
  }

  // optional uint32 master_weight = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->master_weight(), target);
  }

  // optional uint32 low_threshold = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->low_threshold(), target);
  }

  // optional uint32 medium_threshold = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->medium_threshold(), target);
  }

  // optional uint32 high_threshold = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->high_threshold(), target);
  }

  // optional string home_domain = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->home_domain().data(), static_cast<int>(this->home_domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarSetOptionsOp.home_domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->home_domain(), target);
  }

  // optional uint32 signer_type = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->signer_type(), target);
  }

  // optional bytes signer_key = 11;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->signer_key(), target);
  }

  // optional uint32 signer_weight = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->signer_weight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarSetOptionsOp)
  return target;
}

size_t StellarSetOptionsOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarSetOptionsOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string source_account = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional string inflation_destination_account = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inflation_destination_account());
    }

    // optional string home_domain = 9;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->home_domain());
    }

    // optional bytes signer_key = 11;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signer_key());
    }

    // optional uint32 clear_flags = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clear_flags());
    }

    // optional uint32 set_flags = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->set_flags());
    }

    // optional uint32 master_weight = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->master_weight());
    }

    // optional uint32 low_threshold = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->low_threshold());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional uint32 medium_threshold = 7;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->medium_threshold());
    }

    // optional uint32 high_threshold = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->high_threshold());
    }

    // optional uint32 signer_type = 10;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->signer_type());
    }

    // optional uint32 signer_weight = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->signer_weight());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarSetOptionsOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarSetOptionsOp)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarSetOptionsOp* source =
      ::google::protobuf::DynamicCastToGenerated<StellarSetOptionsOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarSetOptionsOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarSetOptionsOp)
    MergeFrom(*source);
  }
}

void StellarSetOptionsOp::MergeFrom(const StellarSetOptionsOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarSetOptionsOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      inflation_destination_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inflation_destination_account_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      home_domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.home_domain_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      signer_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signer_key_);
    }
    if (cached_has_bits & 0x00000010u) {
      clear_flags_ = from.clear_flags_;
    }
    if (cached_has_bits & 0x00000020u) {
      set_flags_ = from.set_flags_;
    }
    if (cached_has_bits & 0x00000040u) {
      master_weight_ = from.master_weight_;
    }
    if (cached_has_bits & 0x00000080u) {
      low_threshold_ = from.low_threshold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      medium_threshold_ = from.medium_threshold_;
    }
    if (cached_has_bits & 0x00000200u) {
      high_threshold_ = from.high_threshold_;
    }
    if (cached_has_bits & 0x00000400u) {
      signer_type_ = from.signer_type_;
    }
    if (cached_has_bits & 0x00000800u) {
      signer_weight_ = from.signer_weight_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StellarSetOptionsOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarSetOptionsOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarSetOptionsOp::CopyFrom(const StellarSetOptionsOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarSetOptionsOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarSetOptionsOp::IsInitialized() const {
  return true;
}

void StellarSetOptionsOp::Swap(StellarSetOptionsOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarSetOptionsOp::InternalSwap(StellarSetOptionsOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  inflation_destination_account_.Swap(&other->inflation_destination_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  home_domain_.Swap(&other->home_domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signer_key_.Swap(&other->signer_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clear_flags_, other->clear_flags_);
  swap(set_flags_, other->set_flags_);
  swap(master_weight_, other->master_weight_);
  swap(low_threshold_, other->low_threshold_);
  swap(medium_threshold_, other->medium_threshold_);
  swap(high_threshold_, other->high_threshold_);
  swap(signer_type_, other->signer_type_);
  swap(signer_weight_, other->signer_weight_);
}

::google::protobuf::Metadata StellarSetOptionsOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarChangeTrustOp::InitAsDefaultInstance() {
  ::hw::trezor::messages::stellar::_StellarChangeTrustOp_default_instance_._instance.get_mutable()->asset_ = const_cast< ::hw::trezor::messages::stellar::StellarAssetType*>(
      ::hw::trezor::messages::stellar::StellarAssetType::internal_default_instance());
}
class StellarChangeTrustOp::HasBitSetters {
 public:
  static void set_has_source_account(StellarChangeTrustOp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::hw::trezor::messages::stellar::StellarAssetType& asset(const StellarChangeTrustOp* msg);
  static void set_has_asset(StellarChangeTrustOp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_limit(StellarChangeTrustOp* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::hw::trezor::messages::stellar::StellarAssetType&
StellarChangeTrustOp::HasBitSetters::asset(const StellarChangeTrustOp* msg) {
  return *msg->asset_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarChangeTrustOp::kSourceAccountFieldNumber;
const int StellarChangeTrustOp::kAssetFieldNumber;
const int StellarChangeTrustOp::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarChangeTrustOp::StellarChangeTrustOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarChangeTrustOp)
}
StellarChangeTrustOp::StellarChangeTrustOp(const StellarChangeTrustOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  if (from.has_asset()) {
    asset_ = new ::hw::trezor::messages::stellar::StellarAssetType(*from.asset_);
  } else {
    asset_ = nullptr;
  }
  limit_ = from.limit_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarChangeTrustOp)
}

void StellarChangeTrustOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarChangeTrustOp_messages_2dstellar_2eproto.base);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&asset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&asset_)) + sizeof(limit_));
}

StellarChangeTrustOp::~StellarChangeTrustOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarChangeTrustOp)
  SharedDtor();
}

void StellarChangeTrustOp::SharedDtor() {
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete asset_;
}

void StellarChangeTrustOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarChangeTrustOp& StellarChangeTrustOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarChangeTrustOp_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarChangeTrustOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarChangeTrustOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      source_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(asset_ != nullptr);
      asset_->Clear();
    }
  }
  limit_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarChangeTrustOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarChangeTrustOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarChangeTrustOp.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .hw.trezor.messages.stellar.StellarAssetType asset = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::hw::trezor::messages::stellar::StellarAssetType::_InternalParse;
        object = msg->mutable_asset();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional uint64 limit = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_limit(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarChangeTrustOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarChangeTrustOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarChangeTrustOp.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .hw.trezor.messages.stellar.StellarAssetType asset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_limit(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarChangeTrustOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarChangeTrustOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarChangeTrustOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarChangeTrustOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarChangeTrustOp.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_account(), output);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType asset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::asset(this), output);
  }

  // optional uint64 limit = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->limit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarChangeTrustOp)
}

::google::protobuf::uint8* StellarChangeTrustOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarChangeTrustOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarChangeTrustOp.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_account(), target);
  }

  // optional .hw.trezor.messages.stellar.StellarAssetType asset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::asset(this), target);
  }

  // optional uint64 limit = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->limit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarChangeTrustOp)
  return target;
}

size_t StellarChangeTrustOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarChangeTrustOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string source_account = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional .hw.trezor.messages.stellar.StellarAssetType asset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *asset_);
    }

    // optional uint64 limit = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->limit());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarChangeTrustOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarChangeTrustOp)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarChangeTrustOp* source =
      ::google::protobuf::DynamicCastToGenerated<StellarChangeTrustOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarChangeTrustOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarChangeTrustOp)
    MergeFrom(*source);
  }
}

void StellarChangeTrustOp::MergeFrom(const StellarChangeTrustOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarChangeTrustOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_asset()->::hw::trezor::messages::stellar::StellarAssetType::MergeFrom(from.asset());
    }
    if (cached_has_bits & 0x00000004u) {
      limit_ = from.limit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StellarChangeTrustOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarChangeTrustOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarChangeTrustOp::CopyFrom(const StellarChangeTrustOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarChangeTrustOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarChangeTrustOp::IsInitialized() const {
  return true;
}

void StellarChangeTrustOp::Swap(StellarChangeTrustOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarChangeTrustOp::InternalSwap(StellarChangeTrustOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(asset_, other->asset_);
  swap(limit_, other->limit_);
}

::google::protobuf::Metadata StellarChangeTrustOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarAllowTrustOp::InitAsDefaultInstance() {
}
class StellarAllowTrustOp::HasBitSetters {
 public:
  static void set_has_source_account(StellarAllowTrustOp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_trusted_account(StellarAllowTrustOp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_asset_type(StellarAllowTrustOp* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_asset_code(StellarAllowTrustOp* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_is_authorized(StellarAllowTrustOp* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarAllowTrustOp::kSourceAccountFieldNumber;
const int StellarAllowTrustOp::kTrustedAccountFieldNumber;
const int StellarAllowTrustOp::kAssetTypeFieldNumber;
const int StellarAllowTrustOp::kAssetCodeFieldNumber;
const int StellarAllowTrustOp::kIsAuthorizedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarAllowTrustOp::StellarAllowTrustOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarAllowTrustOp)
}
StellarAllowTrustOp::StellarAllowTrustOp(const StellarAllowTrustOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  trusted_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trusted_account()) {
    trusted_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trusted_account_);
  }
  asset_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_asset_code()) {
    asset_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_code_);
  }
  ::memcpy(&asset_type_, &from.asset_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_authorized_) -
    reinterpret_cast<char*>(&asset_type_)) + sizeof(is_authorized_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarAllowTrustOp)
}

void StellarAllowTrustOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarAllowTrustOp_messages_2dstellar_2eproto.base);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trusted_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&asset_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_authorized_) -
      reinterpret_cast<char*>(&asset_type_)) + sizeof(is_authorized_));
}

StellarAllowTrustOp::~StellarAllowTrustOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarAllowTrustOp)
  SharedDtor();
}

void StellarAllowTrustOp::SharedDtor() {
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trusted_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  asset_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StellarAllowTrustOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarAllowTrustOp& StellarAllowTrustOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarAllowTrustOp_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarAllowTrustOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarAllowTrustOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      source_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      trusted_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      asset_code_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&asset_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_authorized_) -
        reinterpret_cast<char*>(&asset_type_)) + sizeof(is_authorized_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarAllowTrustOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarAllowTrustOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarAllowTrustOp.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string trusted_account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account");
        object = msg->mutable_trusted_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 asset_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_asset_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string asset_code = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code");
        object = msg->mutable_asset_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 is_authorized = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_is_authorized(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarAllowTrustOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarAllowTrustOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarAllowTrustOp.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string trusted_account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trusted_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trusted_account().data(), static_cast<int>(this->trusted_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 asset_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_asset_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asset_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string asset_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_asset_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->asset_code().data(), static_cast<int>(this->asset_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 is_authorized = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_is_authorized(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_authorized_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarAllowTrustOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarAllowTrustOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarAllowTrustOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarAllowTrustOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAllowTrustOp.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_account(), output);
  }

  // optional string trusted_account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trusted_account().data(), static_cast<int>(this->trusted_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trusted_account(), output);
  }

  // optional uint32 asset_type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->asset_type(), output);
  }

  // optional string asset_code = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->asset_code().data(), static_cast<int>(this->asset_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->asset_code(), output);
  }

  // optional uint32 is_authorized = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->is_authorized(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarAllowTrustOp)
}

::google::protobuf::uint8* StellarAllowTrustOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarAllowTrustOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAllowTrustOp.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_account(), target);
  }

  // optional string trusted_account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trusted_account().data(), static_cast<int>(this->trusted_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAllowTrustOp.trusted_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trusted_account(), target);
  }

  // optional uint32 asset_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->asset_type(), target);
  }

  // optional string asset_code = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->asset_code().data(), static_cast<int>(this->asset_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAllowTrustOp.asset_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->asset_code(), target);
  }

  // optional uint32 is_authorized = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->is_authorized(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarAllowTrustOp)
  return target;
}

size_t StellarAllowTrustOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarAllowTrustOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string source_account = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional string trusted_account = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trusted_account());
    }

    // optional string asset_code = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->asset_code());
    }

    // optional uint32 asset_type = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asset_type());
    }

    // optional uint32 is_authorized = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->is_authorized());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarAllowTrustOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarAllowTrustOp)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarAllowTrustOp* source =
      ::google::protobuf::DynamicCastToGenerated<StellarAllowTrustOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarAllowTrustOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarAllowTrustOp)
    MergeFrom(*source);
  }
}

void StellarAllowTrustOp::MergeFrom(const StellarAllowTrustOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarAllowTrustOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      trusted_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trusted_account_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      asset_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_code_);
    }
    if (cached_has_bits & 0x00000008u) {
      asset_type_ = from.asset_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_authorized_ = from.is_authorized_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StellarAllowTrustOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarAllowTrustOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarAllowTrustOp::CopyFrom(const StellarAllowTrustOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarAllowTrustOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarAllowTrustOp::IsInitialized() const {
  return true;
}

void StellarAllowTrustOp::Swap(StellarAllowTrustOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarAllowTrustOp::InternalSwap(StellarAllowTrustOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  trusted_account_.Swap(&other->trusted_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  asset_code_.Swap(&other->asset_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(asset_type_, other->asset_type_);
  swap(is_authorized_, other->is_authorized_);
}

::google::protobuf::Metadata StellarAllowTrustOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarAccountMergeOp::InitAsDefaultInstance() {
}
class StellarAccountMergeOp::HasBitSetters {
 public:
  static void set_has_source_account(StellarAccountMergeOp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_destination_account(StellarAccountMergeOp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarAccountMergeOp::kSourceAccountFieldNumber;
const int StellarAccountMergeOp::kDestinationAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarAccountMergeOp::StellarAccountMergeOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarAccountMergeOp)
}
StellarAccountMergeOp::StellarAccountMergeOp(const StellarAccountMergeOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  destination_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_destination_account()) {
    destination_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_account_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarAccountMergeOp)
}

void StellarAccountMergeOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarAccountMergeOp_messages_2dstellar_2eproto.base);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StellarAccountMergeOp::~StellarAccountMergeOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarAccountMergeOp)
  SharedDtor();
}

void StellarAccountMergeOp::SharedDtor() {
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StellarAccountMergeOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarAccountMergeOp& StellarAccountMergeOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarAccountMergeOp_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarAccountMergeOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarAccountMergeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      source_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      destination_account_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarAccountMergeOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarAccountMergeOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarAccountMergeOp.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string destination_account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account");
        object = msg->mutable_destination_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarAccountMergeOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarAccountMergeOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarAccountMergeOp.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string destination_account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->destination_account().data(), static_cast<int>(this->destination_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarAccountMergeOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarAccountMergeOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarAccountMergeOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarAccountMergeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAccountMergeOp.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_account(), output);
  }

  // optional string destination_account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_account().data(), static_cast<int>(this->destination_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->destination_account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarAccountMergeOp)
}

::google::protobuf::uint8* StellarAccountMergeOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarAccountMergeOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAccountMergeOp.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_account(), target);
  }

  // optional string destination_account = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_account().data(), static_cast<int>(this->destination_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarAccountMergeOp.destination_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->destination_account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarAccountMergeOp)
  return target;
}

size_t StellarAccountMergeOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarAccountMergeOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string source_account = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional string destination_account = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destination_account());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarAccountMergeOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarAccountMergeOp)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarAccountMergeOp* source =
      ::google::protobuf::DynamicCastToGenerated<StellarAccountMergeOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarAccountMergeOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarAccountMergeOp)
    MergeFrom(*source);
  }
}

void StellarAccountMergeOp::MergeFrom(const StellarAccountMergeOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarAccountMergeOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      destination_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_account_);
    }
  }
}

void StellarAccountMergeOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarAccountMergeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarAccountMergeOp::CopyFrom(const StellarAccountMergeOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarAccountMergeOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarAccountMergeOp::IsInitialized() const {
  return true;
}

void StellarAccountMergeOp::Swap(StellarAccountMergeOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarAccountMergeOp::InternalSwap(StellarAccountMergeOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destination_account_.Swap(&other->destination_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StellarAccountMergeOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarManageDataOp::InitAsDefaultInstance() {
}
class StellarManageDataOp::HasBitSetters {
 public:
  static void set_has_source_account(StellarManageDataOp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_key(StellarManageDataOp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_value(StellarManageDataOp* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarManageDataOp::kSourceAccountFieldNumber;
const int StellarManageDataOp::kKeyFieldNumber;
const int StellarManageDataOp::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarManageDataOp::StellarManageDataOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarManageDataOp)
}
StellarManageDataOp::StellarManageDataOp(const StellarManageDataOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarManageDataOp)
}

void StellarManageDataOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarManageDataOp_messages_2dstellar_2eproto.base);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StellarManageDataOp::~StellarManageDataOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarManageDataOp)
  SharedDtor();
}

void StellarManageDataOp::SharedDtor() {
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StellarManageDataOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarManageDataOp& StellarManageDataOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarManageDataOp_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarManageDataOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarManageDataOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      source_account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarManageDataOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarManageDataOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarManageDataOp.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarManageDataOp.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes value = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarManageDataOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarManageDataOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarManageDataOp.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarManageDataOp.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarManageDataOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarManageDataOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarManageDataOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarManageDataOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarManageDataOp.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_account(), output);
  }

  // optional string key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarManageDataOp.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional bytes value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarManageDataOp)
}

::google::protobuf::uint8* StellarManageDataOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarManageDataOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarManageDataOp.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_account(), target);
  }

  // optional string key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarManageDataOp.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional bytes value = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarManageDataOp)
  return target;
}

size_t StellarManageDataOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarManageDataOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string source_account = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional string key = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional bytes value = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarManageDataOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarManageDataOp)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarManageDataOp* source =
      ::google::protobuf::DynamicCastToGenerated<StellarManageDataOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarManageDataOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarManageDataOp)
    MergeFrom(*source);
  }
}

void StellarManageDataOp::MergeFrom(const StellarManageDataOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarManageDataOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void StellarManageDataOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarManageDataOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarManageDataOp::CopyFrom(const StellarManageDataOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarManageDataOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarManageDataOp::IsInitialized() const {
  return true;
}

void StellarManageDataOp::Swap(StellarManageDataOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarManageDataOp::InternalSwap(StellarManageDataOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StellarManageDataOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarBumpSequenceOp::InitAsDefaultInstance() {
}
class StellarBumpSequenceOp::HasBitSetters {
 public:
  static void set_has_source_account(StellarBumpSequenceOp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_bump_to(StellarBumpSequenceOp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarBumpSequenceOp::kSourceAccountFieldNumber;
const int StellarBumpSequenceOp::kBumpToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarBumpSequenceOp::StellarBumpSequenceOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarBumpSequenceOp)
}
StellarBumpSequenceOp::StellarBumpSequenceOp(const StellarBumpSequenceOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_source_account()) {
    source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
  }
  bump_to_ = from.bump_to_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarBumpSequenceOp)
}

void StellarBumpSequenceOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarBumpSequenceOp_messages_2dstellar_2eproto.base);
  source_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bump_to_ = PROTOBUF_ULONGLONG(0);
}

StellarBumpSequenceOp::~StellarBumpSequenceOp() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  SharedDtor();
}

void StellarBumpSequenceOp::SharedDtor() {
  source_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StellarBumpSequenceOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarBumpSequenceOp& StellarBumpSequenceOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarBumpSequenceOp_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarBumpSequenceOp::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    source_account_.ClearNonDefaultToEmptyNoArena();
  }
  bump_to_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarBumpSequenceOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarBumpSequenceOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account");
        object = msg->mutable_source_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint64 bump_to = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_bump_to(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarBumpSequenceOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_account().data(), static_cast<int>(this->source_account().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bump_to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_bump_to(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bump_to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarBumpSequenceOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source_account(), output);
  }

  // optional uint64 bump_to = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bump_to(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarBumpSequenceOp)
}

::google::protobuf::uint8* StellarBumpSequenceOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string source_account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_account().data(), static_cast<int>(this->source_account().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.stellar.StellarBumpSequenceOp.source_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source_account(), target);
  }

  // optional uint64 bump_to = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bump_to(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  return target;
}

size_t StellarBumpSequenceOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string source_account = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_account());
    }

    // optional uint64 bump_to = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bump_to());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarBumpSequenceOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarBumpSequenceOp* source =
      ::google::protobuf::DynamicCastToGenerated<StellarBumpSequenceOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarBumpSequenceOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarBumpSequenceOp)
    MergeFrom(*source);
  }
}

void StellarBumpSequenceOp::MergeFrom(const StellarBumpSequenceOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      source_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_account_);
    }
    if (cached_has_bits & 0x00000002u) {
      bump_to_ = from.bump_to_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StellarBumpSequenceOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarBumpSequenceOp::CopyFrom(const StellarBumpSequenceOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarBumpSequenceOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarBumpSequenceOp::IsInitialized() const {
  return true;
}

void StellarBumpSequenceOp::Swap(StellarBumpSequenceOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarBumpSequenceOp::InternalSwap(StellarBumpSequenceOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  source_account_.Swap(&other->source_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bump_to_, other->bump_to_);
}

::google::protobuf::Metadata StellarBumpSequenceOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StellarSignedTx::InitAsDefaultInstance() {
}
class StellarSignedTx::HasBitSetters {
 public:
  static void set_has_public_key(StellarSignedTx* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_signature(StellarSignedTx* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StellarSignedTx::kPublicKeyFieldNumber;
const int StellarSignedTx::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StellarSignedTx::StellarSignedTx()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.stellar.StellarSignedTx)
}
StellarSignedTx::StellarSignedTx(const StellarSignedTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_key()) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.stellar.StellarSignedTx)
}

void StellarSignedTx::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StellarSignedTx_messages_2dstellar_2eproto.base);
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StellarSignedTx::~StellarSignedTx() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.stellar.StellarSignedTx)
  SharedDtor();
}

void StellarSignedTx::SharedDtor() {
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StellarSignedTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StellarSignedTx& StellarSignedTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StellarSignedTx_messages_2dstellar_2eproto.base);
  return *internal_default_instance();
}


void StellarSignedTx::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.stellar.StellarSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      public_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      signature_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StellarSignedTx::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StellarSignedTx*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes public_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_public_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes signature = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StellarSignedTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.stellar.StellarSignedTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes public_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.stellar.StellarSignedTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.stellar.StellarSignedTx)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StellarSignedTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.stellar.StellarSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->public_key(), output);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.stellar.StellarSignedTx)
}

::google::protobuf::uint8* StellarSignedTx::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.stellar.StellarSignedTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->public_key(), target);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.stellar.StellarSignedTx)
  return target;
}

size_t StellarSignedTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.stellar.StellarSignedTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes public_key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->public_key());
    }

    // optional bytes signature = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signature());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StellarSignedTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.stellar.StellarSignedTx)
  GOOGLE_DCHECK_NE(&from, this);
  const StellarSignedTx* source =
      ::google::protobuf::DynamicCastToGenerated<StellarSignedTx>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.stellar.StellarSignedTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.stellar.StellarSignedTx)
    MergeFrom(*source);
  }
}

void StellarSignedTx::MergeFrom(const StellarSignedTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.stellar.StellarSignedTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
  }
}

void StellarSignedTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.stellar.StellarSignedTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StellarSignedTx::CopyFrom(const StellarSignedTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.stellar.StellarSignedTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StellarSignedTx::IsInitialized() const {
  return true;
}

void StellarSignedTx::Swap(StellarSignedTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StellarSignedTx::InternalSwap(StellarSignedTx* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StellarSignedTx::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dstellar_2eproto);
  return ::file_level_metadata_messages_2dstellar_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace stellar
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarAssetType* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarAssetType >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarAssetType >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarGetAddress* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarGetAddress >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarGetAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarAddress* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarAddress >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarSignTx* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarSignTx >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarSignTx >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarTxOpRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarTxOpRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarTxOpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarPaymentOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarPaymentOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarPaymentOp >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarCreateAccountOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarCreateAccountOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarCreateAccountOp >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarPathPaymentOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarPathPaymentOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarPathPaymentOp >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarManageOfferOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarManageOfferOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarManageOfferOp >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarCreatePassiveOfferOp >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarSetOptionsOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarSetOptionsOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarSetOptionsOp >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarChangeTrustOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarChangeTrustOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarChangeTrustOp >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarAllowTrustOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarAllowTrustOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarAllowTrustOp >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarAccountMergeOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarAccountMergeOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarAccountMergeOp >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarManageDataOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarManageDataOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarManageDataOp >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarBumpSequenceOp* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarBumpSequenceOp >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarBumpSequenceOp >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::stellar::StellarSignedTx* Arena::CreateMaybeMessage< ::hw::trezor::messages::stellar::StellarSignedTx >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::stellar::StellarSignedTx >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
