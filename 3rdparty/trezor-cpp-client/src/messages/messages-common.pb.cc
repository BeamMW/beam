// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages-common.proto

#include "messages-common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace hw {
namespace trezor {
namespace messages {
namespace common {
class SuccessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Success> _instance;
} _Success_default_instance_;
class FailureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Failure> _instance;
} _Failure_default_instance_;
class ButtonRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ButtonRequest> _instance;
} _ButtonRequest_default_instance_;
class ButtonAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ButtonAck> _instance;
} _ButtonAck_default_instance_;
class PinMatrixRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PinMatrixRequest> _instance;
} _PinMatrixRequest_default_instance_;
class PinMatrixAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PinMatrixAck> _instance;
} _PinMatrixAck_default_instance_;
class PassphraseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PassphraseRequest> _instance;
} _PassphraseRequest_default_instance_;
class PassphraseAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PassphraseAck> _instance;
} _PassphraseAck_default_instance_;
class PassphraseStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PassphraseStateRequest> _instance;
} _PassphraseStateRequest_default_instance_;
class PassphraseStateAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PassphraseStateAck> _instance;
} _PassphraseStateAck_default_instance_;
class HDNodeTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDNodeType> _instance;
} _HDNodeType_default_instance_;
}  // namespace common
}  // namespace messages
}  // namespace trezor
}  // namespace hw
static void InitDefaultsSuccess_messages_2dcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::common::_Success_default_instance_;
    new (ptr) ::hw::trezor::messages::common::Success();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::common::Success::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Success_messages_2dcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSuccess_messages_2dcommon_2eproto}, {}};

static void InitDefaultsFailure_messages_2dcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::common::_Failure_default_instance_;
    new (ptr) ::hw::trezor::messages::common::Failure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::common::Failure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Failure_messages_2dcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFailure_messages_2dcommon_2eproto}, {}};

static void InitDefaultsButtonRequest_messages_2dcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::common::_ButtonRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::common::ButtonRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::common::ButtonRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ButtonRequest_messages_2dcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsButtonRequest_messages_2dcommon_2eproto}, {}};

static void InitDefaultsButtonAck_messages_2dcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::common::_ButtonAck_default_instance_;
    new (ptr) ::hw::trezor::messages::common::ButtonAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::common::ButtonAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ButtonAck_messages_2dcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsButtonAck_messages_2dcommon_2eproto}, {}};

static void InitDefaultsPinMatrixRequest_messages_2dcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::common::_PinMatrixRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::common::PinMatrixRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::common::PinMatrixRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PinMatrixRequest_messages_2dcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPinMatrixRequest_messages_2dcommon_2eproto}, {}};

static void InitDefaultsPinMatrixAck_messages_2dcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::common::_PinMatrixAck_default_instance_;
    new (ptr) ::hw::trezor::messages::common::PinMatrixAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::common::PinMatrixAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PinMatrixAck_messages_2dcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPinMatrixAck_messages_2dcommon_2eproto}, {}};

static void InitDefaultsPassphraseRequest_messages_2dcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::common::_PassphraseRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::common::PassphraseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::common::PassphraseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PassphraseRequest_messages_2dcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPassphraseRequest_messages_2dcommon_2eproto}, {}};

static void InitDefaultsPassphraseAck_messages_2dcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::common::_PassphraseAck_default_instance_;
    new (ptr) ::hw::trezor::messages::common::PassphraseAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::common::PassphraseAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PassphraseAck_messages_2dcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPassphraseAck_messages_2dcommon_2eproto}, {}};

static void InitDefaultsPassphraseStateRequest_messages_2dcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::common::_PassphraseStateRequest_default_instance_;
    new (ptr) ::hw::trezor::messages::common::PassphraseStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::common::PassphraseStateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PassphraseStateRequest_messages_2dcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPassphraseStateRequest_messages_2dcommon_2eproto}, {}};

static void InitDefaultsPassphraseStateAck_messages_2dcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::common::_PassphraseStateAck_default_instance_;
    new (ptr) ::hw::trezor::messages::common::PassphraseStateAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::common::PassphraseStateAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PassphraseStateAck_messages_2dcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPassphraseStateAck_messages_2dcommon_2eproto}, {}};

static void InitDefaultsHDNodeType_messages_2dcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hw::trezor::messages::common::_HDNodeType_default_instance_;
    new (ptr) ::hw::trezor::messages::common::HDNodeType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hw::trezor::messages::common::HDNodeType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HDNodeType_messages_2dcommon_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHDNodeType_messages_2dcommon_2eproto}, {}};

void InitDefaults_messages_2dcommon_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Success_messages_2dcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Failure_messages_2dcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ButtonRequest_messages_2dcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ButtonAck_messages_2dcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PinMatrixRequest_messages_2dcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PinMatrixAck_messages_2dcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PassphraseRequest_messages_2dcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PassphraseAck_messages_2dcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PassphraseStateRequest_messages_2dcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PassphraseStateAck_messages_2dcommon_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HDNodeType_messages_2dcommon_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_messages_2dcommon_2eproto[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_messages_2dcommon_2eproto[3];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_messages_2dcommon_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_messages_2dcommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::Success, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::Success, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::Success, message_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::Failure, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::Failure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::Failure, code_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::Failure, message_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::ButtonRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::ButtonRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::ButtonRequest, code_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::ButtonRequest, data_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::ButtonAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::ButtonAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PinMatrixRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PinMatrixRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PinMatrixRequest, type_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PinMatrixAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PinMatrixAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PinMatrixAck, pin_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseRequest, on_device_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseAck, passphrase_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseAck, state_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseStateRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseStateRequest, state_),
  0,
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseStateAck, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::PassphraseStateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::HDNodeType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::HDNodeType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::HDNodeType, depth_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::HDNodeType, fingerprint_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::HDNodeType, child_num_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::HDNodeType, chain_code_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::HDNodeType, private_key_),
  PROTOBUF_FIELD_OFFSET(::hw::trezor::messages::common::HDNodeType, public_key_),
  3,
  4,
  5,
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::hw::trezor::messages::common::Success)},
  { 7, 14, sizeof(::hw::trezor::messages::common::Failure)},
  { 16, 23, sizeof(::hw::trezor::messages::common::ButtonRequest)},
  { 25, 30, sizeof(::hw::trezor::messages::common::ButtonAck)},
  { 30, 36, sizeof(::hw::trezor::messages::common::PinMatrixRequest)},
  { 37, 43, sizeof(::hw::trezor::messages::common::PinMatrixAck)},
  { 44, 50, sizeof(::hw::trezor::messages::common::PassphraseRequest)},
  { 51, 58, sizeof(::hw::trezor::messages::common::PassphraseAck)},
  { 60, 66, sizeof(::hw::trezor::messages::common::PassphraseStateRequest)},
  { 67, 72, sizeof(::hw::trezor::messages::common::PassphraseStateAck)},
  { 72, 83, sizeof(::hw::trezor::messages::common::HDNodeType)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::common::_Success_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::common::_Failure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::common::_ButtonRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::common::_ButtonAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::common::_PinMatrixRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::common::_PinMatrixAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::common::_PassphraseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::common::_PassphraseAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::common::_PassphraseStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::common::_PassphraseStateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hw::trezor::messages::common::_HDNodeType_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_messages_2dcommon_2eproto = {
  {}, AddDescriptors_messages_2dcommon_2eproto, "messages-common.proto", schemas,
  file_default_instances, TableStruct_messages_2dcommon_2eproto::offsets,
  file_level_metadata_messages_2dcommon_2eproto, 11, file_level_enum_descriptors_messages_2dcommon_2eproto, file_level_service_descriptors_messages_2dcommon_2eproto,
};

const char descriptor_table_protodef_messages_2dcommon_2eproto[] =
  "\n\025messages-common.proto\022\031hw.trezor.messa"
  "ges.common\"\032\n\007Success\022\017\n\007message\030\001 \001(\t\"\306"
  "\003\n\007Failure\022<\n\004code\030\001 \001(\0162..hw.trezor.mes"
  "sages.common.Failure.FailureType\022\017\n\007mess"
  "age\030\002 \001(\t\"\353\002\n\013FailureType\022\035\n\031Failure_Une"
  "xpectedMessage\020\001\022\032\n\026Failure_ButtonExpect"
  "ed\020\002\022\025\n\021Failure_DataError\020\003\022\033\n\027Failure_A"
  "ctionCancelled\020\004\022\027\n\023Failure_PinExpected\020"
  "\005\022\030\n\024Failure_PinCancelled\020\006\022\026\n\022Failure_P"
  "inInvalid\020\007\022\034\n\030Failure_InvalidSignature\020"
  "\010\022\030\n\024Failure_ProcessError\020\t\022\032\n\026Failure_N"
  "otEnoughFunds\020\n\022\032\n\026Failure_NotInitialize"
  "d\020\013\022\027\n\023Failure_PinMismatch\020\014\022\031\n\025Failure_"
  "FirmwareError\020c\"\332\004\n\rButtonRequest\022H\n\004cod"
  "e\030\001 \001(\0162:.hw.trezor.messages.common.Butt"
  "onRequest.ButtonRequestType\022\014\n\004data\030\002 \001("
  "\t\"\360\003\n\021ButtonRequestType\022\027\n\023ButtonRequest"
  "_Other\020\001\022\"\n\036ButtonRequest_FeeOverThresho"
  "ld\020\002\022\037\n\033ButtonRequest_ConfirmOutput\020\003\022\035\n"
  "\031ButtonRequest_ResetDevice\020\004\022\035\n\031ButtonRe"
  "quest_ConfirmWord\020\005\022\034\n\030ButtonRequest_Wip"
  "eDevice\020\006\022\035\n\031ButtonRequest_ProtectCall\020\007"
  "\022\030\n\024ButtonRequest_SignTx\020\010\022\037\n\033ButtonRequ"
  "est_FirmwareCheck\020\t\022\031\n\025ButtonRequest_Add"
  "ress\020\n\022\033\n\027ButtonRequest_PublicKey\020\013\022#\n\037B"
  "uttonRequest_MnemonicWordCount\020\014\022\037\n\033Butt"
  "onRequest_MnemonicInput\020\r\022 \n\034ButtonReque"
  "st_PassphraseType\020\016\022\'\n#ButtonRequest_Unk"
  "nownDerivationPath\020\017\"\013\n\tButtonAck\"\343\001\n\020Pi"
  "nMatrixRequest\022N\n\004type\030\001 \001(\0162@.hw.trezor"
  ".messages.common.PinMatrixRequest.PinMat"
  "rixRequestType\"\177\n\024PinMatrixRequestType\022 "
  "\n\034PinMatrixRequestType_Current\020\001\022!\n\035PinM"
  "atrixRequestType_NewFirst\020\002\022\"\n\036PinMatrix"
  "RequestType_NewSecond\020\003\"\033\n\014PinMatrixAck\022"
  "\013\n\003pin\030\001 \002(\t\"&\n\021PassphraseRequest\022\021\n\ton_"
  "device\030\001 \001(\010\"2\n\rPassphraseAck\022\022\n\npassphr"
  "ase\030\001 \001(\t\022\r\n\005state\030\002 \001(\014\"\'\n\026PassphraseSt"
  "ateRequest\022\r\n\005state\030\001 \001(\014\"\024\n\022PassphraseS"
  "tateAck\"\200\001\n\nHDNodeType\022\r\n\005depth\030\001 \002(\r\022\023\n"
  "\013fingerprint\030\002 \002(\r\022\021\n\tchild_num\030\003 \002(\r\022\022\n"
  "\nchain_code\030\004 \002(\014\022\023\n\013private_key\030\005 \001(\014\022\022"
  "\n\npublic_key\030\006 \001(\014"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_messages_2dcommon_2eproto = {
  false, InitDefaults_messages_2dcommon_2eproto, 
  descriptor_table_protodef_messages_2dcommon_2eproto,
  "messages-common.proto", &assign_descriptors_table_messages_2dcommon_2eproto, 1698,
};

void AddDescriptors_messages_2dcommon_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_messages_2dcommon_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messages_2dcommon_2eproto = []() { AddDescriptors_messages_2dcommon_2eproto(); return true; }();
namespace hw {
namespace trezor {
namespace messages {
namespace common {
const ::google::protobuf::EnumDescriptor* Failure_FailureType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_messages_2dcommon_2eproto);
  return file_level_enum_descriptors_messages_2dcommon_2eproto[0];
}
bool Failure_FailureType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 99:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Failure_FailureType Failure::Failure_UnexpectedMessage;
const Failure_FailureType Failure::Failure_ButtonExpected;
const Failure_FailureType Failure::Failure_DataError;
const Failure_FailureType Failure::Failure_ActionCancelled;
const Failure_FailureType Failure::Failure_PinExpected;
const Failure_FailureType Failure::Failure_PinCancelled;
const Failure_FailureType Failure::Failure_PinInvalid;
const Failure_FailureType Failure::Failure_InvalidSignature;
const Failure_FailureType Failure::Failure_ProcessError;
const Failure_FailureType Failure::Failure_NotEnoughFunds;
const Failure_FailureType Failure::Failure_NotInitialized;
const Failure_FailureType Failure::Failure_PinMismatch;
const Failure_FailureType Failure::Failure_FirmwareError;
const Failure_FailureType Failure::FailureType_MIN;
const Failure_FailureType Failure::FailureType_MAX;
const int Failure::FailureType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ButtonRequest_ButtonRequestType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_messages_2dcommon_2eproto);
  return file_level_enum_descriptors_messages_2dcommon_2eproto[1];
}
bool ButtonRequest_ButtonRequestType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_Other;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_FeeOverThreshold;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_ConfirmOutput;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_ResetDevice;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_ConfirmWord;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_WipeDevice;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_ProtectCall;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_SignTx;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_FirmwareCheck;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_Address;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_PublicKey;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_MnemonicWordCount;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_MnemonicInput;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_PassphraseType;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequest_UnknownDerivationPath;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequestType_MIN;
const ButtonRequest_ButtonRequestType ButtonRequest::ButtonRequestType_MAX;
const int ButtonRequest::ButtonRequestType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PinMatrixRequest_PinMatrixRequestType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_messages_2dcommon_2eproto);
  return file_level_enum_descriptors_messages_2dcommon_2eproto[2];
}
bool PinMatrixRequest_PinMatrixRequestType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PinMatrixRequest_PinMatrixRequestType PinMatrixRequest::PinMatrixRequestType_Current;
const PinMatrixRequest_PinMatrixRequestType PinMatrixRequest::PinMatrixRequestType_NewFirst;
const PinMatrixRequest_PinMatrixRequestType PinMatrixRequest::PinMatrixRequestType_NewSecond;
const PinMatrixRequest_PinMatrixRequestType PinMatrixRequest::PinMatrixRequestType_MIN;
const PinMatrixRequest_PinMatrixRequestType PinMatrixRequest::PinMatrixRequestType_MAX;
const int PinMatrixRequest::PinMatrixRequestType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Success::InitAsDefaultInstance() {
}
class Success::HasBitSetters {
 public:
  static void set_has_message(Success* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Success::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Success::Success()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.common.Success)
}
Success::Success(const Success& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.common.Success)
}

void Success::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Success_messages_2dcommon_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Success::~Success() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.common.Success)
  SharedDtor();
}

void Success::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Success::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Success& Success::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Success_messages_2dcommon_2eproto.base);
  return *internal_default_instance();
}


void Success::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.common.Success)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Success::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Success*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.common.Success.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Success::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.common.Success)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.common.Success.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.common.Success)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.common.Success)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Success::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.common.Success)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.common.Success.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.common.Success)
}

::google::protobuf::uint8* Success::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.common.Success)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.common.Success.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.common.Success)
  return target;
}

size_t Success::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.common.Success)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string message = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Success::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.common.Success)
  GOOGLE_DCHECK_NE(&from, this);
  const Success* source =
      ::google::protobuf::DynamicCastToGenerated<Success>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.common.Success)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.common.Success)
    MergeFrom(*source);
  }
}

void Success::MergeFrom(const Success& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.common.Success)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    _has_bits_[0] |= 0x00000001u;
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void Success::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.common.Success)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Success::CopyFrom(const Success& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.common.Success)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Success::IsInitialized() const {
  return true;
}

void Success::Swap(Success* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Success::InternalSwap(Success* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Success::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dcommon_2eproto);
  return ::file_level_metadata_messages_2dcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Failure::InitAsDefaultInstance() {
}
class Failure::HasBitSetters {
 public:
  static void set_has_code(Failure* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_message(Failure* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Failure::kCodeFieldNumber;
const int Failure::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Failure::Failure()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.common.Failure)
}
Failure::Failure(const Failure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.common.Failure)
}

void Failure::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Failure_messages_2dcommon_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 1;
}

Failure::~Failure() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.common.Failure)
  SharedDtor();
}

void Failure::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Failure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Failure& Failure::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Failure_messages_2dcommon_2eproto.base);
  return *internal_default_instance();
}


void Failure::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.common.Failure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    code_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Failure::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Failure*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .hw.trezor.messages.common.Failure.FailureType code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::hw::trezor::messages::common::Failure_FailureType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_code(static_cast<::hw::trezor::messages::common::Failure_FailureType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string message = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.common.Failure.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Failure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.common.Failure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.common.Failure.FailureType code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hw::trezor::messages::common::Failure_FailureType_IsValid(value)) {
            set_code(static_cast< ::hw::trezor::messages::common::Failure_FailureType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.common.Failure.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.common.Failure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.common.Failure)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Failure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.common.Failure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.common.Failure.FailureType code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.common.Failure.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.common.Failure)
}

::google::protobuf::uint8* Failure::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.common.Failure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.common.Failure.FailureType code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.common.Failure.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.common.Failure)
  return target;
}

size_t Failure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.common.Failure)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string message = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional .hw.trezor.messages.common.Failure.FailureType code = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Failure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.common.Failure)
  GOOGLE_DCHECK_NE(&from, this);
  const Failure* source =
      ::google::protobuf::DynamicCastToGenerated<Failure>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.common.Failure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.common.Failure)
    MergeFrom(*source);
  }
}

void Failure::MergeFrom(const Failure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.common.Failure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Failure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.common.Failure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Failure::CopyFrom(const Failure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.common.Failure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Failure::IsInitialized() const {
  return true;
}

void Failure::Swap(Failure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Failure::InternalSwap(Failure* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
}

::google::protobuf::Metadata Failure::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dcommon_2eproto);
  return ::file_level_metadata_messages_2dcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ButtonRequest::InitAsDefaultInstance() {
}
class ButtonRequest::HasBitSetters {
 public:
  static void set_has_code(ButtonRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_data(ButtonRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ButtonRequest::kCodeFieldNumber;
const int ButtonRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ButtonRequest::ButtonRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.common.ButtonRequest)
}
ButtonRequest::ButtonRequest(const ButtonRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.common.ButtonRequest)
}

void ButtonRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ButtonRequest_messages_2dcommon_2eproto.base);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 1;
}

ButtonRequest::~ButtonRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.common.ButtonRequest)
  SharedDtor();
}

void ButtonRequest::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ButtonRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ButtonRequest& ButtonRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ButtonRequest_messages_2dcommon_2eproto.base);
  return *internal_default_instance();
}


void ButtonRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.common.ButtonRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      data_.ClearNonDefaultToEmptyNoArena();
    }
    code_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ButtonRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ButtonRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .hw.trezor.messages.common.ButtonRequest.ButtonRequestType code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::hw::trezor::messages::common::ButtonRequest_ButtonRequestType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_code(static_cast<::hw::trezor::messages::common::ButtonRequest_ButtonRequestType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.common.ButtonRequest.data");
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ButtonRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.common.ButtonRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.common.ButtonRequest.ButtonRequestType code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hw::trezor::messages::common::ButtonRequest_ButtonRequestType_IsValid(value)) {
            set_code(static_cast< ::hw::trezor::messages::common::ButtonRequest_ButtonRequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.common.ButtonRequest.data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.common.ButtonRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.common.ButtonRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ButtonRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.common.ButtonRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.common.ButtonRequest.ButtonRequestType code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // optional string data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.common.ButtonRequest.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.common.ButtonRequest)
}

::google::protobuf::uint8* ButtonRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.common.ButtonRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.common.ButtonRequest.ButtonRequestType code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // optional string data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.common.ButtonRequest.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.common.ButtonRequest)
  return target;
}

size_t ButtonRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.common.ButtonRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

    // optional .hw.trezor.messages.common.ButtonRequest.ButtonRequestType code = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ButtonRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.common.ButtonRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ButtonRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ButtonRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.common.ButtonRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.common.ButtonRequest)
    MergeFrom(*source);
  }
}

void ButtonRequest::MergeFrom(const ButtonRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.common.ButtonRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ButtonRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.common.ButtonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ButtonRequest::CopyFrom(const ButtonRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.common.ButtonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ButtonRequest::IsInitialized() const {
  return true;
}

void ButtonRequest::Swap(ButtonRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ButtonRequest::InternalSwap(ButtonRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
}

::google::protobuf::Metadata ButtonRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dcommon_2eproto);
  return ::file_level_metadata_messages_2dcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ButtonAck::InitAsDefaultInstance() {
}
class ButtonAck::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ButtonAck::ButtonAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.common.ButtonAck)
}
ButtonAck::ButtonAck(const ButtonAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.common.ButtonAck)
}

void ButtonAck::SharedCtor() {
}

ButtonAck::~ButtonAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.common.ButtonAck)
  SharedDtor();
}

void ButtonAck::SharedDtor() {
}

void ButtonAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ButtonAck& ButtonAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ButtonAck_messages_2dcommon_2eproto.base);
  return *internal_default_instance();
}


void ButtonAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.common.ButtonAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ButtonAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ButtonAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ButtonAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.common.ButtonAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.common.ButtonAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.common.ButtonAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ButtonAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.common.ButtonAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.common.ButtonAck)
}

::google::protobuf::uint8* ButtonAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.common.ButtonAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.common.ButtonAck)
  return target;
}

size_t ButtonAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.common.ButtonAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ButtonAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.common.ButtonAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ButtonAck* source =
      ::google::protobuf::DynamicCastToGenerated<ButtonAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.common.ButtonAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.common.ButtonAck)
    MergeFrom(*source);
  }
}

void ButtonAck::MergeFrom(const ButtonAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.common.ButtonAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ButtonAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.common.ButtonAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ButtonAck::CopyFrom(const ButtonAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.common.ButtonAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ButtonAck::IsInitialized() const {
  return true;
}

void ButtonAck::Swap(ButtonAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ButtonAck::InternalSwap(ButtonAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata ButtonAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dcommon_2eproto);
  return ::file_level_metadata_messages_2dcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PinMatrixRequest::InitAsDefaultInstance() {
}
class PinMatrixRequest::HasBitSetters {
 public:
  static void set_has_type(PinMatrixRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PinMatrixRequest::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PinMatrixRequest::PinMatrixRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.common.PinMatrixRequest)
}
PinMatrixRequest::PinMatrixRequest(const PinMatrixRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.common.PinMatrixRequest)
}

void PinMatrixRequest::SharedCtor() {
  type_ = 1;
}

PinMatrixRequest::~PinMatrixRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.common.PinMatrixRequest)
  SharedDtor();
}

void PinMatrixRequest::SharedDtor() {
}

void PinMatrixRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PinMatrixRequest& PinMatrixRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PinMatrixRequest_messages_2dcommon_2eproto.base);
  return *internal_default_instance();
}


void PinMatrixRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.common.PinMatrixRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PinMatrixRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PinMatrixRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .hw.trezor.messages.common.PinMatrixRequest.PinMatrixRequestType type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::hw::trezor::messages::common::PinMatrixRequest_PinMatrixRequestType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_type(static_cast<::hw::trezor::messages::common::PinMatrixRequest_PinMatrixRequestType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PinMatrixRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.common.PinMatrixRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .hw.trezor.messages.common.PinMatrixRequest.PinMatrixRequestType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::hw::trezor::messages::common::PinMatrixRequest_PinMatrixRequestType_IsValid(value)) {
            set_type(static_cast< ::hw::trezor::messages::common::PinMatrixRequest_PinMatrixRequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.common.PinMatrixRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.common.PinMatrixRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PinMatrixRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.common.PinMatrixRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.common.PinMatrixRequest.PinMatrixRequestType type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.common.PinMatrixRequest)
}

::google::protobuf::uint8* PinMatrixRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.common.PinMatrixRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .hw.trezor.messages.common.PinMatrixRequest.PinMatrixRequestType type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.common.PinMatrixRequest)
  return target;
}

size_t PinMatrixRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.common.PinMatrixRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .hw.trezor.messages.common.PinMatrixRequest.PinMatrixRequestType type = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PinMatrixRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.common.PinMatrixRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PinMatrixRequest* source =
      ::google::protobuf::DynamicCastToGenerated<PinMatrixRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.common.PinMatrixRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.common.PinMatrixRequest)
    MergeFrom(*source);
  }
}

void PinMatrixRequest::MergeFrom(const PinMatrixRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.common.PinMatrixRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    set_type(from.type());
  }
}

void PinMatrixRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.common.PinMatrixRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PinMatrixRequest::CopyFrom(const PinMatrixRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.common.PinMatrixRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PinMatrixRequest::IsInitialized() const {
  return true;
}

void PinMatrixRequest::Swap(PinMatrixRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PinMatrixRequest::InternalSwap(PinMatrixRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(type_, other->type_);
}

::google::protobuf::Metadata PinMatrixRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dcommon_2eproto);
  return ::file_level_metadata_messages_2dcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PinMatrixAck::InitAsDefaultInstance() {
}
class PinMatrixAck::HasBitSetters {
 public:
  static void set_has_pin(PinMatrixAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PinMatrixAck::kPinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PinMatrixAck::PinMatrixAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.common.PinMatrixAck)
}
PinMatrixAck::PinMatrixAck(const PinMatrixAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pin()) {
    pin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pin_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.common.PinMatrixAck)
}

void PinMatrixAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PinMatrixAck_messages_2dcommon_2eproto.base);
  pin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PinMatrixAck::~PinMatrixAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.common.PinMatrixAck)
  SharedDtor();
}

void PinMatrixAck::SharedDtor() {
  pin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PinMatrixAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PinMatrixAck& PinMatrixAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PinMatrixAck_messages_2dcommon_2eproto.base);
  return *internal_default_instance();
}


void PinMatrixAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.common.PinMatrixAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pin_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PinMatrixAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PinMatrixAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string pin = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.common.PinMatrixAck.pin");
        object = msg->mutable_pin();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PinMatrixAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.common.PinMatrixAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string pin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pin().data(), static_cast<int>(this->pin().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.common.PinMatrixAck.pin");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.common.PinMatrixAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.common.PinMatrixAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PinMatrixAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.common.PinMatrixAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string pin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pin().data(), static_cast<int>(this->pin().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.common.PinMatrixAck.pin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pin(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.common.PinMatrixAck)
}

::google::protobuf::uint8* PinMatrixAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.common.PinMatrixAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string pin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pin().data(), static_cast<int>(this->pin().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.common.PinMatrixAck.pin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pin(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.common.PinMatrixAck)
  return target;
}

size_t PinMatrixAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.common.PinMatrixAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string pin = 1;
  if (has_pin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pin());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PinMatrixAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.common.PinMatrixAck)
  GOOGLE_DCHECK_NE(&from, this);
  const PinMatrixAck* source =
      ::google::protobuf::DynamicCastToGenerated<PinMatrixAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.common.PinMatrixAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.common.PinMatrixAck)
    MergeFrom(*source);
  }
}

void PinMatrixAck::MergeFrom(const PinMatrixAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.common.PinMatrixAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pin()) {
    _has_bits_[0] |= 0x00000001u;
    pin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pin_);
  }
}

void PinMatrixAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.common.PinMatrixAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PinMatrixAck::CopyFrom(const PinMatrixAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.common.PinMatrixAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PinMatrixAck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PinMatrixAck::Swap(PinMatrixAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PinMatrixAck::InternalSwap(PinMatrixAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pin_.Swap(&other->pin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata PinMatrixAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dcommon_2eproto);
  return ::file_level_metadata_messages_2dcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PassphraseRequest::InitAsDefaultInstance() {
}
class PassphraseRequest::HasBitSetters {
 public:
  static void set_has_on_device(PassphraseRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PassphraseRequest::kOnDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PassphraseRequest::PassphraseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.common.PassphraseRequest)
}
PassphraseRequest::PassphraseRequest(const PassphraseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  on_device_ = from.on_device_;
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.common.PassphraseRequest)
}

void PassphraseRequest::SharedCtor() {
  on_device_ = false;
}

PassphraseRequest::~PassphraseRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.common.PassphraseRequest)
  SharedDtor();
}

void PassphraseRequest::SharedDtor() {
}

void PassphraseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PassphraseRequest& PassphraseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PassphraseRequest_messages_2dcommon_2eproto.base);
  return *internal_default_instance();
}


void PassphraseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.common.PassphraseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  on_device_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PassphraseRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PassphraseRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool on_device = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_on_device(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PassphraseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.common.PassphraseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool on_device = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_on_device(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &on_device_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.common.PassphraseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.common.PassphraseRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PassphraseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.common.PassphraseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool on_device = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->on_device(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.common.PassphraseRequest)
}

::google::protobuf::uint8* PassphraseRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.common.PassphraseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool on_device = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->on_device(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.common.PassphraseRequest)
  return target;
}

size_t PassphraseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.common.PassphraseRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool on_device = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PassphraseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.common.PassphraseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PassphraseRequest* source =
      ::google::protobuf::DynamicCastToGenerated<PassphraseRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.common.PassphraseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.common.PassphraseRequest)
    MergeFrom(*source);
  }
}

void PassphraseRequest::MergeFrom(const PassphraseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.common.PassphraseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_on_device()) {
    set_on_device(from.on_device());
  }
}

void PassphraseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.common.PassphraseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PassphraseRequest::CopyFrom(const PassphraseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.common.PassphraseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PassphraseRequest::IsInitialized() const {
  return true;
}

void PassphraseRequest::Swap(PassphraseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PassphraseRequest::InternalSwap(PassphraseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(on_device_, other->on_device_);
}

::google::protobuf::Metadata PassphraseRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dcommon_2eproto);
  return ::file_level_metadata_messages_2dcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PassphraseAck::InitAsDefaultInstance() {
}
class PassphraseAck::HasBitSetters {
 public:
  static void set_has_passphrase(PassphraseAck* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_state(PassphraseAck* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PassphraseAck::kPassphraseFieldNumber;
const int PassphraseAck::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PassphraseAck::PassphraseAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.common.PassphraseAck)
}
PassphraseAck::PassphraseAck(const PassphraseAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_passphrase()) {
    passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrase_);
  }
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_state()) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.common.PassphraseAck)
}

void PassphraseAck::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PassphraseAck_messages_2dcommon_2eproto.base);
  passphrase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PassphraseAck::~PassphraseAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.common.PassphraseAck)
  SharedDtor();
}

void PassphraseAck::SharedDtor() {
  passphrase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PassphraseAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PassphraseAck& PassphraseAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PassphraseAck_messages_2dcommon_2eproto.base);
  return *internal_default_instance();
}


void PassphraseAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.common.PassphraseAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      passphrase_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      state_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PassphraseAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PassphraseAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string passphrase = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("hw.trezor.messages.common.PassphraseAck.passphrase");
        object = msg->mutable_passphrase();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes state = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PassphraseAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.common.PassphraseAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string passphrase = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passphrase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->passphrase().data(), static_cast<int>(this->passphrase().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hw.trezor.messages.common.PassphraseAck.passphrase");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.common.PassphraseAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.common.PassphraseAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PassphraseAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.common.PassphraseAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string passphrase = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passphrase().data(), static_cast<int>(this->passphrase().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.common.PassphraseAck.passphrase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->passphrase(), output);
  }

  // optional bytes state = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.common.PassphraseAck)
}

::google::protobuf::uint8* PassphraseAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.common.PassphraseAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string passphrase = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passphrase().data(), static_cast<int>(this->passphrase().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hw.trezor.messages.common.PassphraseAck.passphrase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->passphrase(), target);
  }

  // optional bytes state = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.common.PassphraseAck)
  return target;
}

size_t PassphraseAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.common.PassphraseAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string passphrase = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->passphrase());
    }

    // optional bytes state = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PassphraseAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.common.PassphraseAck)
  GOOGLE_DCHECK_NE(&from, this);
  const PassphraseAck* source =
      ::google::protobuf::DynamicCastToGenerated<PassphraseAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.common.PassphraseAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.common.PassphraseAck)
    MergeFrom(*source);
  }
}

void PassphraseAck::MergeFrom(const PassphraseAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.common.PassphraseAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      passphrase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passphrase_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
  }
}

void PassphraseAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.common.PassphraseAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PassphraseAck::CopyFrom(const PassphraseAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.common.PassphraseAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PassphraseAck::IsInitialized() const {
  return true;
}

void PassphraseAck::Swap(PassphraseAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PassphraseAck::InternalSwap(PassphraseAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  passphrase_.Swap(&other->passphrase_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata PassphraseAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dcommon_2eproto);
  return ::file_level_metadata_messages_2dcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PassphraseStateRequest::InitAsDefaultInstance() {
}
class PassphraseStateRequest::HasBitSetters {
 public:
  static void set_has_state(PassphraseStateRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PassphraseStateRequest::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PassphraseStateRequest::PassphraseStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.common.PassphraseStateRequest)
}
PassphraseStateRequest::PassphraseStateRequest(const PassphraseStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_state()) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.common.PassphraseStateRequest)
}

void PassphraseStateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PassphraseStateRequest_messages_2dcommon_2eproto.base);
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PassphraseStateRequest::~PassphraseStateRequest() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.common.PassphraseStateRequest)
  SharedDtor();
}

void PassphraseStateRequest::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PassphraseStateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PassphraseStateRequest& PassphraseStateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PassphraseStateRequest_messages_2dcommon_2eproto.base);
  return *internal_default_instance();
}


void PassphraseStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.common.PassphraseStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    state_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PassphraseStateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PassphraseStateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes state = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_state();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PassphraseStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.common.PassphraseStateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.common.PassphraseStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.common.PassphraseStateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PassphraseStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.common.PassphraseStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes state = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.common.PassphraseStateRequest)
}

::google::protobuf::uint8* PassphraseStateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.common.PassphraseStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes state = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.common.PassphraseStateRequest)
  return target;
}

size_t PassphraseStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.common.PassphraseStateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes state = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PassphraseStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.common.PassphraseStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PassphraseStateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<PassphraseStateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.common.PassphraseStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.common.PassphraseStateRequest)
    MergeFrom(*source);
  }
}

void PassphraseStateRequest::MergeFrom(const PassphraseStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.common.PassphraseStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    _has_bits_[0] |= 0x00000001u;
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void PassphraseStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.common.PassphraseStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PassphraseStateRequest::CopyFrom(const PassphraseStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.common.PassphraseStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PassphraseStateRequest::IsInitialized() const {
  return true;
}

void PassphraseStateRequest::Swap(PassphraseStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PassphraseStateRequest::InternalSwap(PassphraseStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata PassphraseStateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dcommon_2eproto);
  return ::file_level_metadata_messages_2dcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PassphraseStateAck::InitAsDefaultInstance() {
}
class PassphraseStateAck::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PassphraseStateAck::PassphraseStateAck()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.common.PassphraseStateAck)
}
PassphraseStateAck::PassphraseStateAck(const PassphraseStateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.common.PassphraseStateAck)
}

void PassphraseStateAck::SharedCtor() {
}

PassphraseStateAck::~PassphraseStateAck() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.common.PassphraseStateAck)
  SharedDtor();
}

void PassphraseStateAck::SharedDtor() {
}

void PassphraseStateAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PassphraseStateAck& PassphraseStateAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PassphraseStateAck_messages_2dcommon_2eproto.base);
  return *internal_default_instance();
}


void PassphraseStateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.common.PassphraseStateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PassphraseStateAck::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PassphraseStateAck*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PassphraseStateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.common.PassphraseStateAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.common.PassphraseStateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.common.PassphraseStateAck)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PassphraseStateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.common.PassphraseStateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.common.PassphraseStateAck)
}

::google::protobuf::uint8* PassphraseStateAck::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.common.PassphraseStateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.common.PassphraseStateAck)
  return target;
}

size_t PassphraseStateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.common.PassphraseStateAck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PassphraseStateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.common.PassphraseStateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const PassphraseStateAck* source =
      ::google::protobuf::DynamicCastToGenerated<PassphraseStateAck>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.common.PassphraseStateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.common.PassphraseStateAck)
    MergeFrom(*source);
  }
}

void PassphraseStateAck::MergeFrom(const PassphraseStateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.common.PassphraseStateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PassphraseStateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.common.PassphraseStateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PassphraseStateAck::CopyFrom(const PassphraseStateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.common.PassphraseStateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PassphraseStateAck::IsInitialized() const {
  return true;
}

void PassphraseStateAck::Swap(PassphraseStateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PassphraseStateAck::InternalSwap(PassphraseStateAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata PassphraseStateAck::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dcommon_2eproto);
  return ::file_level_metadata_messages_2dcommon_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HDNodeType::InitAsDefaultInstance() {
}
class HDNodeType::HasBitSetters {
 public:
  static void set_has_depth(HDNodeType* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_fingerprint(HDNodeType* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_child_num(HDNodeType* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_chain_code(HDNodeType* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_private_key(HDNodeType* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_public_key(HDNodeType* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDNodeType::kDepthFieldNumber;
const int HDNodeType::kFingerprintFieldNumber;
const int HDNodeType::kChildNumFieldNumber;
const int HDNodeType::kChainCodeFieldNumber;
const int HDNodeType::kPrivateKeyFieldNumber;
const int HDNodeType::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDNodeType::HDNodeType()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:hw.trezor.messages.common.HDNodeType)
}
HDNodeType::HDNodeType(const HDNodeType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chain_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chain_code()) {
    chain_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chain_code_);
  }
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_private_key()) {
    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_key()) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  ::memcpy(&depth_, &from.depth_,
    static_cast<size_t>(reinterpret_cast<char*>(&child_num_) -
    reinterpret_cast<char*>(&depth_)) + sizeof(child_num_));
  // @@protoc_insertion_point(copy_constructor:hw.trezor.messages.common.HDNodeType)
}

void HDNodeType::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HDNodeType_messages_2dcommon_2eproto.base);
  chain_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&depth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&child_num_) -
      reinterpret_cast<char*>(&depth_)) + sizeof(child_num_));
}

HDNodeType::~HDNodeType() {
  // @@protoc_insertion_point(destructor:hw.trezor.messages.common.HDNodeType)
  SharedDtor();
}

void HDNodeType::SharedDtor() {
  chain_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  private_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HDNodeType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HDNodeType& HDNodeType::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HDNodeType_messages_2dcommon_2eproto.base);
  return *internal_default_instance();
}


void HDNodeType::Clear() {
// @@protoc_insertion_point(message_clear_start:hw.trezor.messages.common.HDNodeType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      chain_code_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      private_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      public_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&depth_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&child_num_) -
        reinterpret_cast<char*>(&depth_)) + sizeof(child_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HDNodeType::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HDNodeType*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 depth = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_depth(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 fingerprint = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_fingerprint(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 child_num = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_child_num(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required bytes chain_code = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_chain_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes private_key = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_private_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes public_key = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_public_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HDNodeType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hw.trezor.messages.common.HDNodeType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 depth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_depth(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 fingerprint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_fingerprint(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fingerprint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 child_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_child_num(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &child_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes chain_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_chain_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes private_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_private_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes public_key = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_public_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hw.trezor.messages.common.HDNodeType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hw.trezor.messages.common.HDNodeType)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HDNodeType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hw.trezor.messages.common.HDNodeType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 depth = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->depth(), output);
  }

  // required uint32 fingerprint = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fingerprint(), output);
  }

  // required uint32 child_num = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->child_num(), output);
  }

  // required bytes chain_code = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->chain_code(), output);
  }

  // optional bytes private_key = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->private_key(), output);
  }

  // optional bytes public_key = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->public_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hw.trezor.messages.common.HDNodeType)
}

::google::protobuf::uint8* HDNodeType::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:hw.trezor.messages.common.HDNodeType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 depth = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->depth(), target);
  }

  // required uint32 fingerprint = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fingerprint(), target);
  }

  // required uint32 child_num = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->child_num(), target);
  }

  // required bytes chain_code = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->chain_code(), target);
  }

  // optional bytes private_key = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->private_key(), target);
  }

  // optional bytes public_key = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->public_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hw.trezor.messages.common.HDNodeType)
  return target;
}

size_t HDNodeType::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hw.trezor.messages.common.HDNodeType)
  size_t total_size = 0;

  if (has_chain_code()) {
    // required bytes chain_code = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->chain_code());
  }

  if (has_depth()) {
    // required uint32 depth = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->depth());
  }

  if (has_fingerprint()) {
    // required uint32 fingerprint = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fingerprint());
  }

  if (has_child_num()) {
    // required uint32 child_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->child_num());
  }

  return total_size;
}
size_t HDNodeType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hw.trezor.messages.common.HDNodeType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000039) ^ 0x00000039) == 0) {  // All required fields are present.
    // required bytes chain_code = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->chain_code());

    // required uint32 depth = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->depth());

    // required uint32 fingerprint = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fingerprint());

    // required uint32 child_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->child_num());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional bytes private_key = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->private_key());
    }

    // optional bytes public_key = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->public_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HDNodeType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hw.trezor.messages.common.HDNodeType)
  GOOGLE_DCHECK_NE(&from, this);
  const HDNodeType* source =
      ::google::protobuf::DynamicCastToGenerated<HDNodeType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hw.trezor.messages.common.HDNodeType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hw.trezor.messages.common.HDNodeType)
    MergeFrom(*source);
  }
}

void HDNodeType::MergeFrom(const HDNodeType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hw.trezor.messages.common.HDNodeType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      chain_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chain_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
    }
    if (cached_has_bits & 0x00000008u) {
      depth_ = from.depth_;
    }
    if (cached_has_bits & 0x00000010u) {
      fingerprint_ = from.fingerprint_;
    }
    if (cached_has_bits & 0x00000020u) {
      child_num_ = from.child_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HDNodeType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hw.trezor.messages.common.HDNodeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDNodeType::CopyFrom(const HDNodeType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hw.trezor.messages.common.HDNodeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDNodeType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000039) != 0x00000039) return false;
  return true;
}

void HDNodeType::Swap(HDNodeType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDNodeType::InternalSwap(HDNodeType* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  chain_code_.Swap(&other->chain_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  private_key_.Swap(&other->private_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  public_key_.Swap(&other->public_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(depth_, other->depth_);
  swap(fingerprint_, other->fingerprint_);
  swap(child_num_, other->child_num_);
}

::google::protobuf::Metadata HDNodeType::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2dcommon_2eproto);
  return ::file_level_metadata_messages_2dcommon_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::common::Success* Arena::CreateMaybeMessage< ::hw::trezor::messages::common::Success >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::common::Success >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::common::Failure* Arena::CreateMaybeMessage< ::hw::trezor::messages::common::Failure >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::common::Failure >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::common::ButtonRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::common::ButtonRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::common::ButtonRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::common::ButtonAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::common::ButtonAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::common::ButtonAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::common::PinMatrixRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::common::PinMatrixRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::common::PinMatrixRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::common::PinMatrixAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::common::PinMatrixAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::common::PinMatrixAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::common::PassphraseRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::common::PassphraseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::common::PassphraseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::common::PassphraseAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::common::PassphraseAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::common::PassphraseAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::common::PassphraseStateRequest* Arena::CreateMaybeMessage< ::hw::trezor::messages::common::PassphraseStateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::common::PassphraseStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::common::PassphraseStateAck* Arena::CreateMaybeMessage< ::hw::trezor::messages::common::PassphraseStateAck >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::common::PassphraseStateAck >(arena);
}
template<> PROTOBUF_NOINLINE ::hw::trezor::messages::common::HDNodeType* Arena::CreateMaybeMessage< ::hw::trezor::messages::common::HDNodeType >(Arena* arena) {
  return Arena::CreateInternal< ::hw::trezor::messages::common::HDNodeType >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
